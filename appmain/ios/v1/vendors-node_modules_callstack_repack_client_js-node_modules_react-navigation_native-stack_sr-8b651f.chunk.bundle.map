{"version":3,"file":"vendors-node_modules_callstack_repack_client_js-node_modules_react-navigation_native-stack_sr-8b651f.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/@react-navigation/elements/src/assets/back-icon-mask.png","webpack:///./node_modules/@react-navigation/elements/src/assets/back-icon.png","webpack:///./node_modules/@callstack/repack/client.js","webpack:///../../../src/modules/ScriptManager/Script.ts","webpack:///../../../src/modules/ScriptManager/ScriptManager.ts","webpack:///../../../src/modules/ScriptManager/federated.ts","webpack:///../../../src/modules/ScriptManager/getWebpackContext.ts","webpack:///../../../src/modules/ScriptManager/index.ts","webpack:///./node_modules/@react-navigation/core/node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/@react-navigation/core/node_modules/react-is/index.js","webpack:///./node_modules/@react-navigation/core/src/BaseNavigationContainer.tsx","webpack:///./node_modules/@react-navigation/core/src/CurrentRenderContext.tsx","webpack:///./node_modules/@react-navigation/core/src/EnsureSingleNavigator.tsx","webpack:///./node_modules/@react-navigation/core/src/Group.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationBuilderContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationContainerRefContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationHelpersContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationRouteContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationStateContext.tsx","webpack:///./node_modules/@react-navigation/core/src/PreventRemoveContext.tsx","webpack:///./node_modules/@react-navigation/core/src/PreventRemoveProvider.tsx","webpack:///./node_modules/@react-navigation/core/src/SceneView.tsx","webpack:///./node_modules/@react-navigation/core/src/Screen.tsx","webpack:///./node_modules/@react-navigation/core/src/StaticContainer.tsx","webpack:///./node_modules/@react-navigation/core/src/UnhandledActionContext.tsx","webpack:///./node_modules/@react-navigation/core/src/checkDuplicateRouteNames.tsx","webpack:///./node_modules/@react-navigation/core/src/checkSerializable.tsx","webpack:///./node_modules/@react-navigation/core/src/createNavigationContainerRef.tsx","webpack:///./node_modules/@react-navigation/core/src/createNavigatorFactory.tsx","webpack:///./node_modules/@react-navigation/core/src/findFocusedRoute.tsx","webpack:///./node_modules/@react-navigation/core/src/fromEntries.tsx","webpack:///./node_modules/@react-navigation/core/src/getActionFromState.tsx","webpack:///./node_modules/@react-navigation/core/src/getFocusedRouteNameFromRoute.tsx","webpack:///./node_modules/@react-navigation/core/src/getPathFromState.tsx","webpack:///./node_modules/@react-navigation/core/src/getStateFromPath.tsx","webpack:///./node_modules/@react-navigation/core/src/index.tsx","webpack:///./node_modules/@react-navigation/core/src/isArrayEqual.tsx","webpack:///./node_modules/@react-navigation/core/src/isRecordEqual.tsx","webpack:///./node_modules/@react-navigation/core/src/types.tsx","webpack:///./node_modules/@react-navigation/core/src/useChildListeners.tsx","webpack:///./node_modules/@react-navigation/core/src/useComponent.tsx","webpack:///./node_modules/@react-navigation/core/src/useCurrentRender.tsx","webpack:///./node_modules/@react-navigation/core/src/useDescriptors.tsx","webpack:///./node_modules/@react-navigation/core/src/useEventEmitter.tsx","webpack:///./node_modules/@react-navigation/core/src/useFocusEffect.tsx","webpack:///./node_modules/@react-navigation/core/src/useFocusEvents.tsx","webpack:///./node_modules/@react-navigation/core/src/useFocusedListenersChildrenAdapter.tsx","webpack:///./node_modules/@react-navigation/core/src/useIsFocused.tsx","webpack:///./node_modules/@react-navigation/core/src/useKeyedChildListeners.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigation.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationBuilder.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationCache.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationContainerRef.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationHelpers.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationState.tsx","webpack:///./node_modules/@react-navigation/core/src/useOnAction.tsx","webpack:///./node_modules/@react-navigation/core/src/useOnGetState.tsx","webpack:///./node_modules/@react-navigation/core/src/useOnPreventRemove.tsx","webpack:///./node_modules/@react-navigation/core/src/useOnRouteFocus.tsx","webpack:///./node_modules/@react-navigation/core/src/useOptionsGetters.tsx","webpack:///./node_modules/@react-navigation/core/src/usePreventRemove.tsx","webpack:///./node_modules/@react-navigation/core/src/usePreventRemoveContext.tsx","webpack:///./node_modules/@react-navigation/core/src/useRegisterNavigator.tsx","webpack:///./node_modules/@react-navigation/core/src/useRoute.tsx","webpack:///./node_modules/@react-navigation/core/src/useRouteCache.tsx","webpack:///./node_modules/@react-navigation/core/src/useScheduleUpdate.tsx","webpack:///./node_modules/@react-navigation/core/src/useSyncState.tsx","webpack:///./node_modules/@react-navigation/core/src/validatePathConfig.tsx","webpack:///./node_modules/@react-navigation/elements/src/Background.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/Header.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderBackButton.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderBackContext.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderBackground.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderHeightContext.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderShownContext.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderTitle.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/getDefaultHeaderHeight.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/getHeaderTitle.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/useHeaderHeight.tsx","webpack:///./node_modules/@react-navigation/elements/src/MaskedView.ios.tsx","webpack:///./node_modules/@react-navigation/elements/src/MaskedViewNative.tsx","webpack:///./node_modules/@react-navigation/elements/src/MissingIcon.tsx","webpack:///./node_modules/@react-navigation/elements/src/PlatformPressable.tsx","webpack:///./node_modules/@react-navigation/elements/src/ResourceSavingView.tsx","webpack:///./node_modules/@react-navigation/elements/src/SafeAreaProviderCompat.tsx","webpack:///./node_modules/@react-navigation/elements/src/Screen.tsx","webpack:///./node_modules/@react-navigation/elements/src/getNamedContext.tsx","webpack:///./node_modules/@react-navigation/elements/src/index.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/index.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/navigators/createNativeStackNavigator.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useDismissedRouteError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useInvalidPreventRemoveError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/DebugContainer.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/FontProcessor.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/HeaderConfig.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/NativeStackView.native.tsx","webpack:///./node_modules/@react-navigation/native/src/Link.tsx","webpack:///./node_modules/@react-navigation/native/src/LinkingContext.tsx","webpack:///./node_modules/@react-navigation/native/src/NavigationContainer.tsx","webpack:///./node_modules/@react-navigation/native/src/ServerContainer.tsx","webpack:///./node_modules/@react-navigation/native/src/ServerContext.tsx","webpack:///./node_modules/@react-navigation/native/src/extractPathFromURL.tsx","webpack:///./node_modules/@react-navigation/native/src/index.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/DarkTheme.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/DefaultTheme.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/ThemeContext.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/ThemeProvider.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/useTheme.tsx","webpack:///./node_modules/@react-navigation/native/src/useBackButton.tsx","webpack:///./node_modules/@react-navigation/native/src/useDocumentTitle.native.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinkBuilder.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinkProps.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinkTo.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinking.native.tsx","webpack:///./node_modules/@react-navigation/native/src/useScrollToTop.tsx","webpack:///./node_modules/@react-navigation/native/src/useThenable.tsx","webpack:///./node_modules/@react-navigation/routers/src/BaseRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/CommonActions.tsx","webpack:///./node_modules/@react-navigation/routers/src/DrawerRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/StackRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/TabRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/index.tsx","webpack:///./node_modules/react-freeze/src/index.tsx","webpack:///./node_modules/react-native-safe-area-context/src/InitialWindow.native.ts","webpack:///./node_modules/react-native-safe-area-context/src/NativeSafeAreaProvider.tsx","webpack:///./node_modules/react-native-safe-area-context/src/SafeAreaContext.tsx","webpack:///./node_modules/react-native-safe-area-context/src/SafeAreaView.tsx","webpack:///./node_modules/react-native-safe-area-context/src/index.tsx","webpack:///./node_modules/react-native-safe-area-context/src/specs/NativeSafeAreaContext.ts","webpack:///./node_modules/react-native-safe-area-context/src/specs/NativeSafeAreaProvider.ts","webpack:///./node_modules/react-native-safe-area-context/src/specs/NativeSafeAreaView.ts","webpack:///./node_modules/react-native-screens/src/TransitionProgressContext.tsx","webpack:///./node_modules/react-native-screens/src/index.native.tsx","webpack:///./node_modules/react-native-screens/src/useTransitionProgress.tsx","webpack:///./node_modules/react-native-screens/src/utils.ts","webpack:///./node_modules/react-native/Libraries/Image/AssetRegistry.js","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/escape-string-regexp/index.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/filter-obj/index.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/shallowequal/index.js","webpack:///./node_modules/split-on-first/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/use-latest-callback/lib/index.js","webpack:///./node_modules/warn-once/index.js","webpack:///./node_modules/nanoid/non-secure/index.cjs"],"sourcesContent":["var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\nmodule.exports = AssetRegistry.registerAsset({\n  __packager_asset: true,\n  scales: [1],\n  name: \"back-icon-mask\",\n  type: \"png\",\n  hash: \"bf17fd999fa971098b6161af8bebeaa8\",\n  httpServerLocation: \"assets/node_modules/@react-navigation/elements/src/assets\",\n  \n  height: 85,\n  width: 50,\n});","var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\nmodule.exports = AssetRegistry.registerAsset({\n  __packager_asset: true,\n  scales: [1,1.5,2,3,4],\n  name: \"back-icon\",\n  type: \"png\",\n  hash: \"2623a5cbd9a8c52cf9f809b4908c8597,1cf29e911f2b322af8ee45c2847fc720,76ab2f94e6290355c3d8c8f708416e82,646a771468c21911ca866dc3f7a7dded,4ecb41d8442e1436a0bdf2589b3d1e47\",\n  httpServerLocation: \"assets/node_modules/@react-navigation/elements/src/assets\",\n  \n  height: 96,\n  width: 96,\n});","export * from './dist/modules/ScriptManager';\n","/* globals Headers, FormData */\n\nimport shallowEqual from 'shallowequal';\nimport type {\n  NormalizedScriptLocator,\n  ScriptLocator,\n  WebpackContext,\n} from './types';\n\n/**\n * Representation of a Script to load and execute, used by {@link ScriptManager}.\n *\n * When adding resolvers to `ScriptManager` in `ScriptManager.shared.addResolver(...)`, you can use\n * `Script.getDevServerURL(...)`, `Script.getFileSystemURL(...)` or `Script.getRemoteURL(...)`\n * to create a `url` for the script.\n *\n * Other methods are designed for internal use only.\n */\nexport class Script {\n  static DEFAULT_TIMEOUT = 30000; // 30s\n\n  /**\n   * Get URL of a script hosted on development server.\n   *\n   * @param scriptId Id of the script.\n   */\n  static getDevServerURL(scriptId: string) {\n    return (webpackContext: WebpackContext) =>\n      `${webpackContext.p}${webpackContext.u(scriptId)}`;\n  }\n\n  /**\n   * Get URL of a script stored on filesystem on the target mobile device.\n   *\n   * @param scriptId Id of the script.\n   */\n  static getFileSystemURL(scriptId: string) {\n    return (webpackContext: WebpackContext) =>\n      webpackContext.u(`file:///${scriptId}`);\n  }\n\n  /**\n   * Get URL of a script hosted on a remote server.\n   *\n   * By default `.chunk.bundle` extension will be added to the URL.\n   * If your script has different extension, you should pass `{ excludeExtension: true }` as 2nd argument.\n   *\n   * @param url A URL to remote location where the script is stored.\n   * @param options Additional options.\n   */\n  static getRemoteURL(\n    url: string,\n    options: { excludeExtension?: boolean } = {}\n  ) {\n    if (options.excludeExtension) {\n      return url;\n    }\n\n    return (webpackContext: WebpackContext) => webpackContext.u(url);\n  }\n\n  /**\n   * Create new instance of `Script` from non-normalized script locator data.\n   *\n   * @param locator Non-normalized locator data.\n   * @param fetch Initial flag for whether script should be fetched or not.\n   *\n   * @internal\n   */\n  static from(\n    key: { scriptId: string; caller?: string },\n    locator: ScriptLocator,\n    fetch: boolean\n  ) {\n    const headers: Record<string, string> = {};\n    new Headers(locator.headers).forEach((value: string, key: string) => {\n      headers[key.toLowerCase()] = value;\n    });\n\n    let body: NormalizedScriptLocator['body'];\n    if (locator.body instanceof FormData) {\n      const bodyObject: Record<string, string> = {};\n      locator.body.forEach((value, key) => {\n        if (typeof value === 'string') {\n          bodyObject[key] = value;\n        } else {\n          console.warn('Script does not support File as FormData key in body');\n        }\n      });\n      body = JSON.stringify(bodyObject);\n    } else if (locator.body instanceof URLSearchParams) {\n      const bodyObject: Record<string, string> = {};\n      locator.body.forEach((value, key) => {\n        bodyObject[key] = value;\n      });\n      body = JSON.stringify(bodyObject);\n    } else {\n      body = locator.body ?? undefined;\n    }\n\n    if (typeof locator.url === 'function') {\n      throw new Error('Property url as a function is not support');\n    }\n\n    return new Script(\n      key.scriptId,\n      key.caller,\n      {\n        method: locator.method ?? 'GET',\n        url: locator.url,\n        absolute: locator.absolute ?? false,\n        timeout: locator.timeout ?? Script.DEFAULT_TIMEOUT,\n        query: new URLSearchParams(locator.query).toString() || undefined,\n        body,\n        headers: Object.keys(headers).length ? headers : undefined,\n        fetch: locator.cache === false ? true : fetch,\n      },\n      locator.cache\n    );\n  }\n\n  /**\n   * Constructs new representation of a script.\n   *\n   * @param locator Normalized locator data.\n   * @param cache Flag whether use cache or not, `true` by default.\n   *\n   * @internal\n   */\n  constructor(\n    public readonly scriptId: string,\n    public readonly caller: string | undefined,\n    public readonly locator: NormalizedScriptLocator,\n    public readonly cache: boolean = true\n  ) {}\n\n  /**\n   * Check if the script should be fetched again or reused,\n   * based on previous cached data.\n   *\n   * @param cachedData Cached data for the same script.\n   *\n   * @internal\n   */\n  shouldRefetch(\n    cachedData: Pick<\n      NormalizedScriptLocator,\n      'method' | 'url' | 'query' | 'headers' | 'body'\n    >\n  ) {\n    if (!this.cache) {\n      return true;\n    }\n\n    const diffs = [\n      cachedData.method !== this.locator.method,\n      cachedData.url !== this.locator.url,\n      cachedData.query !== this.locator.query,\n      !shallowEqual(cachedData.headers, this.locator.headers),\n      cachedData.body !== this.locator.body,\n    ];\n\n    return diffs.some((diff) => diff);\n  }\n\n  /**\n   * Get object to store in cache.\n   *\n   * @internal\n   */\n  getCacheData() {\n    return {\n      method: this.locator.method,\n      url: this.locator.url,\n      query: this.locator.query,\n      headers: this.locator.headers,\n      body: this.locator.body,\n    };\n  }\n\n  toObject() {\n    return {\n      scriptId: this.scriptId,\n      caller: this.caller,\n      locator: this.locator,\n      cache: this.cache,\n    };\n  }\n}\n","/* globals __DEV__, __webpack_require__ */\nimport EventEmitter from 'events';\nimport { NativeModules } from 'react-native';\nimport { getWebpackContext } from './getWebpackContext';\nimport { Script } from './Script';\nimport type {\n  NormalizedScriptLocator,\n  ScriptLocatorResolver,\n  StorageApi,\n} from './types';\n\ntype Cache = Record<\n  string,\n  Pick<NormalizedScriptLocator, 'method' | 'url' | 'query' | 'headers' | 'body'>\n>;\n\nconst CACHE_KEY = `Repack.ScriptManager.Cache.v3.${\n  __DEV__ ? 'debug' : 'release'\n}`;\n\n/* Options for resolver when adding it to a `ScriptManager`. */\nexport interface ResolverOptions {\n  /**\n   * Priority of the resolver. Defaults to `2`.\n   * Resolvers are called based on the highest priority,\n   * so higher the number, the higher priority the resolver gets.\n   */\n  priority?: number;\n}\n\n/**\n * A manager to ease resolution, downloading and executing additional code from:\n * - arbitrary JavaScript scripts\n * - Webpack chunks\n * - Webpack bundles\n * - Webpack MF containers\n *\n * ScriptManager is globally available under `ScriptManager.shared` in main bundle, chunks and containers.\n *\n * Use `ScriptManager.shared` instead of creating new instance of `ScriptManager`.\n *\n * This API is mainly useful, if you are working with any form of Code Splitting.\n *\n * `ScriptManager` is also an `EventEmitter` and emits the following events:\n * - `resolving` with `{ scriptId, caller }`\n * - `resolved` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `prefetching` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `loading` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `loaded` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `error` with `error: Error`\n *\n * Example of using this API with async Webpack chunk:\n * ```js\n * import * as React from 'react';\n * import { ScriptManager, Script } from '@callstack/repack/client';\n *\n * ScriptManager.shared.addResolver(async (scriptId) => {\n *   if (__DEV__) {\n *     return {\n *       url: Script.getDevServerURL(scriptId);\n *       cache: false,\n *     };\n *   }\n *\n *   return {\n *     url: Script.getRemoteURL(`http://domain.exaple/apps/${scriptId}`),\n *   };\n * });\n *\n * // ScriptManager.shared.loadScript is called internally when running `import()`\n * const TeacherModule = React.lazy(() => import('./Teacher.js'));\n * const StudentModule = React.lazy(() => import('./Student.js'));\n *\n * export function App({ role }) {\n *   if (role === 'teacher') {\n *     return <TeacherModule />;\n *   }\n *\n *   return <StudentModule />\n * }\n * ```\n */\nexport class ScriptManager extends EventEmitter {\n  static get shared(): ScriptManager {\n    if (!__webpack_require__.repack.shared.scriptManager) {\n      __webpack_require__.repack.shared.scriptManager = new ScriptManager();\n    }\n    return __webpack_require__.repack.shared.scriptManager;\n  }\n\n  protected cache: Cache = {};\n  protected cacheInitialized = false;\n  protected resolvers: [number, ScriptLocatorResolver][] = [];\n  protected storage?: StorageApi;\n\n  /**\n   * Constructs instance of `ScriptManager`.\n   *\n   * __Should not be called directly__ - use `ScriptManager.shared`.\n   *\n   * @internal\n   */\n  protected constructor(\n    private nativeScriptManager = NativeModules.ScriptManager\n  ) {\n    super();\n\n    if (!nativeScriptManager) {\n      throw new Error(\n        'repack react-native module was not found.' +\n          (__DEV__ ? ' Did you forget to update native dependencies?' : '')\n      );\n    }\n\n    if (__webpack_require__.repack.shared.scriptManager) {\n      throw new Error(\n        'ScriptManager was already instantiated. Use ScriptManager.shared instead.'\n      );\n    }\n\n    __webpack_require__.repack.shared.loadScriptCallback.push = ((\n      parentPush: typeof Array.prototype.push,\n      ...data: string[][]\n    ) => {\n      const [[scriptId, caller]] = data;\n      this.emit('__loaded__', { scriptId, caller });\n      return parentPush(...data);\n    }).bind(\n      null,\n      __webpack_require__.repack.shared.loadScriptCallback.push.bind(\n        __webpack_require__.repack.shared.loadScriptCallback\n      )\n    );\n\n    __webpack_require__.repack.shared.scriptManager = this;\n  }\n\n  __destroy() {\n    __webpack_require__.repack.shared.scriptManager = undefined;\n    __webpack_require__.repack.shared.loadScriptCallback.push =\n      Array.prototype.push.bind(\n        __webpack_require__.repack.shared.loadScriptCallback\n      );\n  }\n\n  /**\n   * Sets a storage backend to cache resolved scripts locator data.\n   *\n   * The stored data is used to detect if scripts locator data of previously downloaded\n   * script hasn't changed to avoid over-fetching the script.\n   *\n   * @param storage Implementation of storage functions.\n   */\n  setStorage(storage?: StorageApi) {\n    this.storage = storage;\n  }\n\n  /**\n   * Adds new script locator resolver.\n   *\n   * Resolver is an async function to resolve script locator data - in other words, it's a function to\n   * tell the {@link ScriptManager} how to fetch the script.\n   *\n   * There's no limitation on what logic you can run inside this function - it can include:\n   * - fetching/loading remote config\n   * - fetching/loading feature flags\n   * - fetching/loading A/B testing data\n   * - calling native modules\n   * - running arbitrary logic\n   *\n   * @param resolver Resolver function to add.\n   * @param options Resolver options.\n   */\n  addResolver(\n    resolver: ScriptLocatorResolver,\n    { priority = 2 }: ResolverOptions = {}\n  ) {\n    this.resolvers = this.resolvers\n      .concat([[priority, resolver]])\n      .sort(([a], [b]) => b - a);\n  }\n\n  /**\n   * Removes previously added resolver.\n   *\n   * @param resolver Resolver function to remove.\n   * @returns `true` if resolver was found and removed, `false` otherwise.\n   */\n  removeResolver(resolver: ScriptLocatorResolver): boolean {\n    const index = this.resolvers.findIndex(([, item]) => item === resolver);\n    if (index > -1) {\n      this.resolvers.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes all previously added resolvers.\n   */\n  removeAllResolvers() {\n    this.resolvers = [];\n  }\n\n  protected async initCache() {\n    if (!this.cacheInitialized) {\n      const cache: Cache | null | undefined = JSON.parse(\n        (await this.storage?.getItem(CACHE_KEY)) ?? '{}'\n      );\n      this.cache = cache ?? {};\n      this.cacheInitialized = true;\n    }\n  }\n\n  protected async saveCache() {\n    await this.storage?.setItem(CACHE_KEY, JSON.stringify(this.cache));\n  }\n\n  protected handleError(error: any, message: string, ...args: any[]): never {\n    console.error(message, ...args, { originalError: error });\n    this.emit('error', { message, args, originalError: error });\n    throw error;\n  }\n\n  /**\n   * Resolves a {@link Script} instance with normalized locator data.\n   *\n   * Resolution will use previously added (via `ScriptManager.shared.addResolver(...)`) resolvers\n   * in series, util one returns a locator data or will throw if no resolver handled the request.\n   *\n   * Use `ScriptManager.shared.on('resolving', ({ scriptId, caller }) => { })` to listen for when\n   * the script resolution begins.\n   *\n   * Use `ScriptManager.shared.on('resolved', (script) => { })` to listen for when\n   * the script's locator data is resolved.\n   *\n   * @param scriptId Id of the script to resolve.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async resolveScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ): Promise<Script> {\n    await this.initCache();\n    try {\n      if (!this.resolvers.length) {\n        throw new Error(\n          'No script resolvers were added. Did you forget to call `ScriptManager.shared.addResolver(...)`?'\n        );\n      }\n\n      this.emit('resolving', { scriptId, caller });\n\n      let locator;\n      for (const [, resolve] of this.resolvers) {\n        locator = await resolve(scriptId, caller);\n        if (locator) {\n          break;\n        }\n      }\n\n      if (!locator) {\n        throw new Error(`No resolver was able to resolve script ${scriptId}`);\n      }\n\n      if (typeof locator.url === 'function') {\n        locator.url = locator.url(webpackContext);\n      }\n\n      const script = Script.from({ scriptId, caller }, locator, false);\n      const cacheKey = `${scriptId}_${caller ?? 'unknown'}`;\n\n      if (!this.cache[cacheKey]) {\n        script.locator.fetch = true;\n        this.cache[cacheKey] = script.getCacheData();\n        await this.saveCache();\n      } else if (script.shouldRefetch(this.cache[cacheKey])) {\n        script.locator.fetch = true;\n        this.cache[cacheKey] = script.getCacheData();\n        await this.saveCache();\n      }\n\n      this.emit('resolved', script.toObject());\n\n      return script;\n    } catch (error) {\n      this.handleError(\n        error,\n        '[ScriptManager] Failed while resolving script locator:',\n        { scriptId, caller }\n      );\n    }\n  }\n\n  /**\n   * Resolves given script's location, downloads and executes it.\n   * The execution of the code is handled internally by threading in React Native.\n   *\n   * Use `ScriptManager.shared.on('loading', (script) => { })` to listen for when\n   * the script is about to be loaded.\n   *\n   * Use `ScriptManager.shared.on('loaded', (script) => { })` to listen for when\n   * the script is loaded.\n   *\n   * @param scriptId Id of the script to load.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async loadScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ) {\n    let script = await this.resolveScript(scriptId, caller, webpackContext);\n    return await new Promise<void>((resolve, reject) => {\n      (async () => {\n        const onLoaded = (data: { scriptId: string; caller?: string }) => {\n          if (data.scriptId === scriptId && data.caller === caller) {\n            this.emit('loaded', script.toObject());\n            resolve();\n          }\n        };\n\n        try {\n          this.emit('loading', script.toObject());\n          this.on('__loaded__', onLoaded);\n          await this.nativeScriptManager.loadScript(scriptId, script.locator);\n        } catch (error) {\n          const { code } = error as Error & { code: string };\n          this.handleError(\n            error,\n            '[ScriptManager] Failed to load script:',\n            code ? `[${code}]` : '',\n            script.toObject()\n          );\n        } finally {\n          this.removeListener('__loaded__', onLoaded);\n        }\n      })().catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Resolves given script's location and downloads it without executing.\n   * This function can be awaited to detect if the script was downloaded and for error handling.\n   *\n   * Use `ScriptManager.shared.on('prefetching', (script) => { })` to listen for when\n   * the script's prefetch beings.\n   *\n   * @param scriptId Id of the script to prefetch.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async prefetchScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ) {\n    let script = await this.resolveScript(scriptId, caller, webpackContext);\n\n    try {\n      this.emit('prefetching', script.toObject());\n      await this.nativeScriptManager.prefetchScript(scriptId, script.locator);\n    } catch (error) {\n      const { code } = error as Error & { code: string };\n      this.handleError(\n        error,\n        '[ScriptManager] Failed to prefetch script:',\n        code ? `[${code}]` : '',\n        script.toObject()\n      );\n    }\n  }\n\n  /**\n   * Clears the cache (if configured in {@link ScriptManager.setStorage}) and removes downloaded\n   * files for given scripts from the filesystem. This function can be awaited to detect if the\n   * scripts were invalidated and for error handling.\n   *\n   * Use `ScriptManager.shared.on('invalidated', (scriptIds) => { })` to listen for when\n   * the invalidation completes.\n   *\n   * @param scriptIds Array of script ids to clear from cache and remove from filesystem.\n   */\n  async invalidateScripts(scriptIds: string[] = []) {\n    try {\n      await this.initCache();\n      const ids = scriptIds ?? Object.keys(this.cache);\n\n      for (const scriptId of ids) {\n        delete this.cache[scriptId];\n      }\n      await this.saveCache();\n\n      await this.nativeScriptManager.invalidateScripts(ids);\n      this.emit('invalidated', ids);\n    } catch (error) {\n      const { code } = error as Error & { code: string };\n      this.handleError(\n        error,\n        '[ScriptManager] Failed to invalidate scripts:',\n        code ? `[${code}]` : ''\n      );\n    }\n  }\n}\n","import { ScriptManager } from './ScriptManager';\nimport type { WebpackContext } from './types';\n\n/**\n * Namespace for runtime utilities for Module Federation.\n */\nexport namespace Federated {\n  /**\n   * Resolves URL to a container or a chunk when using Module Federation,\n   * based on given `scriptId` and `caller`.\n   */\n  export type URLResolver = (\n    scriptId: string,\n    caller?: string\n  ) => string | ((webpackContext: WebpackContext) => string) | undefined;\n\n  /**\n   * Configuration options for {@link createURLResolver} for Module Federation.\n   * Allows to configure how created {@link URLResolver} will behave.\n   */\n  export interface URLResolverConfig {\n    /**\n     * A Module Federation container names to URL templates mapping.\n     *\n     * The key in the object is a container name and the value is a template\n     * that will be used to resolve a URL.\n     *\n     * Accepted template params:\n     * - `[name]` - Container name\n     * - `[ext]` - Container extension, eg: `.container.bundle`\n     *\n     * You can omit `[ext]`, if you're using custom extension, in which case, you should\n     * provide extension explicitly. When using custom extension, it's recommended to\n     * provide a URL template for chunks as well using `chunks` property.\n     *\n     * @example\n     * ```ts\n     * {\n     *   containers: {\n     *     app1: 'http://localhost:9000/[name][ext]'\n     *   }\n     * }\n     * ```\n     */\n    containers: Record<string, string>;\n\n    /**\n     * An optional Module Federation container names to URL templates mapping.\n     *\n     * The key in the object is a container names and the value is a template\n     * that will be used to resolve a __chunk__ URL for that container.\n     *\n     * Specifying this property is useful if:\n     * - containers have custom extension (different from `.container.bundle`)\n     * - chunks have custom extensions (different from `.chunk.bundle`)\n     * - chunks have different URL that containers\n     *\n     * When this property is left unspecified, the template URLs are inferred from\n     * `containers` property. The following:\n     * ```\n     * {\n     *   containers: {\n     *     app1: 'http://localhost:9000/[name][ext]\n     *     app2: 'http://localhost:9000/[name].js\n     *   },\n     * }\n     * ```\n     * is equivalent to:\n     * ```ts\n     * {\n     *   containers: {\n     *     app1: 'http://localhost:9000/[name][ext]',\n     *     app2: 'http://localhost:9000/[name].js',\n     *   },\n     *   chunks: {\n     *     app1: 'http://localhost:9000/[name][ext]',\n     *     app2: 'http://localhost:9000/[name].js',\n     *   },\n     * }\n     * ```\n     *\n     * Accepted template params:\n     * - `[name]` - Container name\n     * - `[ext]` - Chunk extension, eg: `.chunk.bundle`\n     *\n     * @example\n     * ```ts\n     * {\n     *   containers: {\n     *     app1: 'http://localhost:9000/[name].container.js',\n     *   },\n     *   chunks: {\n     *     app1: 'http://localhost:9000/chunks/[name][ext]',\n     *   }\n     * }\n     * ```\n     */\n    chunks?: Record<string, string>;\n  }\n\n  /**\n   * Creates URL resolver for Module Federation from provided config.\n   *\n   * @example\n   * ```ts\n   * import { ScriptManager, Script, Federated } from '@callstack/repack/client';\n   *\n   * const resolveURL = Federated.createURLResolver({\n   *   containers: {\n   *     app1: 'http://localhost:9001/[name][ext]',\n   *     app2: 'http://localhost:9002/[name].container.js',\n   *   },\n   *   chunks: {\n   *     app2: 'http://localhost:9002/chunks/[name][ext]',\n   *   },\n   * });\n   *\n   * ScriptManager.shared.addResolver(async (scriptId, caller) => {\n   *   let url;\n   *   if (caller === 'main') {\n   *     url = __DEV__\n   *       ? Script.getDevServerURL(scriptId)\n   *       : Script.getRemoteURL(`http://localhost:9000/${scriptId}`);\n   *   } else {\n   *     url = resolveURL(scriptId, caller);\n   *   }\n   *\n   *   if (!url) {\n   *     return undefined;\n   *   }\n   *\n   *   return {\n   *     url,\n   *     query: {\n   *       platform: Platform.OS,\n   *     },\n   *   };\n   * });\n   * ```\n   *\n   * `createURLResolver` is a abstraction over {@link Script.getRemoteURL},\n   * for example:\n   * ```ts\n   * import { ScriptManager, Federated } from '@callstack/repack/client';\n   *\n   * ScriptManager.shared.addResolver((scriptId, caller) => {\n   *   const resolveURL = Federated.createURLResolver({\n   *     containers: {\n   *       app1: 'http://localhost:9000/[name][ext]',\n   *     },\n   *   });\n   *\n   *   return {\n   *     url: resolveURL(scriptId, caller);\n   *   };\n   * });\n   * ```\n   * is equivalent to:\n   * ```ts\n   * import { ScriptManager, Script } from '@callstack/repack/client';\n   *\n   * ScriptManager.shared.addResolver(async (scriptId, caller) => {\n   *   if (scriptId === 'app1') {\n   *     return {\n   *       url: 'http://localhost:9000/app1.container.bundle',\n   *     };\n   *   }\n   *\n   *   if (caller === 'app1') {\n   *     return {\n   *       url: Script.getRemoteURL(`http://localhost:9000/${scriptId}`),\n   *     };\n   *   }\n   * });\n   * ```\n   *\n   * @param config Configuration for the resolver.\n   * @returns A resolver function which will try to resolve URL based on given `scriptId` and `caller`.\n   */\n  export function createURLResolver(\n    config: Federated.URLResolverConfig\n  ): Federated.URLResolver {\n    const resolvers: Record<string, Federated.URLResolver> = {};\n\n    for (const key in config.containers) {\n      resolvers[key] = (scriptId: string, caller?: string) => {\n        if (scriptId === key) {\n          const url = config.containers[key]\n            .replace(/\\[name\\]/g, scriptId)\n            .replace(/\\[ext\\]/g, '.container.bundle');\n          return url;\n        }\n\n        if (caller === key) {\n          const url = (config.chunks?.[key] ?? config.containers[key]).replace(\n            /\\[name\\]/g,\n            scriptId\n          );\n\n          if (url.includes('[ext]')) {\n            return (webpackContext: WebpackContext) =>\n              webpackContext.u(url.replace(/\\[ext\\]/g, ''));\n          }\n\n          return url;\n        }\n\n        return undefined;\n      };\n    }\n\n    return (scriptId, caller) => {\n      const resolver =\n        (caller ? resolvers[caller] : undefined) ?? resolvers[scriptId];\n\n      return resolver(scriptId, caller);\n    };\n  }\n\n  declare function __webpack_init_sharing__(scope: string): Promise<void>;\n  declare var __webpack_share_scopes__: Record<string, any>;\n  declare var self: Record<string, any>;\n\n  /**\n   * Dynamically imports module from a Module Federation container. Similar to `import('file')`, but\n   * specific to Module Federation. Calling `importModule` will create an async boundary.\n   *\n   * Container will be evaluated only once. If you use `importModule` for the same container twice,\n   * the container will be loaded and evaluated only on the first import.\n   *\n   * Under the hood, `importModule` will call `ScriptManager.shared.loadScript(containerName)`.\n   * This means, a resolver must be added with `ScriptManager.shared.addResolver(...)` beforehand and provided proper\n   * resolution logic to resolve URL based on the `containerName`.\n   *\n   * @param containerName Name of the container - should be the same name provided to\n   * `webpack.container.ModuleFederationPlugin` in `library.name`.\n   * @param module Full name with extension of the module to import from the container - only modules\n   * exposed in `exposes` in `webpack.container.ModuleFederationPlugin` can be used.\n   * @param scope Optional, scope for sharing modules between containers. Defaults to `'default'`.\n   * @returns Exports of given `module` from given container.\n   *\n   * @example\n   * ```ts\n   * import * as React from 'react';\n   * import { Federated } from '@callstack/repack/client';\n   *\n   * const Button = React.lazy(() => Federated.importModule('my-components', './Button.js'));\n   *\n   * const myUtil = await Federated.importModule('my-lib', './myUtil.js');\n   * ```\n   */\n  export async function importModule<Exports = any>(\n    containerName: string,\n    module: string,\n    scope: string = 'default'\n  ): Promise<Exports> {\n    if (\n      !__webpack_share_scopes__[scope] ||\n      !__webpack_share_scopes__[scope].__isInitialized\n    ) {\n      // Initializes the share scope.\n      // This fills it with known provided modules from this build and all remotes.\n      await __webpack_init_sharing__(scope);\n      __webpack_share_scopes__[scope].__isInitialized = true;\n    }\n\n    // Do not use `const container = self[containerName];` here. Once container is loaded\n    // `container` reference is not updated, so `container.__isInitialized`\n    // will crash the application, because of reading property from `undefined`.\n    if (!self[containerName]) {\n      // Download and execute container\n      await ScriptManager.shared.loadScript(containerName);\n    }\n\n    const container = self[containerName];\n\n    if (!container.__isInitialized) {\n      container.__isInitialized = true;\n      // Initialize the container, it may provide shared modules\n      await container.init(__webpack_share_scopes__[scope]);\n    }\n\n    const factory = await container.get(module);\n    const exports = factory();\n    return exports;\n  }\n}\n","/* globals __webpack_require__ */\n\nimport type { WebpackContext } from './types';\n\n/**\n * Get Webpack runtime context form current JavaScript scope.\n *\n * __You likely don't need to use it.__\n */\nexport function getWebpackContext(): WebpackContext {\n  return __webpack_require__;\n}\n","export * from './ScriptManager';\nexport * from './Script';\nexport * from './types';\nexport * from './getWebpackContext';\nexport { Federated } from './federated';\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import {\n  CommonActions,\n  InitialState,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport checkDuplicateRouteNames from './checkDuplicateRouteNames';\nimport checkSerializable from './checkSerializable';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport findFocusedRoute from './findFocusedRoute';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport useChildListeners from './useChildListeners';\nimport useEventEmitter from './useEventEmitter';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useSyncState from './useSyncState';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst serializableWarnings: string[] = [];\nconst duplicateNameWarnings: string[] = [];\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef<ParamListBase>>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [state, getState, setState, scheduleUpdate, flushUpdates] =\n      useSyncState<State>(() =>\n        getPartialState(initialState == null ? undefined : initialState)\n      );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = React.useCallback(\n      (\n        action:\n          | NavigationAction\n          | ((state: NavigationState) => NavigationAction)\n      ) => {\n        if (listeners.focus[0] == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) => navigation.dispatch(action));\n        }\n      },\n      [listeners.focus]\n    );\n\n    const canGoBack = React.useCallback(() => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    }, [listeners.focus]);\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) =>\n            navigation.dispatch({\n              ...CommonActions.reset(state),\n              target,\n            })\n          );\n        }\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      const state = getRootState();\n\n      if (state == null) {\n        return undefined;\n      }\n\n      const route = findFocusedRoute(state);\n\n      return route as Route<string> | undefined;\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    const navigation: NavigationContainerRef<ParamListBase> = React.useMemo(\n      () => ({\n        ...Object.keys(CommonActions).reduce<any>((acc, name) => {\n          acc[name] = (...args: any[]) =>\n            // @ts-expect-error: this is ok\n            dispatch(CommonActions[name](...args));\n          return acc;\n        }, {}),\n        ...emitter.create('root'),\n        dispatch,\n        resetRoot,\n        isFocused: () => true,\n        canGoBack,\n        getParent: () => undefined,\n        getState: () => stateRef.current,\n        getRootState,\n        getCurrentRoute,\n        getCurrentOptions,\n        isReady: () => listeners.focus[0] != null,\n      }),\n      [\n        canGoBack,\n        dispatch,\n        emitter,\n        getCurrentOptions,\n        getCurrentRoute,\n        getRootState,\n        listeners.focus,\n        resetRoot,\n      ]\n    );\n\n    React.useImperativeHandle(ref, () => navigation, [navigation]);\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({\n          type: '__unsafe_action__',\n          data: { action, noop, stack: stackRef.current },\n        });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options: object) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const stackRef = React.useRef<string | undefined>();\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n        stackRef,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n    const stateRef = React.useRef(state);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n      stateRef.current = state;\n    });\n\n    React.useEffect(() => {\n      const hydratedState = getRootState();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (hydratedState !== undefined) {\n          const serializableResult = checkSerializable(hydratedState);\n\n          if (!serializableResult.serializable) {\n            const { location, reason } = serializableResult;\n\n            let path = '';\n            let pointer: Record<any, any> = hydratedState;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n\n          const duplicateRouteNamesResult =\n            checkDuplicateRouteNames(hydratedState);\n\n          if (duplicateRouteNamesResult.length) {\n            const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(\n              (locations) => `\\n${locations.join(', ')}`\n            )}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n\n            if (!duplicateNameWarnings.includes(message)) {\n              duplicateNameWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(hydratedState);\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <NavigationContainerRefContext.Provider value={navigation}>\n        <ScheduleUpdateContext.Provider value={scheduleContext}>\n          <NavigationBuilderContext.Provider value={builderContext}>\n            <NavigationStateContext.Provider value={context}>\n              <UnhandledActionContext.Provider\n                value={onUnhandledAction ?? defaultOnUnhandledAction}\n              >\n                <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n              </UnhandledActionContext.Provider>\n            </NavigationStateContext.Provider>\n          </NavigationBuilderContext.Provider>\n        </ScheduleUpdateContext.Provider>\n      </NavigationContainerRefContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n","import * as React from 'react';\n\n/**\n * Context which holds the values for the current navigation tree.\n * Intended for use in SSR. This is not safe to use on the client.\n */\nconst CurrentRenderContext = React.createContext<\n  { options?: object } | undefined\n>(undefined);\n\nexport default CurrentRenderContext;\n","import * as React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\n\nexport const SingleNavigatorContext = React.createContext<\n  | {\n      register(key: string): void;\n      unregister(key: string): void;\n    }\n  | undefined\n>(undefined);\n\n/**\n * Component which ensures that there's only one navigator nested under it.\n */\nexport default function EnsureSingleNavigator({ children }: Props) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n\n  const value = React.useMemo(\n    () => ({\n      register(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (currentKey !== undefined && key !== currentKey) {\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\n        }\n\n        navigatorKeyRef.current = key;\n      },\n      unregister(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (key !== currentKey) {\n          return;\n        }\n\n        navigatorKeyRef.current = undefined;\n      },\n    }),\n    []\n  );\n\n  return (\n    <SingleNavigatorContext.Provider value={value}>\n      {children}\n    </SingleNavigatorContext.Provider>\n  );\n}\n","import type { ParamListBase } from '@react-navigation/routers';\n\nimport type { RouteGroupConfig } from './types';\n\n/**\n * Empty component used for grouping screen configs.\n */\nexport default function Group<\n  ParamList extends ParamListBase,\n  ScreenOptions extends {}\n>(_: RouteGroupConfig<ParamList, ScreenOptions>) {\n  /* istanbul ignore next */\n  return null;\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationHelpers } from './types';\n\nexport type ListenerMap = {\n  action: ChildActionListener;\n  focus: FocusedNavigationListener;\n};\n\nexport type KeyedListenerMap = {\n  getState: GetStateListener;\n  beforeRemove: ChildBeforeRemoveListener;\n};\n\nexport type AddListener = <T extends keyof ListenerMap>(\n  type: T,\n  listener: ListenerMap[T]\n) => void;\n\nexport type AddKeyedListener = <T extends keyof KeyedListenerMap>(\n  type: T,\n  key: string,\n  listener: KeyedListenerMap[T]\n) => void;\n\nexport type ChildActionListener = (\n  action: NavigationAction,\n  visitedNavigators?: Set<string>\n) => boolean;\n\nexport type FocusedNavigationCallback<T> = (\n  navigation: NavigationHelpers<ParamListBase>\n) => T;\n\nexport type FocusedNavigationListener = <T>(\n  callback: FocusedNavigationCallback<T>\n) => {\n  handled: boolean;\n  result: T;\n};\n\nexport type GetStateListener = () => NavigationState;\n\nexport type ChildBeforeRemoveListener = (action: NavigationAction) => boolean;\n\n/**\n * Context which holds the required helpers needed to build nested navigators.\n */\nconst NavigationBuilderContext = React.createContext<{\n  onAction?: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  addListener?: AddListener;\n  addKeyedListener?: AddKeyedListener;\n  onRouteFocus?: (key: string) => void;\n  onDispatchAction: (action: NavigationAction, noop: boolean) => void;\n  onOptionsChange: (options: object) => void;\n  stackRef?: React.MutableRefObject<string | undefined>;\n}>({\n  onDispatchAction: () => undefined,\n  onOptionsChange: () => undefined,\n});\n\nexport default NavigationBuilderContext;\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationContainerRef } from './types';\n\n/**\n * Context which holds the route prop for a screen.\n */\nconst NavigationContainerRefContext = React.createContext<\n  NavigationContainerRef<ParamListBase> | undefined\n>(undefined);\n\nexport default NavigationContainerRefContext;\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationProp } from './types';\n\n/**\n * Context which holds the navigation prop for a screen.\n */\nconst NavigationContext = React.createContext<\n  NavigationProp<ParamListBase> | undefined\n>(undefined);\n\nexport default NavigationContext;\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationHelpers } from './types';\n\n/**\n * Context which holds the navigation helpers of the parent navigator.\n * Navigators should use this context in their view component.\n */\nconst NavigationHelpersContext = React.createContext<\n  NavigationHelpers<ParamListBase> | undefined\n>(undefined);\n\nexport default NavigationHelpersContext;\n","import type { Route } from '@react-navigation/routers';\nimport * as React from 'react';\n\n/**\n * Context which holds the route prop for a screen.\n */\nconst NavigationRouteContext = React.createContext<Route<string> | undefined>(\n  undefined\n);\n\nexport default NavigationRouteContext;\n","import type { NavigationState, PartialState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR =\n  \"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";\n\nexport default React.createContext<{\n  isDefault?: true;\n  state?: NavigationState | PartialState<NavigationState>;\n  getKey: () => string | undefined;\n  setKey: (key: string) => void;\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\n  setState: (\n    state: NavigationState | PartialState<NavigationState> | undefined\n  ) => void;\n  getIsInitial: () => boolean;\n  addOptionsGetter?: (\n    key: string,\n    getter: () => object | undefined | null\n  ) => void;\n}>({\n  isDefault: true,\n\n  get getKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getIsInitial(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n","import * as React from 'react';\n\n/**\n * A type of an object that have a route key as an object key\n * and a value whether to prevent that route.\n */\nexport type PreventedRoutes = Record<string, { preventRemove: boolean }>;\n\nconst PreventRemoveContext = React.createContext<\n  | {\n      preventedRoutes: PreventedRoutes;\n      setPreventRemove: (\n        id: string,\n        routeKey: string,\n        preventRemove: boolean\n      ) => void;\n    }\n  | undefined\n>(undefined);\n\nexport default PreventRemoveContext;\n","import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport PreventRemoveContext, { PreventedRoutes } from './PreventRemoveContext';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype PreventedRoutesMap = Map<\n  string,\n  {\n    routeKey: string;\n    preventRemove: boolean;\n  }\n>;\n\n/**\n * Util function to transform map of prevented routes to a simpler object.\n */\nconst transformPreventedRoutes = (\n  preventedRoutesMap: PreventedRoutesMap\n): PreventedRoutes => {\n  const preventedRoutesToTransform = [...preventedRoutesMap.values()];\n\n  const preventedRoutes = preventedRoutesToTransform.reduce<PreventedRoutes>(\n    (acc, { routeKey, preventRemove }) => {\n      acc[routeKey] = {\n        preventRemove: acc[routeKey]?.preventRemove || preventRemove,\n      };\n      return acc;\n    },\n    {}\n  );\n\n  return preventedRoutes;\n};\n\n/**\n * Component used for managing which routes have to be prevented from removal in native-stack.\n */\nexport default function PreventRemoveProvider({ children }: Props) {\n  const [parentId] = React.useState(() => nanoid());\n  const [preventedRoutesMap, setPreventedRoutesMap] =\n    React.useState<PreventedRoutesMap>(new Map());\n\n  const navigation = React.useContext(NavigationHelpersContext);\n  const route = React.useContext(NavigationRouteContext);\n\n  const preventRemoveContextValue = React.useContext(PreventRemoveContext);\n  // take `setPreventRemove` from parent context - if exist it means we're in a nested context\n  const setParentPrevented = preventRemoveContextValue?.setPreventRemove;\n\n  const setPreventRemove = useLatestCallback(\n    (id: string, routeKey: string, preventRemove: boolean): void => {\n      if (\n        preventRemove &&\n        (navigation == null ||\n          navigation\n            ?.getState()\n            .routes.every((route) => route.key !== routeKey))\n      ) {\n        throw new Error(\n          `Couldn't find a route with the key ${routeKey}. Is your component inside NavigationContent?`\n        );\n      }\n\n      setPreventedRoutesMap((prevPrevented) => {\n        // values haven't changed - do nothing\n        if (\n          routeKey === prevPrevented.get(id)?.routeKey &&\n          preventRemove === prevPrevented.get(id)?.preventRemove\n        ) {\n          return prevPrevented;\n        }\n\n        const nextPrevented = new Map(prevPrevented);\n\n        if (preventRemove) {\n          nextPrevented.set(id, {\n            routeKey,\n            preventRemove,\n          });\n        } else {\n          nextPrevented.delete(id);\n        }\n\n        return nextPrevented;\n      });\n    }\n  );\n\n  const isPrevented = [...preventedRoutesMap.values()].some(\n    ({ preventRemove }) => preventRemove\n  );\n\n  React.useEffect(() => {\n    if (route?.key !== undefined && setParentPrevented !== undefined) {\n      // when route is defined (and setParentPrevented) it means we're in a nested stack\n      // route.key then will be the route key of parent\n      setParentPrevented(parentId, route.key, isPrevented);\n      return () => {\n        setParentPrevented(parentId, route.key, false);\n      };\n    }\n\n    return;\n  }, [parentId, isPrevented, route?.key, setParentPrevented]);\n\n  const value = React.useMemo(\n    () => ({\n      setPreventRemove,\n      preventedRoutes: transformPreventedRoutes(preventedRoutesMap),\n    }),\n    [setPreventRemove, preventedRoutesMap]\n  );\n\n  return (\n    <PreventRemoveContext.Provider value={value}>\n      {children}\n    </PreventRemoveContext.Provider>\n  );\n}\n","import type {\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport type { NavigationProp, RouteConfigComponent } from './types';\nimport useOptionsGetters from './useOptionsGetters';\n\ntype Props<State extends NavigationState, ScreenOptions extends {}> = {\n  screen: RouteConfigComponent<ParamListBase, string> & { name: string };\n  navigation: NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions\n  >;\n  route: Route<string>;\n  routeState: NavigationState | PartialState<NavigationState> | undefined;\n  getState: () => State;\n  setState: (state: State) => void;\n  options: object;\n  clearOptions: () => void;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends {}\n>({\n  screen,\n  route,\n  navigation,\n  routeState,\n  getState,\n  setState,\n  options,\n  clearOptions,\n}: Props<State, ScreenOptions>) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n  const { addOptionsGetter } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation,\n  });\n\n  const setKey = React.useCallback((key: string) => {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find((r) => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map((r) =>\n          r.key === route.key ? { ...r, state: child } : r\n        ),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const isInitialRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  // Clear options set by this screen when it is unmounted\n  React.useEffect(() => {\n    return clearOptions;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n  const context = React.useMemo(\n    () => ({\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    }),\n    [\n      routeState,\n      getCurrentState,\n      setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    ]\n  );\n\n  const ScreenComponent = screen.getComponent\n    ? screen.getComponent()\n    : screen.component;\n\n  return (\n    <NavigationStateContext.Provider value={context}>\n      <EnsureSingleNavigator>\n        <StaticContainer\n          name={screen.name}\n          render={ScreenComponent || screen.children}\n          navigation={navigation}\n          route={route}\n        >\n          {ScreenComponent !== undefined ? (\n            <ScreenComponent navigation={navigation} route={route} />\n          ) : screen.children !== undefined ? (\n            screen.children({ navigation, route })\n          ) : null}\n        </StaticContainer>\n      </EnsureSingleNavigator>\n    </NavigationStateContext.Provider>\n  );\n}\n","import type { NavigationState, ParamListBase } from '@react-navigation/routers';\n\nimport type { EventMapBase, RouteConfig } from './types';\n\n/**\n * Empty component used for specifying route configuration.\n */\nexport default function Screen<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>(_: RouteConfig<ParamList, RouteName, State, ScreenOptions, EventMap>) {\n  /* istanbul ignore next */\n  return null;\n}\n","import * as React from 'react';\n\n/**\n * Component which prevents updates for children if no props changed\n */\nfunction StaticContainer(props: any) {\n  return props.children;\n}\n\nexport default React.memo(StaticContainer, (prevProps: any, nextProps: any) => {\n  const prevPropKeys = Object.keys(prevProps);\n  const nextPropKeys = Object.keys(nextProps);\n\n  if (prevPropKeys.length !== nextPropKeys.length) {\n    return false;\n  }\n\n  for (const key of prevPropKeys) {\n    if (key === 'children') {\n      continue;\n    }\n\n    if (prevProps[key] !== nextProps[key]) {\n      return false;\n    }\n  }\n\n  return true;\n});\n","import type { NavigationAction } from '@react-navigation/routers';\nimport * as React from 'react';\n\nconst UnhandledActionContext = React.createContext<\n  ((action: NavigationAction) => void) | undefined\n>(undefined);\n\nexport default UnhandledActionContext;\n","import type { NavigationState, PartialState } from '@react-navigation/routers';\n\nexport default function checkDuplicateRouteNames(state: NavigationState) {\n  const duplicates: string[][] = [];\n\n  const getRouteNames = (\n    location: string,\n    state: NavigationState | PartialState<NavigationState>\n  ) => {\n    state.routes.forEach((route: typeof state.routes[0]) => {\n      const currentLocation = location\n        ? `${location} > ${route.name}`\n        : route.name;\n\n      route.state?.routeNames?.forEach((routeName) => {\n        if (routeName === route.name) {\n          duplicates.push([\n            currentLocation,\n            `${currentLocation} > ${route.name}`,\n          ]);\n        }\n      });\n\n      if (route.state) {\n        getRouteNames(currentLocation, route.state);\n      }\n    });\n  };\n\n  getRouteNames('', state);\n\n  return duplicates;\n}\n","const checkSerializableWithoutCircularReference = (\n  o: { [key: string]: any },\n  seen: Set<any>,\n  location: (string | number)[]\n):\n  | { serializable: true }\n  | {\n      serializable: false;\n      location: (string | number)[];\n      reason: string;\n    } => {\n  if (\n    o === undefined ||\n    o === null ||\n    typeof o === 'boolean' ||\n    typeof o === 'number' ||\n    typeof o === 'string'\n  ) {\n    return { serializable: true };\n  }\n\n  if (\n    Object.prototype.toString.call(o) !== '[object Object]' &&\n    !Array.isArray(o)\n  ) {\n    return {\n      serializable: false,\n      location,\n      reason: typeof o === 'function' ? 'Function' : String(o),\n    };\n  }\n\n  if (seen.has(o)) {\n    return {\n      serializable: false,\n      reason: 'Circular reference',\n      location,\n    };\n  }\n\n  seen.add(o);\n\n  if (Array.isArray(o)) {\n    for (let i = 0; i < o.length; i++) {\n      const childResult = checkSerializableWithoutCircularReference(\n        o[i],\n        new Set<any>(seen),\n        [...location, i]\n      );\n\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  } else {\n    for (const key in o) {\n      const childResult = checkSerializableWithoutCircularReference(\n        o[key],\n        new Set<any>(seen),\n        [...location, key]\n      );\n\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  }\n\n  return { serializable: true };\n};\n\nexport default function checkSerializable(o: { [key: string]: any }) {\n  return checkSerializableWithoutCircularReference(o, new Set<any>(), []);\n}\n","import { CommonActions } from '@react-navigation/routers';\n\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerRefWithCurrent,\n} from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'isFocused',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const listeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  const removeListener = (\n    event: string,\n    callback: (...args: any[]) => void\n  ) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter((cb) => cb !== callback);\n    }\n  };\n\n  let current: NavigationContainerRef<ParamList> | null = null;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    get current() {\n      return current;\n    },\n    set current(value: NavigationContainerRef<ParamList> | null) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(([event, callbacks]) => {\n          callbacks.forEach((callback) => {\n            value.addListener(\n              event as keyof NavigationContainerEventMap,\n              callback\n            );\n          });\n        });\n      }\n    },\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (current == null) {\n          switch (name) {\n            case 'addListener': {\n              const [event, callback] = args;\n\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n\n              return () => removeListener(event, callback);\n            }\n            case 'removeListener': {\n              const [event, callback] = args;\n\n              removeListener(event, callback);\n              break;\n            }\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n  };\n\n  return ref;\n}\n","import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport type * as React from 'react';\n\nimport Group from './Group';\nimport Screen from './Screen';\nimport type { EventMapBase, TypedNavigator } from './types';\n\n/**\n * Higher order component to create a `Navigator` and `Screen` pair.\n * Custom navigators should wrap the navigator component in `createNavigator` before exporting.\n *\n * @param Navigator The navigtor component to wrap.\n * @returns Factory method to create a `Navigator` and `Screen` pair.\n */\nexport default function createNavigatorFactory<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n  NavigatorComponent extends React.ComponentType<any>\n>(Navigator: NavigatorComponent) {\n  return function <ParamList extends ParamListBase>(): TypedNavigator<\n    ParamList,\n    State,\n    ScreenOptions,\n    EventMap,\n    typeof Navigator\n  > {\n    if (arguments[0] !== undefined) {\n      throw new Error(\n        \"Creating a navigator doesn't take an argument. Maybe you are trying to use React Navigation 4 API? See https://reactnavigation.org/docs/hello-react-navigation for the latest API and guides.\"\n      );\n    }\n\n    return {\n      Navigator,\n      Group,\n      Screen,\n    };\n  };\n}\n","import type { InitialState } from '@react-navigation/routers';\n\nexport default function findFocusedRoute(state: InitialState) {\n  let current: InitialState | undefined = state;\n\n  while (current?.routes[current.index ?? 0].state != null) {\n    current = current.routes[current.index ?? 0].state;\n  }\n\n  const route = current?.routes[current?.index ?? 0];\n\n  return route;\n}\n","// Object.fromEntries is not available in older iOS versions\nexport default function fromEntries<K extends string, V>(\n  entries: (readonly [K, V])[]\n) {\n  return entries.reduce((acc, [k, v]) => {\n    if (acc.hasOwnProperty(k)) {\n      throw new Error(`A value for key '${k}' already exists in the object.`);\n    }\n\n    acc[k] = v;\n    return acc;\n  }, {} as Record<K, V>);\n}\n","import type {\n  CommonActions,\n  NavigationState,\n  ParamListBase,\n  PartialRoute,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\n\nimport type { NavigatorScreenParams, PathConfig, PathConfigMap } from './types';\n\ntype ConfigItem = {\n  initialRouteName?: string;\n  screens?: Record<string, ConfigItem>;\n};\n\ntype Options = {\n  initialRouteName?: string;\n  screens: PathConfigMap<object>;\n};\n\ntype NavigateAction<State extends NavigationState> = {\n  type: 'NAVIGATE';\n  payload: {\n    name: string;\n    params?: NavigatorScreenParams<State>;\n    path?: string;\n  };\n};\n\nexport default function getActionFromState(\n  state: PartialState<NavigationState>,\n  options?: Options\n): NavigateAction<NavigationState> | CommonActions.Action | undefined {\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options\n    ? createNormalizedConfigItem(options as PathConfig<object> | string)\n    : {};\n\n  const routes =\n    state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  if (\n    !(\n      (routes.length === 1 && routes[0].key === undefined) ||\n      (routes.length === 2 &&\n        routes[0].key === undefined &&\n        routes[0].name === normalizedConfig?.initialRouteName &&\n        routes[1].key === undefined)\n    )\n  ) {\n    return {\n      type: 'RESET',\n      payload: state,\n    };\n  }\n\n  const route = state.routes[state.index ?? state.routes.length - 1];\n\n  let current: PartialState<NavigationState> | undefined = route?.state;\n  let config: ConfigItem | undefined = normalizedConfig?.screens?.[route?.name];\n  let params = { ...route.params } as NavigatorScreenParams<\n    ParamListBase,\n    NavigationState\n  >;\n\n  let payload = route\n    ? { name: route.name, path: route.path, params }\n    : undefined;\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    const routes =\n      current.index != null\n        ? current.routes.slice(0, current.index + 1)\n        : current.routes;\n\n    const route: Route<string> | PartialRoute<Route<string>> =\n      routes[routes.length - 1];\n\n    // Explicitly set to override existing value when merging params\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined,\n    });\n\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (\n      routes.length === 2 &&\n      routes[0].key === undefined &&\n      routes[0].name === config?.initialRouteName &&\n      routes[1].key === undefined\n    ) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params = params.params as NavigatorScreenParams<\n        ParamListBase,\n        NavigationState\n      >;\n    } else {\n      params.path = route.path;\n      params.params = route.params;\n    }\n\n    current = route.state;\n    config = config?.screens?.[route.name];\n  }\n\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n\nconst createNormalizedConfigItem = (config: PathConfig<object> | string) =>\n  typeof config === 'object' && config != null\n    ? {\n        initialRouteName: config.initialRouteName,\n        screens:\n          config.screens != null\n            ? createNormalizedConfigs(config.screens)\n            : undefined,\n      }\n    : {};\n\nconst createNormalizedConfigs = (options: PathConfigMap<object>) =>\n  Object.entries(options).reduce<Record<string, ConfigItem>>((acc, [k, v]) => {\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n","import type { Route } from '@react-navigation/routers';\n\nimport { CHILD_STATE } from './useRouteCache';\n\nexport default function getFocusedRouteNameFromRoute(\n  route: Partial<Route<string>>\n): string | undefined {\n  // @ts-expect-error: this isn't in type definitions coz we want this private\n  const state = route[CHILD_STATE] ?? route.state;\n  const params = route.params as { screen?: unknown } | undefined;\n\n  const routeName = state\n    ? // Get the currently active route name in the nested navigator\n      state.routes[\n        // If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n        // The type property will only exist for rehydrated state and not for state from deep link\n        state.index ??\n          (typeof state.type === 'string' && state.type !== 'stack'\n            ? 0\n            : state.routes.length - 1)\n      ].name\n    : // If state doesn't exist, we need to default to `screen` param if available\n    typeof params?.screen === 'string'\n    ? params.screen\n    : undefined;\n\n  return routeName;\n}\n","import type {\n  NavigationState,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as queryString from 'query-string';\n\nimport fromEntries from './fromEntries';\nimport type { PathConfig, PathConfigMap } from './types';\nimport validatePathConfig from './validatePathConfig';\n\ntype Options<ParamList> = {\n  initialRouteName?: string;\n  screens: PathConfigMap<ParamList>;\n};\n\ntype State = NavigationState | Omit<PartialState<NavigationState>, 'stale'>;\n\ntype StringifyConfig = Record<string, (value: any) => string>;\n\ntype ConfigItem = {\n  pattern?: string;\n  stringify?: StringifyConfig;\n  screens?: Record<string, ConfigItem>;\n};\n\nconst getActiveRoute = (state: State): { name: string; params?: object } => {\n  const route =\n    typeof state.index === 'number'\n      ? state.routes[state.index]\n      : state.routes[state.routes.length - 1];\n\n  if (route.state) {\n    return getActiveRoute(route.state);\n  }\n\n  return route;\n};\n\n/**\n * Utility to serialize a navigation state object to a path string.\n *\n * @example\n * ```js\n * getPathFromState(\n *   {\n *     routes: [\n *       {\n *         name: 'Chat',\n *         params: { author: 'Jane', id: 42 },\n *       },\n *     ],\n *   },\n *   {\n *     screens: {\n *       Chat: {\n *         path: 'chat/:author/:id',\n *         stringify: { author: author => author.toLowerCase() }\n *       }\n *     }\n *   }\n * )\n * ```\n *\n * @param state Navigation state to serialize.\n * @param options Extra options to fine-tune how to serialize the path.\n * @returns Path representing the state, e.g. /foo/bar?count=42.\n */\nexport default function getPathFromState<ParamList extends {}>(\n  state: State,\n  options?: Options<ParamList>\n): string {\n  if (state == null) {\n    throw Error(\n      \"Got 'undefined' for the navigation state. You must pass a valid state object.\"\n    );\n  }\n\n  if (options) {\n    validatePathConfig(options);\n  }\n\n  // Create a normalized configs object which will be easier to use\n  const configs: Record<string, ConfigItem> = options?.screens\n    ? createNormalizedConfigs(options?.screens)\n    : {};\n\n  let path = '/';\n  let current: State | undefined = state;\n\n  const allParams: Record<string, any> = {};\n\n  while (current) {\n    let index = typeof current.index === 'number' ? current.index : 0;\n    let route = current.routes[index] as Route<string> & {\n      state?: State;\n    };\n\n    let pattern: string | undefined;\n\n    let focusedParams: Record<string, any> | undefined;\n    let focusedRoute = getActiveRoute(state);\n    let currentOptions = configs;\n\n    // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n    let nestedRouteNames = [];\n\n    let hasNext = true;\n\n    while (route.name in currentOptions && hasNext) {\n      pattern = currentOptions[route.name].pattern;\n\n      nestedRouteNames.push(route.name);\n\n      if (route.params) {\n        const stringify = currentOptions[route.name]?.stringify;\n\n        const currentParams = fromEntries(\n          Object.entries(route.params).map(([key, value]) => [\n            key,\n            stringify?.[key] ? stringify[key](value) : String(value),\n          ])\n        );\n\n        if (pattern) {\n          Object.assign(allParams, currentParams);\n        }\n\n        if (focusedRoute === route) {\n          // If this is the focused route, keep the params for later use\n          // We save it here since it's been stringified already\n          focusedParams = { ...currentParams };\n\n          pattern\n            ?.split('/')\n            .filter((p) => p.startsWith(':'))\n            // eslint-disable-next-line no-loop-func\n            .forEach((p) => {\n              const name = getParamName(p);\n\n              // Remove the params present in the pattern since we'll only use the rest for query string\n              if (focusedParams) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete focusedParams[name];\n              }\n            });\n        }\n      }\n\n      // If there is no `screens` property or no nested state, we return pattern\n      if (!currentOptions[route.name].screens || route.state === undefined) {\n        hasNext = false;\n      } else {\n        index =\n          typeof route.state.index === 'number'\n            ? route.state.index\n            : route.state.routes.length - 1;\n\n        const nextRoute = route.state.routes[index];\n        const nestedConfig = currentOptions[route.name].screens;\n\n        // if there is config for next route name, we go deeper\n        if (nestedConfig && nextRoute.name in nestedConfig) {\n          route = nextRoute as Route<string> & { state?: State };\n          currentOptions = nestedConfig;\n        } else {\n          // If not, there is no sense in going deeper in config\n          hasNext = false;\n        }\n      }\n    }\n\n    if (pattern === undefined) {\n      pattern = nestedRouteNames.join('/');\n    }\n\n    if (currentOptions[route.name] !== undefined) {\n      path += pattern\n        .split('/')\n        .map((p) => {\n          const name = getParamName(p);\n\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (p === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (p.startsWith(':')) {\n            const value = allParams[name];\n\n            if (value === undefined && p.endsWith('?')) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            return encodeURIComponent(value);\n          }\n\n          return encodeURIComponent(p);\n        })\n        .join('/');\n    } else {\n      path += encodeURIComponent(route.name);\n    }\n\n    if (!focusedParams) {\n      focusedParams = focusedRoute.params;\n    }\n\n    if (route.state) {\n      path += '/';\n    } else if (focusedParams) {\n      for (let param in focusedParams) {\n        if (focusedParams[param] === 'undefined') {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete focusedParams[param];\n        }\n      }\n\n      const query = queryString.stringify(focusedParams, { sort: false });\n\n      if (query) {\n        path += `?${query}`;\n      }\n    }\n\n    current = route.state;\n  }\n\n  // Remove multiple as well as trailing slashes\n  path = path.replace(/\\/+/g, '/');\n  path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n  return path;\n}\n\nconst getParamName = (pattern: string) =>\n  pattern.replace(/^:/, '').replace(/\\?$/, '');\n\nconst joinPaths = (...paths: string[]): string =>\n  ([] as string[])\n    .concat(...paths.map((p) => p.split('/')))\n    .filter(Boolean)\n    .join('/');\n\nconst createConfigItem = (\n  config: PathConfig<object> | string,\n  parentPattern?: string\n): ConfigItem => {\n  if (typeof config === 'string') {\n    // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n    const pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n\n    return { pattern };\n  }\n\n  // If an object is specified as the value (e.g. Foo: { ... }),\n  // It can have `path` property and `screens` prop which has nested configs\n  let pattern: string | undefined;\n\n  if (config.exact && config.path === undefined) {\n    throw new Error(\n      \"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\"\n    );\n  }\n\n  pattern =\n    config.exact !== true\n      ? joinPaths(parentPattern || '', config.path || '')\n      : config.path || '';\n\n  const screens = config.screens\n    ? createNormalizedConfigs(config.screens, pattern)\n    : undefined;\n\n  return {\n    // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n    pattern: pattern?.split('/').filter(Boolean).join('/'),\n    stringify: config.stringify,\n    screens,\n  };\n};\n\nconst createNormalizedConfigs = (\n  options: PathConfigMap<object>,\n  pattern?: string\n): Record<string, ConfigItem> =>\n  fromEntries(\n    Object.entries(options).map(([name, c]) => {\n      const result = createConfigItem(c, pattern);\n\n      return [name, result];\n    })\n  );\n","import type {\n  InitialState,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/routers';\nimport escape from 'escape-string-regexp';\nimport * as queryString from 'query-string';\n\nimport findFocusedRoute from './findFocusedRoute';\nimport type { PathConfigMap } from './types';\nimport validatePathConfig from './validatePathConfig';\n\ntype Options<ParamList extends {}> = {\n  initialRouteName?: string;\n  screens: PathConfigMap<ParamList>;\n};\n\ntype ParseConfig = Record<string, (value: string) => any>;\n\ntype RouteConfig = {\n  screen: string;\n  regex?: RegExp;\n  path: string;\n  pattern: string;\n  routeNames: string[];\n  parse?: ParseConfig;\n};\n\ntype InitialRouteConfig = {\n  initialRouteName: string;\n  parentScreens: string[];\n};\n\ntype ResultState = PartialState<NavigationState> & {\n  state?: ResultState;\n};\n\ntype ParsedRoute = {\n  name: string;\n  path?: string;\n  params?: Record<string, any> | undefined;\n};\n\n/**\n * Utility to parse a path string to initial state object accepted by the container.\n * This is useful for deep linking when we need to handle the incoming URL.\n *\n * @example\n * ```js\n * getStateFromPath(\n *   '/chat/jane/42',\n *   {\n *     screens: {\n *       Chat: {\n *         path: 'chat/:author/:id',\n *         parse: { id: Number }\n *       }\n *     }\n *   }\n * )\n * ```\n * @param path Path string to parse and convert, e.g. /foo/bar?count=42.\n * @param options Extra options to fine-tune how to parse the path.\n */\nexport default function getStateFromPath<ParamList extends {}>(\n  path: string,\n  options?: Options<ParamList>\n): ResultState | undefined {\n  if (options) {\n    validatePathConfig(options);\n  }\n\n  let initialRoutes: InitialRouteConfig[] = [];\n\n  if (options?.initialRouteName) {\n    initialRoutes.push({\n      initialRouteName: options.initialRouteName,\n      parentScreens: [],\n    });\n  }\n\n  const screens = options?.screens;\n\n  let remaining = path\n    .replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n    .replace(/^\\//, '') // Remove extra leading slash\n    .replace(/\\?.*$/, ''); // Remove query params which we will handle later\n\n  // Make sure there is a trailing slash\n  remaining = remaining.endsWith('/') ? remaining : `${remaining}/`;\n\n  if (screens === undefined) {\n    // When no config is specified, use the path segments as route names\n    const routes = remaining\n      .split('/')\n      .filter(Boolean)\n      .map((segment) => {\n        const name = decodeURIComponent(segment);\n        return { name };\n      });\n\n    if (routes.length) {\n      return createNestedStateObject(path, routes, initialRoutes);\n    }\n\n    return undefined;\n  }\n\n  // Create a normalized configs array which will be easier to use\n  const configs = ([] as RouteConfig[])\n    .concat(\n      ...Object.keys(screens).map((key) =>\n        createNormalizedConfigs(\n          key,\n          screens as PathConfigMap<object>,\n          [],\n          initialRoutes,\n          []\n        )\n      )\n    )\n    .sort((a, b) => {\n      // Sort config so that:\n      // - the most exhaustive ones are always at the beginning\n      // - patterns with wildcard are always at the end\n\n      // If 2 patterns are same, move the one with less route names up\n      // This is an error state, so it's only useful for consistent error messages\n      if (a.pattern === b.pattern) {\n        return b.routeNames.join('>').localeCompare(a.routeNames.join('>'));\n      }\n\n      // If one of the patterns starts with the other, it's more exhaustive\n      // So move it up\n      if (a.pattern.startsWith(b.pattern)) {\n        return -1;\n      }\n\n      if (b.pattern.startsWith(a.pattern)) {\n        return 1;\n      }\n\n      const aParts = a.pattern.split('/');\n      const bParts = b.pattern.split('/');\n\n      for (let i = 0; i < Math.max(aParts.length, bParts.length); i++) {\n        // if b is longer, b get higher priority\n        if (aParts[i] == null) {\n          return 1;\n        }\n        // if a is longer, a get higher priority\n        if (bParts[i] == null) {\n          return -1;\n        }\n        const aWildCard = aParts[i] === '*' || aParts[i].startsWith(':');\n        const bWildCard = bParts[i] === '*' || bParts[i].startsWith(':');\n        // if both are wildcard we compare next component\n        if (aWildCard && bWildCard) {\n          continue;\n        }\n        // if only a is wild card, b get higher priority\n        if (aWildCard) {\n          return 1;\n        }\n        // if only b is wild card, a get higher priority\n        if (bWildCard) {\n          return -1;\n        }\n      }\n      return bParts.length - aParts.length;\n    });\n\n  // Check for duplicate patterns in the config\n  configs.reduce<Record<string, RouteConfig>>((acc, config) => {\n    if (acc[config.pattern]) {\n      const a = acc[config.pattern].routeNames;\n      const b = config.routeNames;\n\n      // It's not a problem if the path string omitted from a inner most screen\n      // For example, it's ok if a path resolves to `A > B > C` or `A > B`\n      const intersects =\n        a.length > b.length\n          ? b.every((it, i) => a[i] === it)\n          : a.every((it, i) => b[i] === it);\n\n      if (!intersects) {\n        throw new Error(\n          `Found conflicting screens with the same pattern. The pattern '${\n            config.pattern\n          }' resolves to both '${a.join(' > ')}' and '${b.join(\n            ' > '\n          )}'. Patterns must be unique and cannot resolve to more than one screen.`\n        );\n      }\n    }\n\n    return Object.assign(acc, {\n      [config.pattern]: config,\n    });\n  }, {});\n\n  if (remaining === '/') {\n    // We need to add special handling of empty path so navigation to empty path also works\n    // When handling empty path, we should only look at the root level config\n    const match = configs.find(\n      (config) =>\n        config.path === '' &&\n        config.routeNames.every(\n          // Make sure that none of the parent configs have a non-empty path defined\n          (name) => !configs.find((c) => c.screen === name)?.path\n        )\n    );\n\n    if (match) {\n      return createNestedStateObject(\n        path,\n        match.routeNames.map((name) => ({ name })),\n        initialRoutes,\n        configs\n      );\n    }\n\n    return undefined;\n  }\n\n  let result: PartialState<NavigationState> | undefined;\n  let current: PartialState<NavigationState> | undefined;\n\n  // We match the whole path against the regex instead of segments\n  // This makes sure matches such as wildcard will catch any unmatched routes, even if nested\n  const { routes, remainingPath } = matchAgainstConfigs(\n    remaining,\n    configs.map((c) => ({\n      ...c,\n      // Add `$` to the regex to make sure it matches till end of the path and not just beginning\n      regex: c.regex ? new RegExp(c.regex.source + '$') : undefined,\n    }))\n  );\n\n  if (routes !== undefined) {\n    // This will always be empty if full path matched\n    current = createNestedStateObject(path, routes, initialRoutes, configs);\n    remaining = remainingPath;\n    result = current;\n  }\n\n  if (current == null || result == null) {\n    return undefined;\n  }\n\n  return result;\n}\n\nconst joinPaths = (...paths: string[]): string =>\n  ([] as string[])\n    .concat(...paths.map((p) => p.split('/')))\n    .filter(Boolean)\n    .join('/');\n\nconst matchAgainstConfigs = (remaining: string, configs: RouteConfig[]) => {\n  let routes: ParsedRoute[] | undefined;\n  let remainingPath = remaining;\n\n  // Go through all configs, and see if the next path segment matches our regex\n  for (const config of configs) {\n    if (!config.regex) {\n      continue;\n    }\n\n    const match = remainingPath.match(config.regex);\n\n    // If our regex matches, we need to extract params from the path\n    if (match) {\n      const matchedParams = config.pattern\n        ?.split('/')\n        .filter((p) => p.startsWith(':'))\n        .reduce<Record<string, any>>(\n          (acc, p, i) =>\n            Object.assign(acc, {\n              // The param segments appear every second item starting from 2 in the regex match result\n              [p]: match![(i + 1) * 2].replace(/\\//, ''),\n            }),\n          {}\n        );\n\n      routes = config.routeNames.map((name) => {\n        const config = configs.find((c) => c.screen === name);\n        const params = config?.path\n          ?.split('/')\n          .filter((p) => p.startsWith(':'))\n          .reduce<Record<string, any>>((acc, p) => {\n            const value = matchedParams[p];\n\n            if (value) {\n              const key = p.replace(/^:/, '').replace(/\\?$/, '');\n              acc[key] = config.parse?.[key] ? config.parse[key](value) : value;\n            }\n\n            return acc;\n          }, {});\n\n        if (params && Object.keys(params).length) {\n          return { name, params };\n        }\n\n        return { name };\n      });\n\n      remainingPath = remainingPath.replace(match[1], '');\n\n      break;\n    }\n  }\n\n  return { routes, remainingPath };\n};\n\nconst createNormalizedConfigs = (\n  screen: string,\n  routeConfig: PathConfigMap<object>,\n  routeNames: string[] = [],\n  initials: InitialRouteConfig[],\n  parentScreens: string[],\n  parentPattern?: string\n): RouteConfig[] => {\n  const configs: RouteConfig[] = [];\n\n  routeNames.push(screen);\n\n  parentScreens.push(screen);\n\n  // @ts-expect-error: we can't strongly typecheck this for now\n  const config = routeConfig[screen];\n\n  if (typeof config === 'string') {\n    // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n    const pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n\n    configs.push(createConfigItem(screen, routeNames, pattern, config));\n  } else if (typeof config === 'object') {\n    let pattern: string | undefined;\n\n    // if an object is specified as the value (e.g. Foo: { ... }),\n    // it can have `path` property and\n    // it could have `screens` prop which has nested configs\n    if (typeof config.path === 'string') {\n      if (config.exact && config.path === undefined) {\n        throw new Error(\n          \"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\"\n        );\n      }\n\n      pattern =\n        config.exact !== true\n          ? joinPaths(parentPattern || '', config.path || '')\n          : config.path || '';\n\n      configs.push(\n        createConfigItem(\n          screen,\n          routeNames,\n          pattern!,\n          config.path,\n          config.parse\n        )\n      );\n    }\n\n    if (config.screens) {\n      // property `initialRouteName` without `screens` has no purpose\n      if (config.initialRouteName) {\n        initials.push({\n          initialRouteName: config.initialRouteName,\n          parentScreens,\n        });\n      }\n\n      Object.keys(config.screens).forEach((nestedConfig) => {\n        const result = createNormalizedConfigs(\n          nestedConfig,\n          config.screens as PathConfigMap<object>,\n          routeNames,\n          initials,\n          [...parentScreens],\n          pattern ?? parentPattern\n        );\n\n        configs.push(...result);\n      });\n    }\n  }\n\n  routeNames.pop();\n\n  return configs;\n};\n\nconst createConfigItem = (\n  screen: string,\n  routeNames: string[],\n  pattern: string,\n  path: string,\n  parse?: ParseConfig\n): RouteConfig => {\n  // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n  pattern = pattern.split('/').filter(Boolean).join('/');\n\n  const regex = pattern\n    ? new RegExp(\n        `^(${pattern\n          .split('/')\n          .map((it) => {\n            if (it.startsWith(':')) {\n              return `(([^/]+\\\\/)${it.endsWith('?') ? '?' : ''})`;\n            }\n\n            return `${it === '*' ? '.*' : escape(it)}\\\\/`;\n          })\n          .join('')})`\n      )\n    : undefined;\n\n  return {\n    screen,\n    regex,\n    pattern,\n    path,\n    // The routeNames array is mutated, so copy it to keep the current state\n    routeNames: [...routeNames],\n    parse,\n  };\n};\n\nconst findParseConfigForRoute = (\n  routeName: string,\n  flatConfig: RouteConfig[]\n): ParseConfig | undefined => {\n  for (const config of flatConfig) {\n    if (routeName === config.routeNames[config.routeNames.length - 1]) {\n      return config.parse;\n    }\n  }\n\n  return undefined;\n};\n\n// Try to find an initial route connected with the one passed\nconst findInitialRoute = (\n  routeName: string,\n  parentScreens: string[],\n  initialRoutes: InitialRouteConfig[]\n): string | undefined => {\n  for (const config of initialRoutes) {\n    if (parentScreens.length === config.parentScreens.length) {\n      let sameParents = true;\n      for (let i = 0; i < parentScreens.length; i++) {\n        if (parentScreens[i].localeCompare(config.parentScreens[i]) !== 0) {\n          sameParents = false;\n          break;\n        }\n      }\n      if (sameParents) {\n        return routeName !== config.initialRouteName\n          ? config.initialRouteName\n          : undefined;\n      }\n    }\n  }\n  return undefined;\n};\n\n// returns state object with values depending on whether\n// it is the end of state and if there is initialRoute for this level\nconst createStateObject = (\n  initialRoute: string | undefined,\n  route: ParsedRoute,\n  isEmpty: boolean\n): InitialState => {\n  if (isEmpty) {\n    if (initialRoute) {\n      return {\n        index: 1,\n        routes: [{ name: initialRoute }, route],\n      };\n    } else {\n      return {\n        routes: [route],\n      };\n    }\n  } else {\n    if (initialRoute) {\n      return {\n        index: 1,\n        routes: [{ name: initialRoute }, { ...route, state: { routes: [] } }],\n      };\n    } else {\n      return {\n        routes: [{ ...route, state: { routes: [] } }],\n      };\n    }\n  }\n};\n\nconst createNestedStateObject = (\n  path: string,\n  routes: ParsedRoute[],\n  initialRoutes: InitialRouteConfig[],\n  flatConfig?: RouteConfig[]\n) => {\n  let state: InitialState;\n  let route = routes.shift() as ParsedRoute;\n  const parentScreens: string[] = [];\n\n  let initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n\n  parentScreens.push(route.name);\n\n  state = createStateObject(initialRoute, route, routes.length === 0);\n\n  if (routes.length > 0) {\n    let nestedState = state;\n\n    while ((route = routes.shift() as ParsedRoute)) {\n      initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n\n      const nestedStateIndex =\n        nestedState.index || nestedState.routes.length - 1;\n\n      nestedState.routes[nestedStateIndex].state = createStateObject(\n        initialRoute,\n        route,\n        routes.length === 0\n      );\n\n      if (routes.length > 0) {\n        nestedState = nestedState.routes[nestedStateIndex]\n          .state as InitialState;\n      }\n\n      parentScreens.push(route.name);\n    }\n  }\n\n  route = findFocusedRoute(state) as ParsedRoute;\n  route.path = path;\n\n  const params = parseQueryParams(\n    path,\n    flatConfig ? findParseConfigForRoute(route.name, flatConfig) : undefined\n  );\n\n  if (params) {\n    route.params = { ...route.params, ...params };\n  }\n\n  return state;\n};\n\nconst parseQueryParams = (\n  path: string,\n  parseConfig?: Record<string, (value: string) => any>\n) => {\n  const query = path.split('?')[1];\n  const params = queryString.parse(query);\n\n  if (parseConfig) {\n    Object.keys(params).forEach((name) => {\n      if (\n        Object.hasOwnProperty.call(parseConfig, name) &&\n        typeof params[name] === 'string'\n      ) {\n        params[name] = parseConfig[name](params[name] as string);\n      }\n    });\n  }\n\n  return Object.keys(params).length ? params : undefined;\n};\n","export { default as BaseNavigationContainer } from './BaseNavigationContainer';\nexport { default as createNavigationContainerRef } from './createNavigationContainerRef';\nexport { default as createNavigatorFactory } from './createNavigatorFactory';\nexport { default as CurrentRenderContext } from './CurrentRenderContext';\nexport { default as findFocusedRoute } from './findFocusedRoute';\nexport { default as getActionFromState } from './getActionFromState';\nexport { default as getFocusedRouteNameFromRoute } from './getFocusedRouteNameFromRoute';\nexport { default as getPathFromState } from './getPathFromState';\nexport { default as getStateFromPath } from './getStateFromPath';\nexport { default as NavigationContainerRefContext } from './NavigationContainerRefContext';\nexport { default as NavigationContext } from './NavigationContext';\nexport { default as NavigationHelpersContext } from './NavigationHelpersContext';\nexport { default as NavigationRouteContext } from './NavigationRouteContext';\nexport { default as PreventRemoveContext } from './PreventRemoveContext';\nexport { default as PreventRemoveProvider } from './PreventRemoveProvider';\nexport * from './types';\nexport { default as useFocusEffect } from './useFocusEffect';\nexport { default as useIsFocused } from './useIsFocused';\nexport { default as useNavigation } from './useNavigation';\nexport { default as useNavigationBuilder } from './useNavigationBuilder';\nexport { default as useNavigationContainerRef } from './useNavigationContainerRef';\nexport { default as useNavigationState } from './useNavigationState';\nexport { default as UNSTABLE_usePreventRemove } from './usePreventRemove';\nexport { default as usePreventRemoveContext } from './usePreventRemoveContext';\nexport { default as useRoute } from './useRoute';\nexport { default as validatePathConfig } from './validatePathConfig';\nexport * from '@react-navigation/routers';\n","/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nexport default function isArrayEqual(a: any[], b: any[]) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return a.every((it, index) => it === b[index]);\n}\n","/**\n * Compare two records with primitive values as the content.\n */\nexport default function isRecordEqual(\n  a: Record<string, any>,\n  b: Record<string, any>\n) {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  return aKeys.every((key) => a[key] === b[key]);\n}\n","import type {\n  DefaultRouterOptions,\n  InitialState,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport type * as React from 'react';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface RootParamList {}\n  }\n}\n\ntype Keyof<T extends {}> = Extract<keyof T, string>;\n\nexport type DefaultNavigatorOptions<\n  ParamList extends ParamListBase,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = DefaultRouterOptions<Keyof<ParamList>> & {\n  /**\n   * Optional ID for the navigator. Can be used with `navigation.getParent(id)` to refer to a parent.\n   */\n  id?: string;\n  /**\n   * Children React Elements to extract the route configuration from.\n   * Only `Screen`, `Group` and `React.Fragment` are supported as children.\n   */\n  children: React.ReactNode;\n  /**\n   * Event listeners for all the screens in the navigator.\n   */\n  screenListeners?:\n    | ScreenListeners<State, EventMap>\n    | ((props: {\n        route: RouteProp<ParamList>;\n        navigation: any;\n      }) => ScreenListeners<State, EventMap>);\n  /**\n   * Default options for all screens under this navigator.\n   */\n  screenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList>;\n        navigation: any;\n      }) => ScreenOptions);\n  /**\n   * Default options specified by the navigator.\n   * It receives the custom options in the arguments if a function is specified.\n   */\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n};\n\nexport type EventMapBase = Record<\n  string,\n  { data?: any; canPreventDefault?: boolean }\n>;\n\nexport type EventMapCore<State extends NavigationState> = {\n  focus: { data: undefined };\n  blur: { data: undefined };\n  state: { data: { state: State } };\n  beforeRemove: { data: { action: NavigationAction }; canPreventDefault: true };\n};\n\nexport type EventArg<\n  EventName extends string,\n  CanPreventDefault extends boolean | undefined = false,\n  Data = undefined\n> = {\n  /**\n   * Type of the event (e.g. `focus`, `blur`)\n   */\n  readonly type: EventName;\n  readonly target?: string;\n} & (CanPreventDefault extends true\n  ? {\n      /**\n       * Whether `event.preventDefault()` was called on this event object.\n       */\n      readonly defaultPrevented: boolean;\n      /**\n       * Prevent the default action which happens on this event.\n       */\n      preventDefault(): void;\n    }\n  : {}) &\n  (undefined extends Data\n    ? { readonly data?: Readonly<Data> }\n    : { readonly data: Readonly<Data> });\n\nexport type EventListenerCallback<\n  EventMap extends EventMapBase,\n  EventName extends keyof EventMap\n> = (\n  e: EventArg<\n    Extract<EventName, string>,\n    EventMap[EventName]['canPreventDefault'],\n    EventMap[EventName]['data']\n  >\n) => void;\n\nexport type EventConsumer<EventMap extends EventMapBase> = {\n  /**\n   * Subscribe to events from the parent navigator.\n   *\n   * @param type Type of the event (e.g. `focus`, `blur`)\n   * @param callback Callback listener which is executed upon receiving the event.\n   */\n  addListener<EventName extends Keyof<EventMap>>(\n    type: EventName,\n    callback: EventListenerCallback<EventMap, EventName>\n  ): () => void;\n  removeListener<EventName extends Keyof<EventMap>>(\n    type: EventName,\n    callback: EventListenerCallback<EventMap, EventName>\n  ): void;\n};\n\nexport type EventEmitter<EventMap extends EventMapBase> = {\n  /**\n   * Emit an event to child screens.\n   *\n   * @param options.type Type of the event (e.g. `focus`, `blur`)\n   * @param [options.data] Optional information regarding the event.\n   * @param [options.target] Key of the target route which should receive the event.\n   * If not specified, all routes receive the event.\n   */\n  emit<EventName extends Keyof<EventMap>>(\n    options: {\n      type: EventName;\n      target?: string;\n    } & (EventMap[EventName]['canPreventDefault'] extends true\n      ? { canPreventDefault: true }\n      : {}) &\n      (undefined extends EventMap[EventName]['data']\n        ? { data?: EventMap[EventName]['data'] }\n        : { data: EventMap[EventName]['data'] })\n  ): EventArg<\n    EventName,\n    EventMap[EventName]['canPreventDefault'],\n    EventMap[EventName]['data']\n  >;\n};\n\nexport class PrivateValueStore<T extends [any, any, any]> {\n  /**\n   * UGLY HACK! DO NOT USE THE TYPE!!!\n   *\n   * TypeScript requires a type to be used to be able to infer it.\n   * The type should exist as its own without any operations such as union.\n   * So we need to figure out a way to store this type in a property.\n   * The problem with a normal property is that it shows up in intelliSense.\n   * Adding private keyword works, but the annotation is stripped away in declaration.\n   * Turns out if we use an empty string, it doesn't show up in intelliSense.\n   */\n  protected ''?: T;\n}\n\ntype NavigationHelpersCommon<\n  ParamList extends ParamListBase,\n  State extends NavigationState = NavigationState\n> = {\n  /**\n   * Dispatch an action or an update function to the router.\n   * The update function will receive the current state,\n   *\n   * @param action Action object or update function.\n   */\n  dispatch(\n    action: NavigationAction | ((state: State) => NavigationAction)\n  ): void;\n\n  /**\n   * Navigate to a route in current navigation tree.\n   *\n   * @param name Name of the route to navigate to.\n   * @param [params] Params object for the route.\n   */\n  navigate<RouteName extends keyof ParamList>(\n    ...args: // this first condition allows us to iterate over a union type\n    // This is to avoid getting a union of all the params from `ParamList[RouteName]`,\n    // which will get our types all mixed up if a union RouteName is passed in.\n    RouteName extends unknown\n      ? // This condition checks if the params are optional,\n        // which means it's either undefined or a union with undefined\n        undefined extends ParamList[RouteName]\n        ?\n            | [screen: RouteName] // if the params are optional, we don't have to provide it\n            | [screen: RouteName, params: ParamList[RouteName]]\n        : [screen: RouteName, params: ParamList[RouteName]]\n      : never\n  ): void;\n\n  /**\n   * Navigate to a route in current navigation tree.\n   *\n   * @param route Object with `key` or `name` for the route to navigate to, and a `params` object.\n   */\n  navigate<RouteName extends keyof ParamList>(\n    options: RouteName extends unknown\n      ?\n          | { key: string; params?: ParamList[RouteName]; merge?: boolean }\n          | {\n              name: RouteName;\n              key?: string;\n              params: ParamList[RouteName];\n              merge?: boolean;\n            }\n      : never\n  ): void;\n\n  /**\n   * Reset the navigation state to the provided state.\n   *\n   * @param state Navigation state object.\n   */\n  reset(state: PartialState<State> | State): void;\n\n  /**\n   * Go back to the previous route in history.\n   */\n  goBack(): void;\n\n  /**\n   * Check if the screen is focused. The method returns `true` if focused, `false` otherwise.\n   * Note that this method doesn't re-render screen when the focus changes. So don't use it in `render`.\n   * To get notified of focus changes, use `addListener('focus', cb)` and `addListener('blur', cb)`.\n   * To conditionally render content based on focus state, use the `useIsFocused` hook.\n   */\n  isFocused(): boolean;\n\n  /**\n   * Check if dispatching back action will be handled by navigation.\n   * Note that this method doesn't re-render screen when the result changes. So don't use it in `render`.\n   */\n  canGoBack(): boolean;\n\n  /**\n   * Returns the name of the navigator specified in the `name` prop.\n   * If no name is specified, returns `undefined`.\n   */\n  getId(): string | undefined;\n\n  /**\n   * Returns the navigation helpers from a parent navigator based on the ID.\n   * If an ID is provided, the navigation helper from the parent navigator with matching ID (including current) will be returned.\n   * If no ID is provided, the navigation helper from the immediate parent navigator will be returned.\n   *\n   * @param id Optional ID of a parent navigator.\n   */\n  getParent<T = NavigationHelpers<ParamListBase> | undefined>(id?: string): T;\n\n  /**\n   * Returns the navigator's state.\n   * Note that this method doesn't re-render screen when the result changes. So don't use it in `render`.\n   */\n  getState(): State;\n} & PrivateValueStore<[ParamList, unknown, unknown]>;\n\nexport type NavigationHelpers<\n  ParamList extends ParamListBase,\n  EventMap extends EventMapBase = {}\n> = NavigationHelpersCommon<ParamList> &\n  EventEmitter<EventMap> & {\n    /**\n     * Update the param object for the route.\n     * The new params will be shallow merged with the old one.\n     *\n     * @param params Params object for the current route.\n     */\n    setParams<RouteName extends keyof ParamList>(\n      params: Partial<ParamList[RouteName]>\n    ): void;\n  };\n\nexport type NavigationContainerProps = {\n  /**\n   * Initial navigation state for the child navigators.\n   */\n  initialState?: InitialState;\n  /**\n   * Callback which is called with the latest navigation state when it changes.\n   */\n  onStateChange?: (state: NavigationState | undefined) => void;\n  /**\n   * Callback which is called when an action is not handled.\n   */\n  onUnhandledAction?: (action: NavigationAction) => void;\n  /**\n   * Whether this navigation container should be independent of parent containers.\n   * If this is not set to `true`, this container cannot be nested inside another container.\n   * Setting it to `true` disconnects any children navigators from parent container.\n   */\n  independent?: boolean;\n  /**\n   * Children elements to render.\n   */\n  children: React.ReactNode;\n};\n\nexport type NavigationProp<\n  ParamList extends {},\n  RouteName extends keyof ParamList = Keyof<ParamList>,\n  NavigatorID extends string | undefined = undefined,\n  State extends NavigationState = NavigationState<ParamList>,\n  ScreenOptions extends {} = {},\n  EventMap extends EventMapBase = {}\n> = Omit<NavigationHelpersCommon<ParamList, State>, 'getParent'> & {\n  /**\n   * Returns the navigation prop from a parent navigator based on the ID.\n   * If an ID is provided, the navigation prop from the parent navigator with matching ID (including current) will be returned.\n   * If no ID is provided, the navigation prop from the immediate parent navigator will be returned.\n   *\n   * @param id Optional ID of a parent navigator.\n   */\n  getParent<T = NavigationProp<ParamListBase> | undefined>(id?: NavigatorID): T;\n\n  /**\n   * Update the param object for the route.\n   * The new params will be shallow merged with the old one.\n   *\n   * @param params Params object for the current route.\n   */\n  setParams(\n    params: ParamList[RouteName] extends undefined\n      ? undefined\n      : Partial<ParamList[RouteName]>\n  ): void;\n\n  /**\n   * Update the options for the route.\n   * The options object will be shallow merged with default options object.\n   *\n   * @param options Options object for the route.\n   */\n  setOptions(options: Partial<ScreenOptions>): void;\n} & EventConsumer<EventMap & EventMapCore<State>> &\n  PrivateValueStore<[ParamList, RouteName, EventMap]>;\n\nexport type RouteProp<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList = Keyof<ParamList>\n> = Route<Extract<RouteName, string>, ParamList[RouteName]>;\n\nexport type CompositeNavigationProp<\n  A extends NavigationProp<ParamListBase, string, any, any, any>,\n  B extends NavigationHelpersCommon<ParamListBase, any>\n> = Omit<A & B, keyof NavigationProp<any>> &\n  NavigationProp<\n    /**\n     * Param list from both navigation objects needs to be combined\n     * For example, we should be able to navigate to screens in both A and B\n     */\n    (A extends NavigationHelpersCommon<infer T> ? T : never) &\n      (B extends NavigationHelpersCommon<infer U> ? U : never),\n    /**\n     * The route name should refer to the route name specified in the first type\n     * Ideally it should work for any of them, but it's not possible to infer that way\n     */\n    A extends NavigationProp<any, infer R> ? R : string,\n    /**\n     * ID from both navigation objects needs to be combined for `getParent`\n     */\n    | (A extends NavigationProp<any, any, infer I> ? I : never)\n    | (B extends NavigationProp<any, any, infer J> ? J : never),\n    /**\n     * The type of state should refer to the state specified in the first type\n     */\n    A extends NavigationProp<any, any, any, infer S> ? S : NavigationState,\n    /**\n     * Screen options from both navigation objects needs to be combined\n     * This allows typechecking `setOptions`\n     */\n    (A extends NavigationProp<any, any, any, any, infer O> ? O : {}) &\n      (B extends NavigationProp<any, any, any, any, infer P> ? P : {}),\n    /**\n     * Event consumer config should refer to the config specified in the first type\n     * This allows typechecking `addListener`/`removeListener`\n     */\n    A extends NavigationProp<any, any, any, any, any, infer E> ? E : {}\n  >;\n\nexport type CompositeScreenProps<\n  A extends {\n    navigation: NavigationProp<\n      ParamListBase,\n      string,\n      string | undefined,\n      any,\n      any,\n      any\n    >;\n    route: RouteProp<ParamListBase>;\n  },\n  B extends {\n    navigation: NavigationHelpersCommon<any, any>;\n  }\n> = {\n  navigation: CompositeNavigationProp<A['navigation'], B['navigation']>;\n  route: A['route'];\n};\n\nexport type Descriptor<\n  ScreenOptions extends {},\n  Navigation extends NavigationProp<any, any, any, any, any, any>,\n  Route extends RouteProp<any, any>\n> = {\n  /**\n   * Render the component associated with this route.\n   */\n  render(): JSX.Element;\n\n  /**\n   * Options for the route.\n   */\n  options: ScreenOptions;\n\n  /**\n   * Route object for the screen\n   */\n  route: Route;\n\n  /**\n   * Navigation object for the screen\n   */\n  navigation: Navigation;\n};\n\nexport type ScreenListeners<\n  State extends NavigationState,\n  EventMap extends EventMapBase\n> = Partial<{\n  [EventName in keyof (EventMap & EventMapCore<State>)]: EventListenerCallback<\n    EventMap,\n    EventName\n  >;\n}>;\n\ntype ScreenComponentType<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList\n> =\n  | React.ComponentType<{\n      route: RouteProp<ParamList, RouteName>;\n      navigation: any;\n    }>\n  | React.ComponentType<{}>;\n\nexport type RouteConfigComponent<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList\n> =\n  | {\n      /**\n       * React component to render for this screen.\n       */\n      component: ScreenComponentType<ParamList, RouteName>;\n      getComponent?: never;\n      children?: never;\n    }\n  | {\n      /**\n       * Lazily get a React component to render for this screen.\n       */\n      getComponent: () => ScreenComponentType<ParamList, RouteName>;\n      component?: never;\n      children?: never;\n    }\n  | {\n      /**\n       * Render callback to render content of this screen.\n       */\n      children: (props: {\n        route: RouteProp<ParamList, RouteName>;\n        navigation: any;\n      }) => React.ReactNode;\n      component?: never;\n      getComponent?: never;\n    };\n\nexport type RouteConfig<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  /**\n   * Optional key for this screen. This doesn't need to be unique.\n   * If the key changes, existing screens with this name will be removed or reset.\n   * Useful when we have some common screens and have conditional rendering.\n   */\n  navigationKey?: string;\n\n  /**\n   * Route name of this screen.\n   */\n  name: RouteName;\n\n  /**\n   * Navigator options for this screen.\n   */\n  options?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList, RouteName>;\n        navigation: any;\n      }) => ScreenOptions);\n\n  /**\n   * Event listeners for this screen.\n   */\n  listeners?:\n    | ScreenListeners<State, EventMap>\n    | ((props: {\n        route: RouteProp<ParamList, RouteName>;\n        navigation: any;\n      }) => ScreenListeners<State, EventMap>);\n\n  /**\n   * Function to return an unique ID for this screen.\n   * Receives an object with the route params.\n   * For a given screen name, there will always be only one screen corresponding to an ID.\n   * If `undefined` is returned, it acts same as no `getId` being specified.\n   */\n  getId?: ({ params }: { params: ParamList[RouteName] }) => string | undefined;\n\n  /**\n   * Initial params object for the route.\n   */\n  initialParams?: Partial<ParamList[RouteName]>;\n} & RouteConfigComponent<ParamList, RouteName>;\n\nexport type RouteGroupConfig<\n  ParamList extends ParamListBase,\n  ScreenOptions extends {}\n> = {\n  /**\n   * Optional key for the screens in this group.\n   * If the key changes, all existing screens in this group will be removed or reset.\n   */\n  navigationKey?: string;\n\n  /**\n   * Navigator options for this screen.\n   */\n  screenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList, keyof ParamList>;\n        navigation: any;\n      }) => ScreenOptions);\n  /**\n   * Children React Elements to extract the route configuration from.\n   * Only `Screen`, `Group` and `React.Fragment` are supported as children.\n   */\n  children: React.ReactNode;\n};\n\nexport type NavigationContainerEventMap = {\n  /**\n   * Event which fires when the navigation state changes.\n   */\n  state: {\n    data: {\n      /**\n       * The updated state object after the state change.\n       */\n      state: NavigationState | PartialState<NavigationState> | undefined;\n    };\n  };\n  /**\n   * Event which fires when current options changes.\n   */\n  options: { data: { options: object } };\n  /**\n   * Event which fires when an action is dispatched.\n   * Only intended for debugging purposes, don't use it for app logic.\n   * This event will be emitted before state changes have been applied.\n   */\n  __unsafe_action__: {\n    data: {\n      /**\n       * The action object which was dispatched.\n       */\n      action: NavigationAction;\n      /**\n       * Whether the action was a no-op, i.e. resulted any state changes.\n       */\n      noop: boolean;\n      /**\n       * Stack trace of the action, this will only be available during development.\n       */\n      stack: string | undefined;\n    };\n  };\n};\n\nexport type NavigationContainerRef<ParamList extends {}> =\n  NavigationHelpers<ParamList> &\n    EventConsumer<NavigationContainerEventMap> & {\n      /**\n       * Reset the navigation state of the root navigator to the provided state.\n       *\n       * @param state Navigation state object.\n       */\n      resetRoot(state?: PartialState<NavigationState> | NavigationState): void;\n      /**\n       * Get the rehydrated navigation state of the navigation tree.\n       */\n      getRootState(): NavigationState;\n      /**\n       * Get the currently focused navigation route.\n       */\n      getCurrentRoute(): Route<string> | undefined;\n      /**\n       * Get the currently focused route's options.\n       */\n      getCurrentOptions(): object | undefined;\n      /**\n       * Whether the navigation container is ready to handle actions.\n       */\n      isReady(): boolean;\n    };\n\nexport type NavigationContainerRefWithCurrent<ParamList extends {}> =\n  NavigationContainerRef<ParamList> & {\n    current: NavigationContainerRef<ParamList> | null;\n  };\n\nexport type TypedNavigator<\n  ParamList extends ParamListBase,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n  Navigator extends React.ComponentType<any>\n> = {\n  /**\n   * Navigator component which manages the child screens.\n   */\n  Navigator: React.ComponentType<\n    Omit<\n      React.ComponentProps<Navigator>,\n      keyof DefaultNavigatorOptions<any, any, any, any>\n    > &\n      DefaultNavigatorOptions<ParamList, State, ScreenOptions, EventMap>\n  >;\n  /**\n   * Component used for grouping multiple route configuration.\n   */\n  Group: React.ComponentType<RouteGroupConfig<ParamList, ScreenOptions>>;\n  /**\n   * Component used for specifying route configuration.\n   */\n  Screen: <RouteName extends keyof ParamList>(\n    _: RouteConfig<ParamList, RouteName, State, ScreenOptions, EventMap>\n  ) => null;\n};\n\nexport type NavigatorScreenParams<\n  ParamList,\n  State extends NavigationState = NavigationState\n> =\n  | {\n      screen?: never;\n      params?: never;\n      initial?: never;\n      path?: string;\n      state: PartialState<State> | State | undefined;\n    }\n  | {\n      [RouteName in keyof ParamList]: undefined extends ParamList[RouteName]\n        ? {\n            screen: RouteName;\n            params?: ParamList[RouteName];\n            initial?: boolean;\n            path?: string;\n            state?: never;\n          }\n        : {\n            screen: RouteName;\n            params: ParamList[RouteName];\n            initial?: boolean;\n            path?: string;\n            state?: never;\n          };\n    }[keyof ParamList];\n\nexport type PathConfig<ParamList extends {}> = {\n  path?: string;\n  exact?: boolean;\n  parse?: Record<string, (value: string) => any>;\n  stringify?: Record<string, (value: any) => string>;\n  screens?: PathConfigMap<ParamList>;\n  initialRouteName?: keyof ParamList;\n};\n\nexport type PathConfigMap<ParamList extends {}> = {\n  [RouteName in keyof ParamList]?: NonNullable<\n    ParamList[RouteName]\n  > extends NavigatorScreenParams<infer T, any>\n    ? string | PathConfig<T>\n    : string | Omit<PathConfig<{}>, 'screens' | 'initialRouteName'>;\n};\n","import * as React from 'react';\n\nimport type { ListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add action listeners.\n */\nexport default function useChildListeners() {\n  const { current: listeners } = React.useRef<{\n    [K in keyof ListenerMap]: ListenerMap[K][];\n  }>({\n    action: [],\n    focus: [],\n  });\n\n  const addListener = React.useCallback(\n    <T extends keyof ListenerMap>(type: T, listener: ListenerMap[T]) => {\n      listeners[type].push(listener);\n\n      let removed = false;\n      return () => {\n        const index = listeners[type].indexOf(listener);\n\n        if (!removed && index > -1) {\n          removed = true;\n          listeners[type].splice(index, 1);\n        }\n      };\n    },\n    [listeners]\n  );\n\n  return {\n    listeners,\n    addListener,\n  };\n}\n","import * as React from 'react';\n\ntype Render = (children: React.ReactNode) => JSX.Element;\n\ntype Props = {\n  render: Render;\n  children: React.ReactNode;\n};\n\nconst NavigationContent = ({ render, children }: Props) => {\n  return render(children);\n};\n\nexport default function useComponent(render: Render) {\n  const renderRef = React.useRef<Render | null>(render);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  renderRef.current = render;\n\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n\n  return React.useRef(({ children }: { children: React.ReactNode }) => {\n    const render = renderRef.current;\n\n    if (render === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    return <NavigationContent render={render}>{children}</NavigationContent>;\n  }).current;\n}\n","import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  NavigationProp,\n  RouteProp,\n} from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: Record<\n    string,\n    Descriptor<object, NavigationProp<ParamListBase>, RouteProp<ParamListBase>>\n  >;\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  AddKeyedListener,\n  AddListener,\n} from './NavigationBuilderContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport SceneView from './SceneView';\nimport type {\n  Descriptor,\n  EventMapBase,\n  NavigationHelpers,\n  NavigationProp,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useNavigationCache from './useNavigationCache';\nimport useRouteCache from './useRouteCache';\n\nexport type ScreenConfigWithParent<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  keys: (string | undefined)[];\n  options: (ScreenOptionsOrCallback<ScreenOptions> | undefined)[] | undefined;\n  props: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n};\n\ntype ScreenOptionsOrCallback<ScreenOptions extends {}> =\n  | ScreenOptions\n  | ((props: {\n      route: RouteProp<ParamListBase, string>;\n      navigation: any;\n    }) => ScreenOptions);\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  state: State;\n  screens: Record<\n    string,\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions?: ScreenOptionsOrCallback<ScreenOptions>;\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport default function useDescriptors<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  defaultScreenOptions,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const [options, setOptions] = React.useState<Record<string, object>>({});\n  const { onDispatchAction, onOptionsChange, stackRef } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    ]\n  );\n\n  const navigations = useNavigationCache<State, ScreenOptions, EventMap>({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  return routes.reduce<\n    Record<\n      string,\n      Descriptor<\n        ScreenOptions,\n        NavigationProp<\n          ParamListBase,\n          string,\n          string | undefined,\n          State,\n          ScreenOptions,\n          EventMap\n        > &\n          ActionHelpers,\n        RouteProp<ParamListBase>\n      >\n    >\n  >((acc, route, i) => {\n    const config = screens[route.name];\n    const screen = config.props;\n    const navigation = navigations[route.key];\n\n    const optionsList = [\n      // The default `screenOptions` passed to the navigator\n      screenOptions,\n      // The `screenOptions` props passed to `Group` elements\n      ...((config.options\n        ? config.options.filter(Boolean)\n        : []) as ScreenOptionsOrCallback<ScreenOptions>[]),\n      // The `options` prop passed to `Screen` elements,\n      screen.options,\n      // The options set via `navigation.setOptions`\n      options[route.key],\n    ];\n\n    const customOptions = optionsList.reduce<ScreenOptions>(\n      (acc, curr) =>\n        Object.assign(\n          acc,\n          typeof curr !== 'function' ? curr : curr({ route, navigation })\n        ),\n      {} as ScreenOptions\n    );\n\n    const mergedOptions = {\n      ...(typeof defaultScreenOptions === 'function'\n        ? // @ts-expect-error: ts gives incorrect error here\n          defaultScreenOptions({\n            route,\n            navigation,\n            options: customOptions,\n          })\n        : defaultScreenOptions),\n      ...customOptions,\n    };\n\n    const clearOptions = () =>\n      setOptions((o) => {\n        if (route.key in o) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { [route.key]: _, ...rest } = o;\n          return rest;\n        }\n\n        return o;\n      });\n\n    acc[route.key] = {\n      route,\n      // @ts-expect-error: it's missing action helpers, fix later\n      navigation,\n      render() {\n        return (\n          <NavigationBuilderContext.Provider key={route.key} value={context}>\n            <NavigationContext.Provider value={navigation}>\n              <NavigationRouteContext.Provider value={route}>\n                <SceneView\n                  navigation={navigation}\n                  route={route}\n                  screen={screen}\n                  routeState={state.routes[i].state}\n                  getState={getState}\n                  setState={setState}\n                  options={mergedOptions}\n                  clearOptions={clearOptions}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          </NavigationBuilderContext.Provider>\n        );\n      },\n      options: mergedOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n}\n","import * as React from 'react';\n\nimport type { EventArg, EventConsumer, EventEmitter } from './types';\n\nexport type NavigationEventEmitter<T extends Record<string, any>> =\n  EventEmitter<T> & {\n    create: (target: string) => EventConsumer<T>;\n  };\n\ntype Listeners = ((e: any) => void)[];\n\n/**\n * Hook to manage the event system used by the navigator to notify screens of various events.\n */\nexport default function useEventEmitter<T extends Record<string, any>>(\n  listen?: (e: any) => void\n): NavigationEventEmitter<T> {\n  const listenRef = React.useRef(listen);\n\n  React.useEffect(() => {\n    listenRef.current = listen;\n  });\n\n  const listeners = React.useRef<Record<string, Record<string, Listeners>>>(\n    Object.create(null)\n  );\n\n  const create = React.useCallback((target: string) => {\n    const removeListener = (type: string, callback: (data: any) => void) => {\n      const callbacks = listeners.current[type]\n        ? listeners.current[type][target]\n        : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      const index = callbacks.indexOf(callback);\n\n      if (index > -1) {\n        callbacks.splice(index, 1);\n      }\n    };\n\n    const addListener = (type: string, callback: (data: any) => void) => {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n\n      let removed = false;\n      return () => {\n        // Prevent removing other listeners when unsubscribing same listener multiple times\n        if (!removed) {\n          removed = true;\n          removeListener(type, callback);\n        }\n      };\n    };\n\n    return {\n      addListener,\n      removeListener,\n    };\n  }, []);\n\n  const emit = React.useCallback(\n    ({\n      type,\n      data,\n      target,\n      canPreventDefault,\n    }: {\n      type: string;\n      data?: any;\n      target?: string;\n      canPreventDefault?: boolean;\n    }) => {\n      const items = listeners.current[type] || {};\n\n      // Copy the current list of callbacks in case they are mutated during execution\n      const callbacks =\n        target !== undefined\n          ? items[target]?.slice()\n          : ([] as Listeners)\n              .concat(...Object.keys(items).map((t) => items[t]))\n              .filter((cb, i, self) => self.lastIndexOf(cb) === i);\n\n      const event: EventArg<any, any, any> = {\n        get type() {\n          return type;\n        },\n      };\n\n      if (target !== undefined) {\n        Object.defineProperty(event, 'target', {\n          enumerable: true,\n          get() {\n            return target;\n          },\n        });\n      }\n\n      if (data !== undefined) {\n        Object.defineProperty(event, 'data', {\n          enumerable: true,\n          get() {\n            return data;\n          },\n        });\n      }\n\n      if (canPreventDefault) {\n        let defaultPrevented = false;\n\n        Object.defineProperties(event, {\n          defaultPrevented: {\n            enumerable: true,\n            get() {\n              return defaultPrevented;\n            },\n          },\n          preventDefault: {\n            enumerable: true,\n            value() {\n              defaultPrevented = true;\n            },\n          },\n        });\n      }\n\n      listenRef.current?.(event);\n\n      callbacks?.forEach((cb) => cb(event));\n\n      return event as any;\n    },\n    []\n  );\n\n  return React.useMemo(() => ({ create, emit }), [create, emit]);\n}\n","import * as React from 'react';\n\nimport useNavigation from './useNavigation';\n\ntype EffectCallback = () => undefined | void | (() => void);\n\n/**\n * Hook to run an effect in a focused screen, similar to `React.useEffect`.\n * This can be used to perform side-effects such as fetching data or subscribing to events.\n * The passed callback should be wrapped in `React.useCallback` to avoid running the effect too often.\n *\n * @param callback Memoized callback containing the effect, should optionally return a cleanup function.\n */\nexport default function useFocusEffect(effect: EffectCallback) {\n  const navigation = useNavigation();\n\n  if (arguments[1] !== undefined) {\n    const message =\n      \"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \" +\n      \"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\" +\n      'useFocusEffect(\\n' +\n      '  React.useCallback(() => {\\n' +\n      '    // Your code here\\n' +\n      '  }, [depA, depB])\\n' +\n      ');\\n\\n' +\n      'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n\n    console.error(message);\n  }\n\n  React.useEffect(() => {\n    let isFocused = false;\n    let cleanup: undefined | void | (() => void);\n\n    const callback = () => {\n      const destroy = effect();\n\n      if (destroy === undefined || typeof destroy === 'function') {\n        return destroy;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        let message =\n          'An effect function must not return anything besides a function, which is used for clean-up.';\n\n        if (destroy === null) {\n          message +=\n            \" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";\n        } else if (typeof (destroy as any).then === 'function') {\n          message +=\n            \"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \" +\n            'Instead, write the async function inside your effect ' +\n            'and call it immediately:\\n\\n' +\n            'useFocusEffect(\\n' +\n            '  React.useCallback(() => {\\n' +\n            '    async function fetchData() {\\n' +\n            '      // You can await here\\n' +\n            '      const response = await MyAPI.getData(someId);\\n' +\n            '      // ...\\n' +\n            '    }\\n\\n' +\n            '    fetchData();\\n' +\n            '  }, [someId])\\n' +\n            ');\\n\\n' +\n            'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n        } else {\n          message += ` You returned '${JSON.stringify(destroy)}'.`;\n        }\n\n        console.error(message);\n      }\n    };\n\n    // We need to run the effect on intial render/dep changes if the screen is focused\n    if (navigation.isFocused()) {\n      cleanup = callback();\n      isFocused = true;\n    }\n\n    const unsubscribeFocus = navigation.addListener('focus', () => {\n      // If callback was already called for focus, avoid calling it again\n      // The focus event may also fire on intial render, so we guard against runing the effect twice\n      if (isFocused) {\n        return;\n      }\n\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = callback();\n      isFocused = true;\n    });\n\n    const unsubscribeBlur = navigation.addListener('blur', () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = undefined;\n      isFocused = false;\n    });\n\n    return () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [effect, navigation]);\n}\n","import type { NavigationState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationContext from './NavigationContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options<State extends NavigationState> = {\n  state: State;\n  emitter: NavigationEventEmitter<EventMapCore<State>>;\n};\n\n/**\n * Hook to take care of emitting `focus` and `blur` events.\n */\nexport default function useFocusEvents<State extends NavigationState>({\n  state,\n  emitter,\n}: Options<State>) {\n  const navigation = React.useContext(NavigationContext);\n  const lastFocusedKeyRef = React.useRef<string | undefined>();\n\n  const currentFocusedKey = state.routes[state.index].key;\n\n  // When the parent screen changes its focus state, we also need to change child's focus\n  // Coz the child screen can't be focused if the parent screen is out of focus\n  React.useEffect(\n    () =>\n      navigation?.addListener('focus', () => {\n        lastFocusedKeyRef.current = currentFocusedKey;\n        emitter.emit({ type: 'focus', target: currentFocusedKey });\n      }),\n    [currentFocusedKey, emitter, navigation]\n  );\n\n  React.useEffect(\n    () =>\n      navigation?.addListener('blur', () => {\n        lastFocusedKeyRef.current = undefined;\n        emitter.emit({ type: 'blur', target: currentFocusedKey });\n      }),\n    [currentFocusedKey, emitter, navigation]\n  );\n\n  React.useEffect(() => {\n    const lastFocusedKey = lastFocusedKeyRef.current;\n\n    lastFocusedKeyRef.current = currentFocusedKey;\n\n    // We wouldn't have `lastFocusedKey` on initial mount\n    // Fire focus event for the current route on mount if there's no parent navigator\n    if (lastFocusedKey === undefined && !navigation) {\n      emitter.emit({ type: 'focus', target: currentFocusedKey });\n    }\n\n    // We should only emit events when the focused key changed and navigator is focused\n    // When navigator is not focused, screens inside shouldn't receive focused status either\n    if (\n      lastFocusedKey === currentFocusedKey ||\n      !(navigation ? navigation.isFocused() : true)\n    ) {\n      return;\n    }\n\n    if (lastFocusedKey === undefined) {\n      // Only fire events after initial mount\n      return;\n    }\n\n    emitter.emit({ type: 'blur', target: lastFocusedKey });\n    emitter.emit({ type: 'focus', target: currentFocusedKey });\n  }, [currentFocusedKey, emitter, navigation]);\n}\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  FocusedNavigationCallback,\n  FocusedNavigationListener,\n} from './NavigationBuilderContext';\nimport type { NavigationHelpers } from './types';\n\ntype Options = {\n  navigation: NavigationHelpers<ParamListBase>;\n  focusedListeners: FocusedNavigationListener[];\n};\n\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter({\n  navigation,\n  focusedListeners,\n}: Options) {\n  const { addListener } = React.useContext(NavigationBuilderContext);\n\n  const listener = React.useCallback(\n    (callback: FocusedNavigationCallback<any>) => {\n      if (navigation.isFocused()) {\n        for (const listener of focusedListeners) {\n          const { handled, result } = listener(callback);\n\n          if (handled) {\n            return { handled, result };\n          }\n        }\n\n        return { handled: true, result: callback(navigation) };\n      } else {\n        return { handled: false, result: null };\n      }\n    },\n    [focusedListeners, navigation]\n  );\n\n  React.useEffect(\n    () => addListener?.('focus', listener),\n    [addListener, listener]\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport useNavigation from './useNavigation';\n\n/**\n * Hook to get the current focus state of the screen. Returns a `true` if screen is focused, otherwise `false`.\n * This can be used if a component needs to render something based on the focus state.\n */\nexport default function useIsFocused(): boolean {\n  const navigation = useNavigation();\n  const [isFocused, setIsFocused] = useState(navigation.isFocused);\n\n  const valueToReturn = navigation.isFocused();\n\n  if (isFocused !== valueToReturn) {\n    // If the value has changed since the last render, we need to update it.\n    // This could happen if we missed an update from the event listeners during re-render.\n    // React will process this update immediately, so the old subscription value won't be committed.\n    // It is still nice to avoid returning a mismatched value though, so let's override the return value.\n    // This is the same logic as in https://github.com/facebook/react/tree/master/packages/use-subscription\n    setIsFocused(valueToReturn);\n  }\n\n  React.useEffect(() => {\n    const unsubscribeFocus = navigation.addListener('focus', () =>\n      setIsFocused(true)\n    );\n\n    const unsubscribeBlur = navigation.addListener('blur', () =>\n      setIsFocused(false)\n    );\n\n    return () => {\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [navigation]);\n\n  React.useDebugValue(valueToReturn);\n\n  return valueToReturn;\n}\n","import * as React from 'react';\n\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\nexport default function useKeyedChildListeners() {\n  const { current: keyedListeners } = React.useRef<{\n    [K in keyof KeyedListenerMap]: Record<\n      string,\n      KeyedListenerMap[K] | undefined\n    >;\n  }>(\n    Object.assign(Object.create(null), {\n      getState: {},\n      beforeRemove: {},\n    })\n  );\n\n  const addKeyedListener = React.useCallback(\n    <T extends keyof KeyedListenerMap>(\n      type: T,\n      key: string,\n      listener: KeyedListenerMap[T]\n    ) => {\n      // @ts-expect-error: according to ref stated above you can use `key` to index type\n      keyedListeners[type][key] = listener;\n\n      return () => {\n        // @ts-expect-error: according to ref stated above you can use `key` to index type\n        keyedListeners[type][key] = undefined;\n      };\n    },\n    [keyedListeners]\n  );\n\n  return {\n    keyedListeners,\n    addKeyedListener,\n  };\n}\n","import * as React from 'react';\n\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport type { NavigationProp } from './types';\n\n/**\n * Hook to access the navigation prop of the parent screen anywhere.\n *\n * @returns Navigation prop of the parent screen.\n */\nexport default function useNavigation<\n  T = NavigationProp<ReactNavigation.RootParamList>\n>(): T {\n  const root = React.useContext(NavigationContainerRefContext);\n  const navigation = React.useContext(NavigationContext);\n\n  if (navigation === undefined && root === undefined) {\n    throw new Error(\n      \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n    );\n  }\n\n  // FIXME: Figure out a better way to do this\n  return (navigation ?? root) as unknown as T;\n}\n","import {\n  CommonActions,\n  DefaultRouterOptions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n  RouterConfigOptions,\n  RouterFactory,\n} from '@react-navigation/routers';\nimport * as React from 'react';\nimport { isValidElementType } from 'react-is';\n\nimport Group from './Group';\nimport isArrayEqual from './isArrayEqual';\nimport isRecordEqual from './isRecordEqual';\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport PreventRemoveProvider from './PreventRemoveProvider';\nimport Screen from './Screen';\nimport {\n  DefaultNavigatorOptions,\n  EventMapBase,\n  EventMapCore,\n  NavigatorScreenParams,\n  PrivateValueStore,\n  RouteConfig,\n} from './types';\nimport useChildListeners from './useChildListeners';\nimport useComponent from './useComponent';\nimport useCurrentRender from './useCurrentRender';\nimport useDescriptors, { ScreenConfigWithParent } from './useDescriptors';\nimport useEventEmitter from './useEventEmitter';\nimport useFocusedListenersChildrenAdapter from './useFocusedListenersChildrenAdapter';\nimport useFocusEvents from './useFocusEvents';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useNavigationHelpers from './useNavigationHelpers';\nimport useOnAction from './useOnAction';\nimport useOnGetState from './useOnGetState';\nimport useOnRouteFocus from './useOnRouteFocus';\nimport useRegisterNavigator from './useRegisterNavigator';\nimport useScheduleUpdate from './useScheduleUpdate';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype NavigatorRoute<State extends NavigationState> = {\n  key: string;\n  params?: NavigatorScreenParams<ParamListBase, State>;\n};\n\nconst isValidKey = (key: unknown) =>\n  key === undefined || (typeof key === 'string' && key !== '');\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = <\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>(\n  children: React.ReactNode,\n  groupKey?: string,\n  groupOptions?: ScreenConfigWithParent<\n    State,\n    ScreenOptions,\n    EventMap\n  >['options']\n) => {\n  const configs = React.Children.toArray(children).reduce<\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>[]\n  >((acc, child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the screen '${\n              child.props.name\n            }'. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        acc.push({\n          keys: [groupKey, child.props.navigationKey],\n          options: groupOptions,\n          props: child.props as RouteConfig<\n            ParamListBase,\n            string,\n            State,\n            ScreenOptions,\n            EventMap\n          >,\n        });\n        return acc;\n      }\n\n      if (child.type === React.Fragment || child.type === Group) {\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the group. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        // When we encounter a fragment or group, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(\n          ...getRouteConfigsFromChildren<State, ScreenOptions, EventMap>(\n            child.props.children,\n            child.props.navigationKey,\n            child.type !== Group\n              ? groupOptions\n              : groupOptions != null\n              ? [...groupOptions, child.props.screenOptions]\n              : [child.props.screenOptions]\n          )\n        );\n        return acc;\n      }\n    }\n\n    throw new Error(\n      `A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${\n        React.isValidElement(child)\n          ? `'${\n              typeof child.type === 'string' ? child.type : child.type?.name\n            }'${\n              child.props?.name ? ` for the screen '${child.props.name}'` : ''\n            }`\n          : typeof child === 'object'\n          ? JSON.stringify(child)\n          : `'${String(child)}'`\n      }). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`\n    );\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach((config) => {\n      const { name, children, component, getComponent } = config.props;\n\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\n          `Got an invalid name (${JSON.stringify(\n            name\n          )}) for the screen. It must be a non-empty string.`\n        );\n      }\n\n      if (\n        children != null ||\n        component !== undefined ||\n        getComponent !== undefined\n      ) {\n        if (children != null && component !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && typeof children !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`\n          );\n        }\n\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(\n            `Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`\n          );\n        }\n\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`\n          );\n        }\n\n        if (typeof component === 'function') {\n          if (component.name === 'component') {\n            // Inline anonymous functions passed in the `component` prop will have the name of the prop\n            // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n            // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n            console.warn(\n              `Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`\n            );\n          } else if (/^[a-z]/.test(component.name)) {\n            console.warn(\n              `Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`\n            );\n          }\n        }\n      } else {\n        throw new Error(\n          `Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`\n        );\n      }\n    });\n  }\n\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport default function useNavigationBuilder<\n  State extends NavigationState,\n  RouterOptions extends DefaultRouterOptions,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>(\n  createRouter: RouterFactory<State, any, RouterOptions>,\n  options: DefaultNavigatorOptions<\n    ParamListBase,\n    State,\n    ScreenOptions,\n    EventMap\n  > &\n    RouterOptions\n) {\n  const navigatorKey = useRegisterNavigator();\n\n  const route = React.useContext(NavigationRouteContext) as\n    | NavigatorRoute<State>\n    | undefined;\n\n  const { children, screenListeners, ...rest } = options;\n  const { current: router } = React.useRef<Router<State, any>>(\n    createRouter({\n      ...(rest as unknown as RouterOptions),\n      ...(route?.params &&\n      route.params.state == null &&\n      route.params.initial !== false &&\n      typeof route.params.screen === 'string'\n        ? { initialRouteName: route.params.screen }\n        : null),\n    })\n  );\n\n  const routeConfigs = getRouteConfigsFromChildren<\n    State,\n    ScreenOptions,\n    EventMap\n  >(children);\n\n  const screens = routeConfigs.reduce<\n    Record<string, ScreenConfigWithParent<State, ScreenOptions, EventMap>>\n  >((acc, config) => {\n    if (config.props.name in acc) {\n      throw new Error(\n        `A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`\n      );\n    }\n\n    acc[config.props.name] = config;\n    return acc;\n  }, {});\n\n  const routeNames = routeConfigs.map((config) => config.props.name);\n  const routeKeyList = routeNames.reduce<Record<string, React.Key | undefined>>(\n    (acc, curr) => {\n      acc[curr] = screens[curr].keys.map((key) => key ?? '').join(':');\n      return acc;\n    },\n    {}\n  );\n  const routeParamList = routeNames.reduce<Record<string, object | undefined>>(\n    (acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    },\n    {}\n  );\n  const routeGetIdList = routeNames.reduce<\n    RouterConfigOptions['routeGetIdList']\n  >(\n    (acc, curr) =>\n      Object.assign(acc, {\n        [curr]: screens[curr].props.getId,\n      }),\n    {}\n  );\n\n  if (!routeNames.length) {\n    throw new Error(\n      \"Couldn't find any screens for the navigator. Have you defined any screens as its children?\"\n    );\n  }\n\n  const isStateValid = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState>) =>\n      state.type === undefined || state.type === router.type,\n    [router.type]\n  );\n\n  const isStateInitialized = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) =>\n      state !== undefined && state.stale === false && isStateValid(state),\n    [isStateValid]\n  );\n\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    setKey,\n    getKey,\n    getIsInitial,\n  } = React.useContext(NavigationStateContext);\n\n  const stateCleanedUp = React.useRef(false);\n\n  const cleanUpState = React.useCallback(() => {\n    setCurrentState(undefined);\n    stateCleanedUp.current = true;\n  }, [setCurrentState]);\n\n  const setState = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    },\n    [setCurrentState]\n  );\n\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    const initialRouteParamList = routeNames.reduce<\n      Record<string, object | undefined>\n    >((acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      const initialParamsFromParams =\n        route?.params?.state == null &&\n        route?.params?.initial !== false &&\n        route?.params?.screen === curr\n          ? route.params.params\n          : undefined;\n\n      acc[curr] =\n        initialParams !== undefined || initialParamsFromParams !== undefined\n          ? {\n              ...initialParams,\n              ...initialParamsFromParams,\n            }\n          : undefined;\n\n      return acc;\n    }, {});\n\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if (\n      (currentState === undefined || !isStateValid(currentState)) &&\n      route?.params?.state == null\n    ) {\n      return [\n        router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList,\n        }),\n        true,\n      ];\n    } else {\n      return [\n        router.getRehydratedState(\n          route?.params?.state ?? (currentState as PartialState<State>),\n          {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList,\n          }\n        ),\n        false,\n      ];\n    }\n    // We explicitly don't include routeNames, route.params etc. in the dep list\n    // below. We want to avoid forcing a new state to be calculated in those cases\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n\n  const previousRouteKeyListRef = React.useRef(routeKeyList);\n\n  React.useEffect(() => {\n    previousRouteKeyListRef.current = routeKeyList;\n  });\n\n  const previousRouteKeyList = previousRouteKeyListRef.current;\n\n  let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initalized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedState as State);\n\n  let nextState: State = state;\n\n  if (\n    !isArrayEqual(state.routeNames, routeNames) ||\n    !isRecordEqual(routeKeyList, previousRouteKeyList)\n  ) {\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = router.getStateForRouteNamesChange(state, {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n      routeKeyChanges: Object.keys(routeKeyList).filter(\n        (name) =>\n          previousRouteKeyList.hasOwnProperty(name) &&\n          routeKeyList[name] !== previousRouteKeyList[name]\n      ),\n    });\n  }\n\n  const previousNestedParamsRef = React.useRef(route?.params);\n\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route?.params;\n  }, [route?.params]);\n\n  if (route?.params) {\n    const previousParams = previousNestedParamsRef.current;\n\n    let action: CommonActions.Action | undefined;\n\n    if (\n      typeof route.params.state === 'object' &&\n      route.params.state != null &&\n      route.params !== previousParams\n    ) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (\n      typeof route.params.screen === 'string' &&\n      ((route.params.initial === false && isFirstStateInitialization) ||\n        route.params !== previousParams)\n    ) {\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate({\n        name: route.params.screen,\n        params: route.params.params,\n        path: route.params.path,\n      });\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action\n      ? router.getStateForAction(nextState, action, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : null;\n\n    nextState =\n      updatedState !== null\n        ? router.getRehydratedState(updatedState, {\n            routeNames,\n            routeParamList,\n            routeGetIdList,\n          })\n        : nextState;\n  }\n\n  const shouldUpdate = state !== nextState;\n\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n\n  React.useEffect(() => {\n    setKey(navigatorKey);\n\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      // We do it in a timeout because we need to detect if another navigator mounted in the meantime\n      // For example, if another navigator has started rendering, we should skip cleanup\n      // Otherwise, our cleanup step will cleanup state for the other navigator and re-initialize it\n      setTimeout(() => {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          cleanUpState();\n        }\n      }, 0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // We initialize this ref here to avoid a new getState getting initialized\n  // whenever initializedState changes. We want getState to have access to the\n  // latest initializedState, but don't need it to change when that happens\n  const initializedStateRef = React.useRef<State>();\n  initializedStateRef.current = initializedState;\n\n  const getState = React.useCallback((): State => {\n    const currentState = getCurrentState();\n\n    return isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedStateRef.current as State);\n  }, [getCurrentState, isStateInitialized]);\n\n  const emitter = useEventEmitter<EventMapCore<State>>((e) => {\n    let routeNames = [];\n\n    let route: Route<string> | undefined;\n\n    if (e.target) {\n      route = state.routes.find((route) => route.key === e.target);\n\n      if (route?.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(\n        ...Object.keys(screens).filter((name) => route?.name === name)\n      );\n    }\n\n    if (route == null) {\n      return;\n    }\n\n    const navigation = descriptors[route.key].navigation;\n\n    const listeners = ([] as (((e: any) => void) | undefined)[])\n      .concat(\n        // Get an array of listeners for all screens + common listeners on navigator\n        ...[\n          screenListeners,\n          ...routeNames.map((name) => {\n            const { listeners } = screens[name].props;\n            return listeners;\n          }),\n        ].map((listeners) => {\n          const map =\n            typeof listeners === 'function'\n              ? listeners({ route: route as any, navigation })\n              : listeners;\n\n          return map\n            ? Object.keys(map)\n                .filter((type) => type === e.type)\n                .map((type) => map?.[type])\n            : undefined;\n        })\n      )\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n\n    listeners.forEach((listener) => listener?.(e));\n  });\n\n  useFocusEvents({ state, emitter });\n\n  React.useEffect(() => {\n    emitter.emit({ type: 'state', data: { state } });\n  }, [emitter, state]);\n\n  const { listeners: childListeners, addListener } = useChildListeners();\n\n  const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route?.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n    },\n    emitter,\n  });\n\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route?.key,\n    getState,\n    setState,\n  });\n\n  const navigation = useNavigationHelpers<\n    State,\n    ActionHelpers,\n    NavigationAction,\n    EventMap\n  >({\n    id: options.id,\n    onAction,\n    getState,\n    emitter,\n    router,\n  });\n\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus,\n  });\n\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState,\n  });\n\n  const descriptors = useDescriptors<\n    State,\n    ActionHelpers,\n    ScreenOptions,\n    EventMap\n  >({\n    state,\n    screens,\n    navigation,\n    screenOptions: options.screenOptions,\n    defaultScreenOptions: options.defaultScreenOptions,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    // @ts-expect-error: this should have both core and custom events, but too much work right now\n    emitter,\n  });\n\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors,\n  });\n\n  const NavigationContent = useComponent((children: React.ReactNode) => (\n    <NavigationHelpersContext.Provider value={navigation}>\n      <PreventRemoveProvider>{children}</PreventRemoveProvider>\n    </NavigationHelpersContext.Provider>\n  ));\n\n  return {\n    state,\n    navigation,\n    descriptors,\n    NavigationContent,\n  };\n}\n","import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport type { NavigationHelpers, NavigationProp } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options<\n  State extends NavigationState,\n  EventMap extends Record<string, any>\n> = {\n  state: State;\n  getState: () => State;\n  navigation: NavigationHelpers<ParamListBase> &\n    Partial<NavigationProp<ParamListBase, string, any, any, any>>;\n  setOptions: (\n    cb: (options: Record<string, object>) => Record<string, object>\n  ) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\ntype NavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n> = Record<\n  string,\n  NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions,\n    EventMap\n  >\n>;\n\n/**\n * Hook to cache navigation objects for each screen in the navigator.\n * It's important to cache them to make sure navigation objects don't change between renders.\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n */\nexport default function useNavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>({\n  state,\n  getState,\n  navigation,\n  setOptions,\n  router,\n  emitter,\n}: Options<State, EventMap>) {\n  const { stackRef } = React.useContext(NavigationBuilderContext);\n\n  // Cache object which holds navigation objects for each screen\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n  // In reality, these deps will rarely change, if ever\n  const cache = React.useMemo(\n    () => ({ current: {} as NavigationCache<State, ScreenOptions, EventMap> }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getState, navigation, setOptions, router, emitter]\n  );\n\n  const actions = {\n    ...router.actionCreators,\n    ...CommonActions,\n  };\n\n  cache.current = state.routes.reduce<\n    NavigationCache<State, ScreenOptions, EventMap>\n  >((acc, route) => {\n    const previous = cache.current[route.key];\n\n    type Thunk =\n      | NavigationAction\n      | ((state: State) => NavigationAction | null | undefined);\n\n    if (previous) {\n      // If a cached navigation object already exists, reuse it\n      acc[route.key] = previous;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { emit, ...rest } = navigation;\n\n      const dispatch = (thunk: Thunk) => {\n        const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n\n        if (action != null) {\n          navigation.dispatch({ source: route.key, ...action });\n        }\n      };\n\n      const withStack = (callback: () => void) => {\n        let isStackSet = false;\n\n        try {\n          if (\n            process.env.NODE_ENV !== 'production' &&\n            stackRef &&\n            !stackRef.current\n          ) {\n            // Capture the stack trace for devtools\n            stackRef.current = new Error().stack;\n            isStackSet = true;\n          }\n\n          callback();\n        } finally {\n          if (isStackSet && stackRef) {\n            stackRef.current = undefined;\n          }\n        }\n      };\n\n      const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n        (acc, name) => {\n          acc[name] = (...args: any) =>\n            withStack(() =>\n              // @ts-expect-error: name is a valid key, but TypeScript is dumb\n              dispatch(actions[name](...args))\n            );\n\n          return acc;\n        },\n        {}\n      );\n\n      acc[route.key] = {\n        ...rest,\n        ...helpers,\n        // FIXME: too much work to fix the types for now\n        ...(emitter.create(route.key) as any),\n        dispatch: (thunk: Thunk) => withStack(() => dispatch(thunk)),\n        getParent: (id?: string) => {\n          if (id !== undefined && id === rest.getId()) {\n            // If the passed id is the same as the current navigation id,\n            // we return the cached navigation object for the relevant route\n            return acc[route.key];\n          }\n\n          return rest.getParent(id);\n        },\n        setOptions: (options: object) =>\n          setOptions((o) => ({\n            ...o,\n            [route.key]: { ...o[route.key], ...options },\n          })),\n        isFocused: () => {\n          const state = getState();\n\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n\n          // If the current screen is focused, we also need to check if parent navigator is focused\n          // This makes sure that we return the focus state in the whole tree, not just this navigator\n          return navigation ? navigation.isFocused() : true;\n        },\n      };\n    }\n\n    return acc;\n  }, {});\n\n  return cache.current;\n}\n","import * as React from 'react';\n\nimport createNavigationContainerRef from './createNavigationContainerRef';\nimport type { NavigationContainerRefWithCurrent } from './types';\n\nexport default function useNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const navigation =\n    React.useRef<NavigationContainerRefWithCurrent<ParamList> | null>(null);\n\n  if (navigation.current == null) {\n    navigation.current = createNavigationContainerRef<ParamList>();\n  }\n\n  return navigation.current;\n}\n","import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationContext from './NavigationContext';\nimport { NavigationHelpers, PrivateValueStore } from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  id: string | undefined;\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({\n  id: navigatorId,\n  onAction,\n  getState,\n  emitter,\n  router,\n}: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce((acc, name) => {\n      // @ts-expect-error: name is a valid key, but TypeScript is dumb\n      acc[name] = (...args: any) => dispatch(actions[name](...args));\n      return acc;\n    }, {} as ActionHelpers);\n\n    const navigationHelpers = {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n            routeGetIdList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      getId: () => navigatorId,\n      getParent: (id?: string) => {\n        if (id !== undefined) {\n          let current = navigationHelpers;\n\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n\n          return current;\n        }\n\n        return parentNavigationHelpers;\n      },\n      getState,\n    } as NavigationHelpers<ParamListBase, EventMap> & ActionHelpers;\n\n    return navigationHelpers;\n  }, [\n    navigatorId,\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    parentNavigationHelpers,\n    router,\n  ]);\n}\n","import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationProp } from './types';\nimport useNavigation from './useNavigation';\n\ntype Selector<ParamList extends ParamListBase, T> = (\n  state: NavigationState<ParamList>\n) => T;\n\n/**\n * Hook to get a value from the current navigation state using a selector.\n *\n * @param selector Selector function to get a value from the state.\n */\nexport default function useNavigationState<ParamList extends ParamListBase, T>(\n  selector: Selector<ParamList, T>\n): T {\n  const navigation = useNavigation<NavigationProp<ParamList>>();\n\n  // We don't care about the state value, we run the selector again at the end\n  // The state is only to make sure that there's a re-render when we have a new value\n  const [, setResult] = React.useState(() => selector(navigation.getState()));\n\n  // We store the selector in a ref to avoid re-subscribing listeners every render\n  const selectorRef = React.useRef(selector);\n\n  React.useEffect(() => {\n    selectorRef.current = selector;\n  });\n\n  React.useEffect(() => {\n    const unsubscribe = navigation.addListener('state', (e) => {\n      setResult(selectorRef.current(e.data.state));\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  return selector(navigation.getState());\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n  PartialState,\n  Router,\n  RouterConfigOptions,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  ChildActionListener,\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useOnPreventRemove, { shouldPreventRemove } from './useOnPreventRemove';\n\ntype Options = {\n  router: Router<NavigationState, NavigationAction>;\n  key?: string;\n  getState: () => NavigationState;\n  setState: (state: NavigationState | PartialState<NavigationState>) => void;\n  actionListeners: ChildActionListener[];\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n  routerConfigOptions: RouterConfigOptions;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n};\n\n/**\n * Hook to handle actions for a navigator, including state updates and bubbling.\n *\n * Bubbling an action is achieved in 2 ways:\n * 1. To bubble action to parent, we expose the action handler in context and then access the parent context\n * 2. To bubble action to child, child adds event listeners subscribing to actions from parent\n *\n * When the action handler handles as action, it returns `true`, otherwise `false`.\n */\nexport default function useOnAction({\n  router,\n  getState,\n  setState,\n  key,\n  actionListeners,\n  beforeRemoveListeners,\n  routerConfigOptions,\n  emitter,\n}: Options) {\n  const {\n    onAction: onActionParent,\n    onRouteFocus: onRouteFocusParent,\n    addListener: addListenerParent,\n    onDispatchAction,\n  } = React.useContext(NavigationBuilderContext);\n\n  const routerConfigOptionsRef =\n    React.useRef<RouterConfigOptions>(routerConfigOptions);\n\n  React.useEffect(() => {\n    routerConfigOptionsRef.current = routerConfigOptions;\n  });\n\n  const onAction = React.useCallback(\n    (\n      action: NavigationAction,\n      visitedNavigators: Set<string> = new Set<string>()\n    ) => {\n      const state = getState();\n\n      // Since actions can bubble both up and down, they could come to the same navigator again\n      // We keep track of navigators which have already tried to handle the action and return if it's already visited\n      if (visitedNavigators.has(state.key)) {\n        return false;\n      }\n\n      visitedNavigators.add(state.key);\n\n      if (typeof action.target !== 'string' || action.target === state.key) {\n        let result = router.getStateForAction(\n          state,\n          action,\n          routerConfigOptionsRef.current\n        );\n\n        // If a target is specified and set to current navigator, the action shouldn't bubble\n        // So instead of `null`, we use the state object for such cases to signal that action was handled\n        result =\n          result === null && action.target === state.key ? state : result;\n\n        if (result !== null) {\n          onDispatchAction(action, state === result);\n\n          if (state !== result) {\n            const isPrevented = shouldPreventRemove(\n              emitter,\n              beforeRemoveListeners,\n              state.routes,\n              result.routes,\n              action\n            );\n\n            if (isPrevented) {\n              return true;\n            }\n\n            setState(result);\n          }\n\n          if (onRouteFocusParent !== undefined) {\n            // Some actions such as `NAVIGATE` also want to bring the navigated route to focus in the whole tree\n            // This means we need to focus all of the parent navigators of this navigator as well\n            const shouldFocus = router.shouldActionChangeFocus(action);\n\n            if (shouldFocus && key !== undefined) {\n              onRouteFocusParent(key);\n            }\n          }\n\n          return true;\n        }\n      }\n\n      if (onActionParent !== undefined) {\n        // Bubble action to the parent if the current navigator didn't handle it\n        if (onActionParent(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      // If the action wasn't handled by current navigator or a parent navigator, let children handle it\n      for (let i = actionListeners.length - 1; i >= 0; i--) {\n        const listener = actionListeners[i];\n\n        if (listener(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    [\n      actionListeners,\n      beforeRemoveListeners,\n      emitter,\n      getState,\n      key,\n      onActionParent,\n      onDispatchAction,\n      onRouteFocusParent,\n      router,\n      setState,\n    ]\n  );\n\n  useOnPreventRemove({\n    getState,\n    emitter,\n    beforeRemoveListeners,\n  });\n\n  React.useEffect(\n    () => addListenerParent?.('action', onAction),\n    [addListenerParent, onAction]\n  );\n\n  return onAction;\n}\n","import type { NavigationState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext, {\n  GetStateListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\n\ntype Options = {\n  getState: () => NavigationState;\n  getStateListeners: Record<string, GetStateListener | undefined>;\n};\n\nexport default function useOnGetState({\n  getState,\n  getStateListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map((route) => {\n      const childState = getStateListeners[route.key]?.();\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return { ...route, state: childState };\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return { ...state, routes };\n  }, [getState, getStateListeners]);\n\n  React.useEffect(() => {\n    return addKeyedListener?.('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options = {\n  getState: () => NavigationState;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n};\n\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\n\nexport const shouldPreventRemove = (\n  emitter: NavigationEventEmitter<EventMapCore<any>>,\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>,\n  currentRoutes: { key: string }[],\n  nextRoutes: { key?: string | undefined }[],\n  action: NavigationAction\n) => {\n  const nextRouteKeys = nextRoutes.map((route) => route.key);\n\n  // Call these in reverse order so last screens handle the event first\n  const removedRoutes = currentRoutes\n    .filter((route) => !nextRouteKeys.includes(route.key))\n    .reverse();\n\n  const visitedRouteKeys: Set<string> =\n    // @ts-expect-error: add this property to mark that we've already emitted this action\n    action[VISITED_ROUTE_KEYS] ?? new Set<string>();\n\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys,\n  };\n\n  for (const route of removedRoutes) {\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = beforeRemoveListeners[route.key]?.(beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: { action: beforeRemoveAction },\n      canPreventDefault: true,\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport default function useOnPreventRemove({\n  getState,\n  emitter,\n  beforeRemoveListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route?.key;\n\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener?.('beforeRemove', routeKey, (action) => {\n        const state = getState();\n\n        return shouldPreventRemove(\n          emitter,\n          beforeRemoveListeners,\n          state.routes,\n          [],\n          action\n        );\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\n\ntype Options<Action extends NavigationAction> = {\n  router: Router<NavigationState, Action>;\n  getState: () => NavigationState;\n  setState: (state: NavigationState) => void;\n  key?: string;\n};\n\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\nexport default function useOnRouteFocus<Action extends NavigationAction>({\n  router,\n  getState,\n  key: sourceRouteKey,\n  setState,\n}: Options<Action>) {\n  const { onRouteFocus: onRouteFocusParent } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  return React.useCallback(\n    (key: string) => {\n      const state = getState();\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (result !== state) {\n        setState(result);\n      }\n\n      if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n        onRouteFocusParent(sourceRouteKey);\n      }\n    },\n    [getState, onRouteFocusParent, router, setState, sourceRouteKey]\n  );\n}\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type { NavigationProp } from './types';\n\ntype Options = {\n  key?: string;\n  navigation?: NavigationProp<ParamListBase>;\n  options?: object | undefined;\n};\n\nexport default function useOptionsGetters({\n  key,\n  options,\n  navigation,\n}: Options) {\n  const optionsRef = React.useRef<object | undefined>(options);\n  const optionsGettersFromChildRef = React.useRef<\n    Record<string, () => object | undefined | null>\n  >({});\n\n  const { onOptionsChange } = React.useContext(NavigationBuilderContext);\n  const { addOptionsGetter: parentAddOptionsGetter } = React.useContext(\n    NavigationStateContext\n  );\n\n  const optionsChangeListener = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n    const hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      onOptionsChange(optionsRef.current ?? {});\n    }\n  }, [navigation, onOptionsChange]);\n\n  React.useEffect(() => {\n    optionsRef.current = options;\n    optionsChangeListener();\n\n    return navigation?.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(key)) {\n        const result = optionsGettersFromChildRef.current[key]?.();\n\n        // null means unfocused route\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n\n  const getCurrentOptions = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n\n  React.useEffect(() => {\n    return parentAddOptionsGetter?.(key!, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n\n  const addOptionsGetter = React.useCallback(\n    (key: string, getter: () => object | undefined | null) => {\n      optionsGettersFromChildRef.current[key] = getter;\n      optionsChangeListener();\n\n      return () => {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete optionsGettersFromChildRef.current[key];\n        optionsChangeListener();\n      };\n    },\n    [optionsChangeListener]\n  );\n\n  return {\n    addOptionsGetter,\n    getCurrentOptions,\n  };\n}\n","import type { NavigationAction } from '@react-navigation/routers';\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport type { EventListenerCallback, EventMapCore } from './types';\nimport useNavigation from './useNavigation';\nimport usePreventRemoveContext from './usePreventRemoveContext';\nimport useRoute from './useRoute';\n\n/**\n * Hook to prevent screen from being removed. Can be used to prevent users from leaving the screen.\n *\n * @param preventRemove Boolean indicating whether to prevent screen from being removed.\n * @param callback Function which is executed when screen was prevented from being removed.\n */\nexport default function usePreventRemove(\n  preventRemove: boolean,\n  callback: (options: { data: { action: NavigationAction } }) => void\n) {\n  const [id] = React.useState(() => nanoid());\n\n  const navigation = useNavigation();\n  const { key: routeKey } = useRoute();\n\n  const { setPreventRemove } = usePreventRemoveContext();\n\n  React.useEffect(() => {\n    setPreventRemove(id, routeKey, preventRemove);\n    return () => {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n\n  const beforeRemoveListener = useLatestCallback<\n    EventListenerCallback<EventMapCore<any>, 'beforeRemove'>\n  >((e) => {\n    if (!preventRemove) {\n      return;\n    }\n\n    e.preventDefault();\n\n    callback({ data: e.data });\n  });\n\n  React.useEffect(\n    () => navigation?.addListener('beforeRemove', beforeRemoveListener),\n    [navigation, beforeRemoveListener]\n  );\n}\n","import * as React from 'react';\n\nimport PreventRemoveContext from './PreventRemoveContext';\n\nexport default function usePreventRemoveContext() {\n  const value = React.useContext(PreventRemoveContext);\n\n  if (value == null) {\n    throw new Error(\n      \"Couldn't find the prevent remove context. Is your component inside NavigationContent?\"\n    );\n  }\n\n  return value;\n}\n","import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\n\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport default function useRoute<T extends RouteProp<ParamListBase>>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n","import type {\n  NavigationState,\n  ParamListBase,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { RouteProp } from './types';\n\ntype RouteCache = Map<Route<string>, RouteProp<ParamListBase>>;\n\n/**\n * Utilites such as `getFocusedRouteNameFromRoute` need to access state.\n * So we need a way to suppress the warning for those use cases.\n * This is fine since they are internal utilities and this is not public API.\n */\nexport const CHILD_STATE = Symbol('CHILD_STATE');\n\n/**\n * Hook to cache route props for each screen in the navigator.\n * This lets add warnings and modifications to the route object but keep references between renders.\n */\nexport default function useRouteCache<State extends NavigationState>(\n  routes: State['routes']\n) {\n  // Cache object which holds route objects for each screen\n  const cache = React.useMemo(() => ({ current: new Map() as RouteCache }), []);\n\n  if (process.env.NODE_ENV === 'production') {\n    // We don't want the overhead of creating extra maps every render in prod\n    return routes;\n  }\n\n  cache.current = routes.reduce((acc, route) => {\n    const previous = cache.current.get(route);\n\n    if (previous) {\n      // If a cached route object already exists, reuse it\n      acc.set(route, previous);\n    } else {\n      const { state, ...proxy } = route;\n\n      Object.defineProperty(proxy, CHILD_STATE, {\n        enumerable: false,\n        value: state,\n      });\n\n      acc.set(route, proxy);\n    }\n\n    return acc;\n  }, new Map() as RouteCache);\n\n  return Array.from(cache.current.values());\n}\n","import * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\n\nexport const ScheduleUpdateContext = React.createContext<{\n  scheduleUpdate: (callback: () => void) => void;\n  flushUpdates: () => void;\n}>({\n  scheduleUpdate() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  flushUpdates() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\n/**\n * When screen config changes, we want to update the navigator in the same update phase.\n * However, navigation state is in the root component and React won't let us update it from a child.\n * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n * It lets all subsequent updates access the latest state so it stays correct.\n * Then we call setState during after the component updates.\n */\nexport default function useScheduleUpdate(callback: () => void) {\n  const { scheduleUpdate, flushUpdates } = React.useContext(\n    ScheduleUpdateContext\n  );\n\n  scheduleUpdate(callback);\n\n  React.useEffect(flushUpdates);\n}\n","import * as React from 'react';\n\nconst UNINTIALIZED_STATE = {};\n\n/**\n * This is definitely not compatible with concurrent mode, but we don't have a solution for sync state yet.\n */\nexport default function useSyncState<T>(initialState?: (() => T) | T) {\n  const stateRef = React.useRef<T>(UNINTIALIZED_STATE as any);\n  const isSchedulingRef = React.useRef(false);\n  const isMountedRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  if (stateRef.current === UNINTIALIZED_STATE) {\n    stateRef.current =\n      // @ts-expect-error: initialState is a function, but TypeScript doesn't think so\n      typeof initialState === 'function' ? initialState() : initialState;\n  }\n\n  const [trackingState, setTrackingState] = React.useState(stateRef.current);\n\n  const getState = React.useCallback(() => stateRef.current, []);\n\n  const setState = React.useCallback((state: T) => {\n    if (state === stateRef.current || !isMountedRef.current) {\n      return;\n    }\n\n    stateRef.current = state;\n\n    if (!isSchedulingRef.current) {\n      setTrackingState(state);\n    }\n  }, []);\n\n  const scheduleUpdate = React.useCallback((callback: () => void) => {\n    isSchedulingRef.current = true;\n\n    try {\n      callback();\n    } finally {\n      isSchedulingRef.current = false;\n    }\n  }, []);\n\n  const flushUpdates = React.useCallback(() => {\n    if (!isMountedRef.current) {\n      return;\n    }\n\n    // Make sure that the tracking state is up-to-date.\n    // We call it unconditionally, but React should skip the update if state is unchanged.\n    setTrackingState(stateRef.current);\n  }, []);\n\n  // If we're rendering and the tracking state is out of date, update it immediately\n  // This will make sure that our updates are applied as early as possible.\n  if (trackingState !== stateRef.current) {\n    setTrackingState(stateRef.current);\n  }\n\n  const state = stateRef.current;\n\n  React.useDebugValue(state);\n\n  return [state, getState, setState, scheduleUpdate, flushUpdates] as const;\n}\n","const formatToList = (items: string[]) =>\n  items.map((key) => `- ${key}`).join('\\n');\n\nexport default function validatePathConfig(config: any, root = true) {\n  const validKeys = ['initialRouteName', 'screens'];\n\n  if (!root) {\n    validKeys.push('path', 'exact', 'stringify', 'parse');\n  }\n\n  const invalidKeys = Object.keys(config).filter(\n    (key) => !validKeys.includes(key)\n  );\n\n  if (invalidKeys.length) {\n    throw new Error(\n      `Found invalid properties in the configuration:\\n${formatToList(\n        invalidKeys\n      )}\\n\\nDid you forget to specify them under a 'screens' property?\\n\\nYou can only specify the following properties:\\n${formatToList(\n        validKeys\n      )}\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`\n    );\n  }\n\n  if (config.screens) {\n    Object.entries(config.screens).forEach(([_, value]) => {\n      if (typeof value !== 'string') {\n        validatePathConfig(value, false);\n      }\n    });\n  }\n}\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\ntype Props = ViewProps & {\n  children: React.ReactNode;\n};\n\nexport default function Background({ style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      {...rest}\n      style={[{ flex: 1, backgroundColor: colors.background }, style]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport type { HeaderOptions, Layout } from '../types';\nimport getDefaultHeaderHeight from './getDefaultHeaderHeight';\nimport HeaderBackground from './HeaderBackground';\nimport HeaderShownContext from './HeaderShownContext';\nimport HeaderTitle from './HeaderTitle';\n\ntype Props = HeaderOptions & {\n  /**\n   * Whether the header is in a modal\n   */\n  modal?: boolean;\n  /**\n   * Layout of the screen.\n   */\n  layout?: Layout;\n  /**\n   * Title text for the header.\n   */\n  title: string;\n};\n\nconst warnIfHeaderStylesDefined = (styles: Record<string, any>) => {\n  Object.keys(styles).forEach((styleProp) => {\n    const value = styles[styleProp];\n\n    if (styleProp === 'position' && value === 'absolute') {\n      console.warn(\n        \"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the 'headerTransparent' option.\"\n      );\n    } else if (value !== undefined) {\n      console.warn(\n        `${styleProp} was given a value of ${value}, this has no effect on headerStyle.`\n      );\n    }\n  });\n};\n\nexport default function Header(props: Props) {\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const {\n    layout = frame,\n    modal = false,\n    title,\n    headerTitle: customTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left',\n    }),\n    headerLeft,\n    headerLeftLabelVisible,\n    headerTransparent,\n    headerTintColor,\n    headerBackground,\n    headerRight,\n    headerTitleAllowFontScaling: titleAllowFontScaling,\n    headerTitleStyle: titleStyle,\n    headerLeftContainerStyle: leftContainerStyle,\n    headerRightContainerStyle: rightContainerStyle,\n    headerTitleContainerStyle: titleContainerStyle,\n    headerBackgroundContainerStyle: backgroundContainerStyle,\n    headerStyle: customHeaderStyle,\n    headerShadowVisible,\n    headerPressColor,\n    headerPressOpacity,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n  } = props;\n\n  const defaultHeight = getDefaultHeaderHeight(\n    layout,\n    modal,\n    headerStatusBarHeight\n  );\n\n  const {\n    height = defaultHeight,\n    minHeight,\n    maxHeight,\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: web support for shadow\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform,\n    ...unsafeStyles\n  } = StyleSheet.flatten(customHeaderStyle || {}) as ViewStyle;\n\n  if (process.env.NODE_ENV !== 'production') {\n    warnIfHeaderStylesDefined(unsafeStyles);\n  }\n\n  const safeStyles: ViewStyle = {\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: boxShadow is only for Web\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform,\n  };\n\n  // Setting a property to undefined triggers default style\n  // So we need to filter them out\n  // Users can use `null` instead\n  for (const styleProp in safeStyles) {\n    // @ts-expect-error: typescript wrongly complains that styleProp cannot be used to index safeStyles\n    if (safeStyles[styleProp] === undefined) {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete safeStyles[styleProp];\n    }\n  }\n\n  const backgroundStyle = [\n    safeStyles,\n    headerShadowVisible === false && {\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0,\n    },\n  ];\n\n  const leftButton = headerLeft\n    ? headerLeft({\n        tintColor: headerTintColor,\n        pressColor: headerPressColor,\n        pressOpacity: headerPressOpacity,\n        labelVisible: headerLeftLabelVisible,\n      })\n    : null;\n\n  const rightButton = headerRight\n    ? headerRight({\n        tintColor: headerTintColor,\n        pressColor: headerPressColor,\n        pressOpacity: headerPressOpacity,\n      })\n    : null;\n\n  const headerTitle =\n    typeof customTitle !== 'function'\n      ? (props: React.ComponentProps<typeof HeaderTitle>) => (\n          <HeaderTitle {...props} />\n        )\n      : customTitle;\n\n  return (\n    <React.Fragment>\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[\n          StyleSheet.absoluteFill,\n          { zIndex: 0 },\n          backgroundContainerStyle,\n        ]}\n      >\n        {headerBackground ? (\n          headerBackground({ style: backgroundStyle })\n        ) : headerTransparent ? null : (\n          <HeaderBackground style={backgroundStyle} />\n        )}\n      </Animated.View>\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[{ height, minHeight, maxHeight, opacity, transform }]}\n      >\n        <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n        <View pointerEvents=\"box-none\" style={styles.content}>\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              styles.left,\n              headerTitleAlign === 'center' && styles.expand,\n              { marginStart: insets.left },\n              leftContainerStyle,\n            ]}\n          >\n            {leftButton}\n          </Animated.View>\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              styles.title,\n              {\n                // Avoid the title from going offscreen or overlapping buttons\n                maxWidth:\n                  headerTitleAlign === 'center'\n                    ? layout.width -\n                      ((leftButton\n                        ? headerLeftLabelVisible !== false\n                          ? 80\n                          : 32\n                        : 16) +\n                        Math.max(insets.left, insets.right)) *\n                        2\n                    : layout.width -\n                      ((leftButton ? 72 : 16) +\n                        (rightButton ? 72 : 16) +\n                        insets.left -\n                        insets.right),\n              },\n              titleContainerStyle,\n            ]}\n          >\n            {headerTitle({\n              children: title,\n              allowFontScaling: titleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: titleStyle,\n            })}\n          </Animated.View>\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              styles.right,\n              styles.expand,\n              { marginEnd: insets.right },\n              rightContainerStyle,\n            ]}\n          >\n            {rightButton}\n          </Animated.View>\n        </View>\n      </Animated.View>\n    </React.Fragment>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n  title: {\n    marginHorizontal: 16,\n    justifyContent: 'center',\n  },\n  left: {\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  right: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  expand: {\n    flexGrow: 1,\n    flexBasis: 0,\n  },\n});\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nimport type { HeaderBackButtonProps } from '../types';\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible,\n  onLabelLayout,\n  onPress,\n  pressColor,\n  pressOpacity,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  testID,\n  style,\n}: HeaderBackButtonProps) {\n  const { colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <PlatformPressable\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      testID={testID}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      android_ripple={{ borderless: true }}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth, // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n  },\n});\n","import getNamedContext from '../getNamedContext';\n\nconst HeaderBackContext = getNamedContext<{ title: string } | undefined>(\n  'HeaderBackContext',\n  undefined\n);\n\nexport default HeaderBackContext;\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\ntype Props = Omit<ViewProps, 'style'> & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children?: React.ReactNode;\n};\n\nexport default function HeaderBackground({ style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        {\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n  },\n});\n","import getNamedContext from '../getNamedContext';\n\nconst HeaderHeightContext = getNamedContext<number | undefined>(\n  'HeaderHeightContext',\n  undefined\n);\n\nexport default HeaderHeightContext;\n","import getNamedContext from '../getNamedContext';\n\nconst HeaderShownContext = getNamedContext('HeaderShownContext', false);\n\nexport default HeaderShownContext;\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextProps,\n  TextStyle,\n} from 'react-native';\n\ntype Props = Omit<TextProps, 'style'> & {\n  tintColor?: string;\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      aria-level=\"1\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n","import { Platform } from 'react-native';\n\nimport type { Layout } from '../types';\n\nexport default function getDefaultHeaderHeight(\n  layout: Layout,\n  modalPresentation: boolean,\n  statusBarHeight: number\n): number {\n  let headerHeight;\n\n  const isLandscape = layout.width > layout.height;\n\n  if (Platform.OS === 'ios') {\n    if (Platform.isPad || Platform.isTV) {\n      if (modalPresentation) {\n        headerHeight = 56;\n      } else {\n        headerHeight = 50;\n      }\n    } else {\n      if (isLandscape) {\n        headerHeight = 32;\n      } else {\n        if (modalPresentation) {\n          headerHeight = 56;\n        } else {\n          headerHeight = 44;\n        }\n      }\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n}\n","import type { HeaderOptions } from '../types';\n\nexport default function getHeaderTitle(\n  options: { title?: string; headerTitle?: HeaderOptions['headerTitle'] },\n  fallback: string\n): string {\n  return typeof options.headerTitle === 'string'\n    ? options.headerTitle\n    : options.title !== undefined\n    ? options.title\n    : fallback;\n}\n","import * as React from 'react';\n\nimport HeaderHeightContext from './HeaderHeightContext';\n\nexport default function useHeaderHeight() {\n  const height = React.useContext(HeaderHeightContext);\n\n  if (height === undefined) {\n    throw new Error(\n      \"Couldn't find the header height. Are you inside a screen in a navigator with a header?\"\n    );\n  }\n\n  return height;\n}\n","export { default } from './MaskedViewNative';\n","/**\n * The native MaskedView that we explicitly re-export for supported platforms: Android, iOS.\n */\nimport * as React from 'react';\nimport { UIManager } from 'react-native';\n\ntype MaskedViewType =\n  typeof import('@react-native-masked-view/masked-view').default;\n\ntype Props = React.ComponentProps<MaskedViewType> & {\n  children: React.ReactElement;\n};\n\nlet RNCMaskedView: MaskedViewType | undefined;\n\ntry {\n  // Add try/catch to support usage even if it's not installed, since it's optional.\n  // Newer versions of Metro will handle it properly.\n  RNCMaskedView = require('@react-native-masked-view/masked-view').default;\n} catch (e) {\n  // Ignore\n}\n\nconst isMaskedViewAvailable =\n  UIManager.getViewManagerConfig('RNCMaskedView') != null;\n\nexport default function MaskedView({ children, ...rest }: Props) {\n  if (isMaskedViewAvailable && RNCMaskedView) {\n    return <RNCMaskedView {...rest}>{children}</RNCMaskedView>;\n  }\n\n  return children;\n}\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, Text, TextStyle } from 'react-native';\n\ntype Props = {\n  color?: string;\n  size?: number;\n  style?: StyleProp<TextStyle>;\n};\n\nexport default function MissingIcon({ color, size, style }: Props) {\n  return <Text style={[styles.icon, { color, fontSize: size }, style]}>⏷</Text>;\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  PressableProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nexport type Props = Omit<PressableProps, 'style'> & {\n  pressColor?: string;\n  pressOpacity?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children: React.ReactNode;\n};\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport default function PlatformPressable({\n  onPressIn,\n  onPressOut,\n  android_ripple,\n  pressColor,\n  pressOpacity = 0.3,\n  style,\n  ...rest\n}: Props) {\n  const { dark } = useTheme();\n  const [opacity] = React.useState(() => new Animated.Value(1));\n\n  const animateTo = (toValue: number, duration: number) => {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    animateTo(pressOpacity, 0);\n    onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    animateTo(1, 200);\n    onPressOut?.(e);\n  };\n\n  return (\n    <AnimatedPressable\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? {\n              color:\n                pressColor !== undefined\n                  ? pressColor\n                  : dark\n                  ? 'rgba(255, 255, 255, .32)'\n                  : 'rgba(0, 0, 0, .32)',\n              ...android_ripple,\n            }\n          : undefined\n      }\n      style={[{ opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1 }, style]}\n      {...rest}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Platform, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene({\n  visible,\n  children,\n  style,\n  ...rest\n}: Props) {\n  if (Platform.OS === 'web') {\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!visible}\n        style={[\n          { display: visible ? 'flex' : 'none' },\n          styles.container,\n          style,\n        ]}\n        pointerEvents={visible ? 'auto' : 'none'}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, style]}\n      // box-none doesn't seem to work properly on Android\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <View\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS & macOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' || Platform.OS === 'macos' ? !visible : true\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n        style={visible ? styles.attached : styles.detached}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n","import * as React from 'react';\nimport {\n  Dimensions,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  initialWindowMetrics,\n  SafeAreaInsetsContext,\n  SafeAreaProvider,\n} from 'react-native-safe-area-context';\n\ntype Props = {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst { width = 0, height = 0 } = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics =\n  Platform.OS === 'web' || initialWindowMetrics == null\n    ? {\n        frame: { x: 0, y: 0, width, height },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : initialWindowMetrics;\n\nexport default function SafeAreaProviderCompat({ children, style }: Props) {\n  return (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return <View style={[styles.container, style]}>{children}</View>;\n        }\n\n        return (\n          <SafeAreaProvider initialMetrics={initialMetrics} style={style}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  );\n}\n\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import {\n  NavigationContext,\n  NavigationProp,\n  NavigationRouteContext,\n  ParamListBase,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\n\ntype Props = {\n  focused: boolean;\n  modal?: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  headerTransparent?: boolean;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n              style={headerTransparent ? styles.absolute : null}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n","import * as React from 'react';\n\nconst contexts = '__react_navigation__elements_contexts';\n\ndeclare global {\n  var __react_navigation__elements_contexts: Map<string, React.Context<any>>;\n}\n\n// We use a global variable to keep our contexts so that we can reuse same contexts across packages\nglobal[contexts] = global[contexts] ?? new Map<string, React.Context<any>>();\n\nexport default function getNamedContext<T>(\n  name: string,\n  initialValue: T\n): React.Context<T> {\n  let context = global[contexts].get(name);\n\n  if (context) {\n    return context;\n  }\n\n  context = React.createContext<T>(initialValue);\n  context.displayName = name;\n\n  global[contexts].set(name, context);\n\n  return context;\n}\n","export { default as Background } from './Background';\nexport { default as getDefaultHeaderHeight } from './Header/getDefaultHeaderHeight';\nexport { default as getHeaderTitle } from './Header/getHeaderTitle';\nexport { default as Header } from './Header/Header';\nexport { default as HeaderBackButton } from './Header/HeaderBackButton';\nexport { default as HeaderBackContext } from './Header/HeaderBackContext';\nexport { default as HeaderBackground } from './Header/HeaderBackground';\nexport { default as HeaderHeightContext } from './Header/HeaderHeightContext';\nexport { default as HeaderShownContext } from './Header/HeaderShownContext';\nexport { default as HeaderTitle } from './Header/HeaderTitle';\nexport { default as useHeaderHeight } from './Header/useHeaderHeight';\nexport { default as MissingIcon } from './MissingIcon';\nexport { default as PlatformPressable } from './PlatformPressable';\nexport { default as ResourceSavingView } from './ResourceSavingView';\nexport { default as SafeAreaProviderCompat } from './SafeAreaProviderCompat';\nexport { default as Screen } from './Screen';\n\nexport const Assets = [\n  // eslint-disable-next-line import/no-commonjs\n  require('./assets/back-icon.png'),\n  // eslint-disable-next-line import/no-commonjs\n  require('./assets/back-icon-mask.png'),\n];\n\nexport * from './types';\n","/**\n * Navigators\n */\nexport { default as createNativeStackNavigator } from './navigators/createNativeStackNavigator';\n\n/**\n * Views\n */\nexport { default as NativeStackView } from './views/NativeStackView';\n\n/**\n * Types\n */\nexport type {\n  NativeStackHeaderProps,\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigationProp,\n  NativeStackScreenProps,\n} from './types';\n","import {\n  createNavigatorFactory,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigatorProps,\n} from '../types';\nimport NativeStackView from '../views/NativeStackView';\n\nfunction NativeStackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: NativeStackNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      NativeStackNavigationOptions,\n      NativeStackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation?.addListener?.('tabPress', (e: any) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <NativeStackView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  NativeStackNavigationOptions,\n  NativeStackNavigationEventMap,\n  typeof NativeStackNavigator\n>(NativeStackNavigator);\n","import type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nexport default function useInvalidPreventRemoveError(\n  state: StackNavigationState<ParamListBase>\n) {\n  const [nextDismissedKey, setNextDismissedKey] = React.useState<string | null>(\n    null\n  );\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using a 'usePreventRemove' hook with 'headerBackButtonMenuEnabled: false' to prevent users from natively going back multiple screens.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return { setNextDismissedKey };\n}\n","import { usePreventRemoveContext } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { NativeStackDescriptorMap } from '../types';\n\nexport default function useInvalidPreventRemoveError(\n  descriptors: NativeStackDescriptorMap\n) {\n  const { preventedRoutes } = usePreventRemoveContext();\n  const preventedRouteKey = Object.keys(preventedRoutes)[0];\n  const preventedDescriptor = descriptors[preventedRouteKey];\n  const isHeaderBackButtonMenuEnabledOnPreventedScreen =\n    preventedDescriptor?.options?.headerBackButtonMenuEnabled;\n  const preventedRouteName = preventedDescriptor?.route?.name;\n\n  React.useEffect(() => {\n    if (\n      preventedRouteKey != null &&\n      isHeaderBackButtonMenuEnabledOnPreventedScreen\n    ) {\n      const message =\n        `The screen ${preventedRouteName} uses 'usePreventRemove' hook alongside 'headerBackButtonMenuEnabled: true', which is not supported. \\n\\n` +\n        `Consider removing 'headerBackButtonMenuEnabled: true' from ${preventedRouteName} screen to get rid of this error.`;\n      console.error(message);\n    }\n  }, [\n    preventedRouteKey,\n    isHeaderBackButtonMenuEnabledOnPreventedScreen,\n    preventedRouteName,\n  ]);\n}\n","import * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport type { StackPresentationTypes } from 'react-native-screens';\n\ntype ContainerProps = ViewProps & {\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n};\n\nlet Container = View as unknown as React.ComponentType<ContainerProps>;\n\nif (process.env.NODE_ENV !== 'production') {\n  const DebugContainer = (props: ContainerProps) => {\n    const { stackPresentation, ...rest } = props;\n\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      // This is necessary for LogBox\n      return (\n        <AppContainer>\n          <View {...rest} />\n        </AppContainer>\n      );\n    }\n\n    return <View {...rest} />;\n  };\n\n  Container = DebugContainer;\n}\n\nexport default Container;\n","// @ts-ignore: No declaration available\nimport ReactNativeStyleAttributes from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\n\nexport function processFonts(\n  fontFamilies: (string | undefined)[]\n): (string | undefined)[] {\n  // @ts-ignore: React Native types are incorrect here and don't consider fontFamily a style value\n  const fontFamilyProcessor = ReactNativeStyleAttributes.fontFamily?.process;\n  if (typeof fontFamilyProcessor === 'function') {\n    return fontFamilies.map(fontFamilyProcessor);\n  }\n  return fontFamilies;\n}\n","import { getHeaderTitle, HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  headerTopInsetEnabled: boolean;\n  headerHeight: number;\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerHeight,\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerBackground,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  headerTopInsetEnabled,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = getHeaderTitle({ title, headerTitle }, route.name);\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    canGoBack,\n    label: headerBackTitle,\n  });\n  const headerRightElement = headerRight?.({\n    tintColor,\n    canGoBack,\n  });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({\n          tintColor,\n          children: titleText,\n        })\n      : null;\n\n  const supportsHeaderSearchBar =\n    typeof isSearchBarAvailableForCurrentPlatform === 'boolean'\n      ? isSearchBarAvailableForCurrentPlatform\n      : // Fallback for older versions of react-native-screens\n        Platform.OS === 'ios' && SearchBar != null;\n\n  const hasHeaderSearchBar =\n    supportsHeaderSearchBar && headerSearchBarOptions != null;\n\n  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  const translucent =\n    headerBackground != null ||\n    headerTransparent ||\n    // When using a SearchBar or large title, the header needs to be translucent for it to work on iOS\n    ((hasHeaderSearchBar || headerLargeTitle) &&\n      Platform.OS === 'ios' &&\n      headerTransparent !== false);\n\n  return (\n    <>\n      {headerBackground != null ? (\n        <View\n          style={[\n            styles.background,\n            headerTransparent ? styles.translucent : null,\n            { height: headerHeight },\n          ]}\n        >\n          {headerBackground()}\n        </View>\n      ) : null}\n      <ScreenStackHeaderConfig\n        backButtonInCustomView={backButtonInCustomView}\n        backgroundColor={\n          headerStyleFlattened.backgroundColor ??\n          (headerBackground != null || headerTransparent\n            ? 'transparent'\n            : colors.card)\n        }\n        backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n        backTitleFontFamily={backTitleFontFamily}\n        backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n        blurEffect={headerBlurEffect}\n        color={tintColor}\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n        disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n        hidden={headerShown === false}\n        hideBackButton={headerBackVisible === false}\n        hideShadow={\n          headerShadowVisible === false ||\n          headerBackground != null ||\n          (headerTransparent && headerShadowVisible !== true)\n        }\n        largeTitle={headerLargeTitle}\n        largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n        largeTitleColor={headerLargeTitleStyleFlattened.color}\n        largeTitleFontFamily={largeTitleFontFamily}\n        largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n        largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n        largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n        title={titleText}\n        titleColor={titleColor}\n        titleFontFamily={titleFontFamily}\n        titleFontSize={titleFontSize}\n        titleFontWeight={titleFontWeight}\n        topInsetEnabled={headerTopInsetEnabled}\n        translucent={\n          // This defaults to `true`, so we can't pass `undefined`\n          translucent === true\n        }\n      >\n        {Platform.OS === 'ios' ? (\n          <>\n            {headerLeftElement != null ? (\n              <ScreenStackHeaderLeftView>\n                {headerLeftElement}\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleElement != null ? (\n              <ScreenStackHeaderCenterView>\n                {headerTitleElement}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        ) : (\n          <>\n            {headerLeftElement != null || typeof headerTitle === 'function' ? (\n              <ScreenStackHeaderLeftView>\n                <View style={styles.row}>\n                  {headerLeftElement}\n                  {headerTitleAlign !== 'center' ? (\n                    typeof headerTitle === 'function' ? (\n                      headerTitleElement\n                    ) : (\n                      <HeaderTitle\n                        tintColor={tintColor}\n                        style={headerTitleStyleSupported}\n                      >\n                        {titleText}\n                      </HeaderTitle>\n                    )\n                  ) : null}\n                </View>\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleAlign === 'center' ? (\n              <ScreenStackHeaderCenterView>\n                {typeof headerTitle === 'function' ? (\n                  headerTitleElement\n                ) : (\n                  <HeaderTitle\n                    tintColor={tintColor}\n                    style={headerTitleStyleSupported}\n                  >\n                    {titleText}\n                  </HeaderTitle>\n                )}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        )}\n        {headerBackImageSource !== undefined ? (\n          <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n        ) : null}\n        {headerRightElement != null ? (\n          <ScreenStackHeaderRightView>\n            {headerRightElement}\n          </ScreenStackHeaderRightView>\n        ) : null}\n        {hasHeaderSearchBar ? (\n          <ScreenStackHeaderSearchBarView>\n            <SearchBar {...headerSearchBarOptions} />\n          </ScreenStackHeaderSearchBarView>\n        ) : null}\n      </ScreenStackHeaderConfig>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  translucent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n  },\n  background: {\n    overflow: 'hidden',\n  },\n});\n","import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  headerTopInsetEnabled,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  headerTopInsetEnabled: boolean;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            headerTopInsetEnabled={headerTopInsetEnabled}\n            canGoBack\n          />\n          {content}\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  focused: boolean;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: ScreenProps['onHeaderBackButtonClicked'];\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  index,\n  focused,\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    headerTransparent,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone = Platform.OS === 'ios' && !(Platform.isPad || Platform.isTV);\n  const isLandscape = frame.width > frame.height;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const topInset =\n    isParentHeaderShown ||\n    (Platform.OS === 'ios' && isModal) ||\n    (isIPhone && isLandscape)\n      ? 0\n      : insets.top;\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(frame, isModal, topInset);\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerTopInsetEnabled = topInset !== 0;\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n      nativeBackButtonDismissalEnabled={false} // on Android\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      // @ts-ignore props not exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onNativeDismissCancelled={onNativeDismissCancelled}\n      // this prop is available since rn-screens 3.16\n      freezeOnBlur={freezeOnBlur}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || headerShown !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                headerShown !== false ? headerHeight : parentHeaderHeight ?? 0\n              }\n            >\n              {/**\n               * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n               * We don't render it conditionally to make it possible to dynamically render a custom `header`\n               * Otherwise dynamically rendering a custom `header` leaves the native header visible\n               *\n               * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n               */}\n              <HeaderConfig\n                {...options}\n                route={route}\n                headerBackButtonMenuEnabled={\n                  isRemovePrevented !== undefined\n                    ? !isRemovePrevented\n                    : headerBackButtonMenuEnabled\n                }\n                headerShown={header !== undefined ? false : headerShown}\n                headerHeight={headerHeight}\n                headerBackTitle={\n                  options.headerBackTitle !== undefined\n                    ? options.headerBackTitle\n                    : undefined\n                }\n                headerTopInsetEnabled={headerTopInsetEnabled}\n                canGoBack={headerBack !== undefined}\n              />\n              <View\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={styles.scene}\n              >\n                <MaybeNestedStack\n                  options={options}\n                  route={route}\n                  presentation={presentation}\n                  headerHeight={headerHeight}\n                  headerTopInsetEnabled={headerTopInsetEnabled}\n                >\n                  <HeaderBackContext.Provider value={headerBack}>\n                    {render()}\n                  </HeaderBackContext.Provider>\n                </MaybeNestedStack>\n                {header !== undefined && headerShown !== false ? (\n                  <View\n                    onLayout={(e) => {\n                      setCustomHeaderHeight(e.nativeEvent.layout.height);\n                    }}\n                    style={headerTransparent ? styles.absolute : null}\n                  >\n                    {header({\n                      back: headerBack,\n                      options,\n                      route,\n                      navigation,\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const isFocused = state.index === index;\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            focused={isFocused}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scene: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n","import type { NavigationAction } from '@react-navigation/core';\nimport * as React from 'react';\nimport { GestureResponderEvent, Platform, Text, TextProps } from 'react-native';\n\nimport useLinkProps from './useLinkProps';\nimport type { To } from './useLinkTo';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> = {\n  to: To<ParamList>;\n  action?: NavigationAction;\n  target?: string;\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n} & (TextProps & { children: React.ReactNode });\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link<ParamList extends ReactNavigation.RootParamList>({\n  to,\n  action,\n  ...rest\n}: Props<ParamList>) {\n  const props = useLinkProps<ParamList>({ to, action });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n\n    props.onPress(e);\n  };\n\n  return React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: { onClick: onPress } as any,\n      default: { onPress },\n    }),\n  });\n}\n","import type { ParamListBase } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport type { LinkingOptions } from './types';\n\nconst LinkingContext = React.createContext<{\n  options: LinkingOptions<ParamListBase> | undefined;\n}>({ options: undefined });\n\nLinkingContext.displayName = 'LinkingContext';\n\nexport default LinkingContext;\n","import {\n  BaseNavigationContainer,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  NavigationContainerProps,\n  NavigationContainerRef,\n  ParamListBase,\n  validatePathConfig,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\nimport DefaultTheme from './theming/DefaultTheme';\nimport ThemeProvider from './theming/ThemeProvider';\nimport type { DocumentTitleOptions, LinkingOptions, Theme } from './types';\nimport useBackButton from './useBackButton';\nimport useDocumentTitle from './useDocumentTitle';\nimport useLinking from './useLinking';\nimport useThenable from './useThenable';\n\ndeclare global {\n  var REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n}\n\nglobal.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\ntype Props<ParamList extends {}> = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions<ParamList>;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nfunction NavigationContainerInner(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props<ParamListBase>,\n  ref?: React.Ref<NavigationContainerRef<ParamListBase> | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking?.config) {\n    validatePathConfig(linking.config);\n  }\n\n  const refContainer =\n    React.useRef<NavigationContainerRef<ParamListBase>>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    independent: rest.independent,\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  // Add additional linking related info to the ref\n  // This will be used by the devtools\n  React.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return {\n            ...linking,\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? getPathFromState,\n            getActionFromState:\n              linking?.getActionFromState ?? getActionFromState,\n          };\n        },\n      });\n    }\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n}\n\nconst NavigationContainer = React.forwardRef(NavigationContainerInner) as <\n  RootParamList extends {} = ReactNavigation.RootParamList\n>(\n  props: Props<RootParamList> & {\n    ref?: React.Ref<NavigationContainerRef<RootParamList>>;\n  }\n) => React.ReactElement;\n\nexport default NavigationContainer;\n","import { CurrentRenderContext } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport ServerContext, { ServerContextType } from './ServerContext';\nimport type { ServerContainerRef } from './types';\n\ntype Props = ServerContextType & {\n  children: React.ReactNode;\n};\n\n/**\n * Container component for server rendering.\n *\n * @param props.location Location object to base the initial URL for SSR.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which contains helper methods.\n */\nexport default React.forwardRef(function ServerContainer(\n  { children, location }: Props,\n  ref: React.Ref<ServerContainerRef>\n) {\n  React.useEffect(() => {\n    console.error(\n      \"'ServerContainer' should only be used on the server with 'react-dom/server' for SSR.\"\n    );\n  }, []);\n\n  const current: { options?: object } = {};\n\n  if (ref) {\n    const value = {\n      getCurrentOptions() {\n        return current.options;\n      },\n    };\n\n    // We write to the `ref` during render instead of `React.useImperativeHandle`\n    // This is because `useImperativeHandle` will update the ref after 'commit',\n    // and there's no 'commit' phase during SSR.\n    // Mutating ref during render is unsafe in concurrent mode, but we don't care about it for SSR.\n    if (typeof ref === 'function') {\n      ref(value);\n    } else {\n      // @ts-expect-error: the TS types are incorrect and say that ref.current is readonly\n      ref.current = value;\n    }\n  }\n\n  return (\n    <ServerContext.Provider value={{ location }}>\n      <CurrentRenderContext.Provider value={current}>\n        {children}\n      </CurrentRenderContext.Provider>\n    </ServerContext.Provider>\n  );\n});\n","import * as React from 'react';\n\nexport type ServerContextType = {\n  location?: {\n    pathname: string;\n    search: string;\n  };\n};\n\nconst ServerContext = React.createContext<ServerContextType | undefined>(\n  undefined\n);\n\nexport default ServerContext;\n","import escapeStringRegexp from 'escape-string-regexp';\n\nexport default function extractPathFromURL(prefixes: string[], url: string) {\n  for (const prefix of prefixes) {\n    const protocol = prefix.match(/^[^:]+:/)?.[0] ?? '';\n    const host = prefix\n      .replace(new RegExp(`^${escapeStringRegexp(protocol)}`), '')\n      .replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n      .replace(/^\\//, ''); // Remove extra leading slash\n\n    const prefixRegex = new RegExp(\n      `^${escapeStringRegexp(protocol)}(/)*${host\n        .split('.')\n        .map((it) => (it === '*' ? '[^/]+' : escapeStringRegexp(it)))\n        .join('\\\\.')}`\n    );\n\n    const normalizedURL = url.replace(/\\/+/g, '/');\n\n    if (prefixRegex.test(normalizedURL)) {\n      return normalizedURL.replace(prefixRegex, '');\n    }\n  }\n\n  return undefined;\n}\n","export { default as Link } from './Link';\nexport { default as LinkingContext } from './LinkingContext';\nexport { default as NavigationContainer } from './NavigationContainer';\nexport { default as ServerContainer } from './ServerContainer';\nexport { default as DarkTheme } from './theming/DarkTheme';\nexport { default as DefaultTheme } from './theming/DefaultTheme';\nexport { default as ThemeProvider } from './theming/ThemeProvider';\nexport { default as useTheme } from './theming/useTheme';\nexport * from './types';\nexport { default as useLinkBuilder } from './useLinkBuilder';\nexport { default as useLinkProps } from './useLinkProps';\nexport { default as useLinkTo } from './useLinkTo';\nexport { default as useScrollToTop } from './useScrollToTop';\nexport * from '@react-navigation/core';\n","import type { Theme } from '../types';\n\nconst DarkTheme: Theme = {\n  dark: true,\n  colors: {\n    primary: 'rgb(10, 132, 255)',\n    background: 'rgb(1, 1, 1)',\n    card: 'rgb(18, 18, 18)',\n    text: 'rgb(229, 229, 231)',\n    border: 'rgb(39, 39, 41)',\n    notification: 'rgb(255, 69, 58)',\n  },\n};\n\nexport default DarkTheme;\n","import type { Theme } from '../types';\n\nconst DefaultTheme: Theme = {\n  dark: false,\n  colors: {\n    primary: 'rgb(0, 122, 255)',\n    background: 'rgb(242, 242, 242)',\n    card: 'rgb(255, 255, 255)',\n    text: 'rgb(28, 28, 30)',\n    border: 'rgb(216, 216, 216)',\n    notification: 'rgb(255, 59, 48)',\n  },\n};\n\nexport default DefaultTheme;\n","import * as React from 'react';\n\nimport type { Theme } from '../types';\nimport DefaultTheme from './DefaultTheme';\n\nconst ThemeContext = React.createContext<Theme>(DefaultTheme);\n\nThemeContext.displayName = 'ThemeContext';\n\nexport default ThemeContext;\n","import * as React from 'react';\n\nimport type { Theme } from '../types';\nimport ThemeContext from './ThemeContext';\n\ntype Props = {\n  value: Theme;\n  children: React.ReactNode;\n};\n\nexport default function ThemeProvider({ value, children }: Props) {\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n","import * as React from 'react';\n\nimport ThemeContext from './ThemeContext';\n\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n\n  return theme;\n}\n","import type {\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { BackHandler } from 'react-native';\n\nexport default function useBackButton(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>\n) {\n  React.useEffect(() => {\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      () => {\n        const navigation = ref.current;\n\n        if (navigation == null) {\n          return false;\n        }\n\n        if (navigation.canGoBack()) {\n          navigation.goBack();\n\n          return true;\n        }\n\n        return false;\n      }\n    );\n\n    return () => subscription.remove();\n  }, [ref]);\n}\n","export default function useDocumentTitle() {\n  // Noop for React Native\n}\n","import {\n  getPathFromState,\n  NavigationHelpers,\n  NavigationHelpersContext,\n  NavigationProp,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildLink = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  return buildLink;\n}\n","import {\n  getPathFromState,\n  NavigationAction,\n  NavigationContainerRefContext,\n  NavigationHelpersContext,\n  NavigatorScreenParams,\n  ParamListBase,\n} from '@react-navigation/core';\nimport type { NavigationState, PartialState } from '@react-navigation/routers';\nimport * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport LinkingContext from './LinkingContext';\nimport useLinkTo, { To } from './useLinkTo';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> = {\n  to: To<ParamList>;\n  action?: NavigationAction;\n};\n\nconst getStateFromParams = (\n  params: NavigatorScreenParams<ParamListBase, NavigationState> | undefined\n): PartialState<NavigationState> | NavigationState | undefined => {\n  if (params?.state) {\n    return params.state;\n  }\n\n  if (params?.screen) {\n    return {\n      routes: [\n        {\n          name: params.screen,\n          params: params.params,\n          // @ts-expect-error\n          state: params.screen\n            ? getStateFromParams(\n                params.params as\n                  | NavigatorScreenParams<ParamListBase, NavigationState>\n                  | undefined\n              )\n            : undefined,\n        },\n      ],\n    };\n  }\n\n  return undefined;\n};\n\n/**\n * Hook to get props for an anchor tag so it can work with in page navigation.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n */\nexport default function useLinkProps<\n  ParamList extends ReactNavigation.RootParamList\n>({ to, action }: Props<ParamList>) {\n  const root = React.useContext(NavigationContainerRefContext);\n  const navigation = React.useContext(NavigationHelpersContext);\n  const { options } = React.useContext(LinkingContext);\n  const linkTo = useLinkTo<ParamList>();\n\n  const onPress = (\n    e?: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    let shouldHandle = false;\n\n    if (Platform.OS !== 'web' || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (\n      !e.defaultPrevented && // onPress prevented default\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      (e.button == null || e.button === 0) && // ignore everything but left clicks\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      [undefined, null, '', 'self'].includes(e.currentTarget?.target) // let browser handle \"target=_blank\" etc.\n    ) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n\n    if (shouldHandle) {\n      if (action) {\n        if (navigation) {\n          navigation.dispatch(action);\n        } else if (root) {\n          root.dispatch(action);\n        } else {\n          throw new Error(\n            \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n          );\n        }\n      } else {\n        linkTo(to);\n      }\n    }\n  };\n\n  const getPathFromStateHelper = options?.getPathFromState ?? getPathFromState;\n\n  const href =\n    typeof to === 'string'\n      ? to\n      : getPathFromStateHelper(\n          {\n            routes: [\n              {\n                name: to.screen,\n                // @ts-expect-error\n                params: to.params,\n                // @ts-expect-error\n                state: getStateFromParams(to.params),\n              },\n            ],\n          },\n          options?.config\n        );\n\n  return {\n    href,\n    accessibilityRole: 'link' as const,\n    onPress,\n  };\n}\n","import {\n  getActionFromState,\n  getStateFromPath,\n  NavigationContainerRefContext,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\n\nexport type To<\n  ParamList extends ReactNavigation.RootParamList = ReactNavigation.RootParamList,\n  RouteName extends keyof ParamList = keyof ParamList\n> =\n  | string\n  | (undefined extends ParamList[RouteName]\n      ? {\n          screen: Extract<RouteName, string>;\n          params?: ParamList[RouteName];\n        }\n      : {\n          screen: Extract<RouteName, string>;\n          params: ParamList[RouteName];\n        });\n\nexport default function useLinkTo<\n  ParamList extends ReactNavigation.RootParamList\n>() {\n  const navigation = React.useContext(NavigationContainerRefContext);\n  const linking = React.useContext(LinkingContext);\n\n  const linkTo = React.useCallback(\n    (to: To<ParamList>) => {\n      if (navigation === undefined) {\n        throw new Error(\n          \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n        );\n      }\n\n      if (typeof to !== 'string') {\n        // @ts-expect-error: This is fine\n        navigation.navigate(to.screen, to.params);\n        return;\n      }\n\n      if (!to.startsWith('/')) {\n        throw new Error(`The path must start with '/' (${to}).`);\n      }\n\n      const { options } = linking;\n\n      const state = options?.getStateFromPath\n        ? options.getStateFromPath(to, options.config)\n        : getStateFromPath(to, options?.config);\n\n      if (state) {\n        const action = getActionFromState(state, options?.config);\n\n        if (action !== undefined) {\n          navigation.dispatch(action);\n        } else {\n          navigation.reset(state);\n        }\n      } else {\n        throw new Error('Failed to parse the path to a navigation state.');\n      }\n    },\n    [linking, navigation]\n  );\n\n  return linkTo;\n}\n","import {\n  getActionFromState as getActionFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { Linking, Platform } from 'react-native';\n\nimport extractPathFromURL from './extractPathFromURL';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nlet linkingHandlers: Symbol[] = [];\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    prefixes,\n    filter,\n    config,\n    getInitialURL = () =>\n      Promise.race([\n        Linking.getInitialURL(),\n        new Promise<undefined>((resolve) =>\n          // Timeout in 150ms if `getInitialState` doesn't resolve\n          // Workaround for https://github.com/facebook/react-native/issues/25675\n          setTimeout(resolve, 150)\n        ),\n      ]),\n    subscribe = (listener) => {\n      const callback = ({ url }: { url: string }) => listener(url);\n\n      const subscription = Linking.addEventListener('url', callback) as\n        | { remove(): void }\n        | undefined;\n\n      // Storing this in a local variable stops Jest from complaining about import after teardown\n      const removeEventListener = Linking.removeEventListener?.bind(Linking);\n\n      return () => {\n        // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n        if (subscription?.remove) {\n          subscription.remove();\n        } else {\n          removeEventListener?.('url', callback);\n        }\n      };\n    },\n    getStateFromPath = getStateFromPathDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n          Platform.OS === 'android'\n            ? \"- You have set 'android:launchMode=singleTask' in the '<activity />' section of the 'AndroidManifest.xml' file to avoid launching multiple instances\"\n            : '',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const prefixesRef = React.useRef(prefixes);\n  const filterRef = React.useRef(filter);\n  const configRef = React.useRef(config);\n  const getInitialURLRef = React.useRef(getInitialURL);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    prefixesRef.current = prefixes;\n    filterRef.current = filter;\n    configRef.current = config;\n    getInitialURLRef.current = getInitialURL;\n    getStateFromPathRef.current = getStateFromPath;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const getStateFromURL = React.useCallback(\n    (url: string | null | undefined) => {\n      if (!url || (filterRef.current && !filterRef.current(url))) {\n        return undefined;\n      }\n\n      const path = extractPathFromURL(prefixesRef.current, url);\n\n      return path !== undefined\n        ? getStateFromPathRef.current(path, configRef.current)\n        : undefined;\n    },\n    []\n  );\n\n  const getInitialState = React.useCallback(() => {\n    let state: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const url = getInitialURLRef.current();\n\n      if (url != null && typeof url !== 'string') {\n        return url.then((url) => {\n          const state = getStateFromURL(url);\n\n          return state;\n        });\n      }\n\n      state = getStateFromURL(url);\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(state) : state);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n  }, [getStateFromURL]);\n\n  React.useEffect(() => {\n    const listener = (url: string) => {\n      if (!enabled) {\n        return;\n      }\n\n      const navigation = ref.current;\n      const state = navigation ? getStateFromURL(url) : undefined;\n\n      if (navigation && state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        const action = getActionFromStateRef.current(state, configRef.current);\n\n        if (action !== undefined) {\n          try {\n            navigation.dispatch(action);\n          } catch (e) {\n            // Ignore any errors from deep linking.\n            // This could happen in case of malformed links, navigation object not being initialized etc.\n            console.warn(\n              `An error occurred when trying to handle the link '${url}': ${\n                typeof e === 'object' && e != null && 'message' in e\n                  ? // @ts-expect-error: we're already checking for this\n                    e.message\n                  : e\n              }`\n            );\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      }\n    };\n\n    return subscribe(listener);\n  }, [enabled, getStateFromURL, ref, subscribe]);\n\n  return {\n    getInitialState,\n  };\n}\n","import {\n  EventArg,\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\ntype ScrollOptions = { x?: number; y?: number; animated?: boolean };\n\ntype ScrollableView =\n  | { scrollToTop(): void }\n  | { scrollTo(options: ScrollOptions): void }\n  | { scrollToOffset(options: { offset?: number; animated?: boolean }): void }\n  | { scrollResponderScrollTo(options: ScrollOptions): void };\n\ntype ScrollableWrapper =\n  | { getScrollResponder(): React.ReactNode }\n  | { getNode(): ScrollableView }\n  | ScrollableView;\n\nfunction getScrollableNode(ref: React.RefObject<ScrollableWrapper>) {\n  if (ref.current == null) {\n    return null;\n  }\n\n  if (\n    'scrollToTop' in ref.current ||\n    'scrollTo' in ref.current ||\n    'scrollToOffset' in ref.current ||\n    'scrollResponderScrollTo' in ref.current\n  ) {\n    // This is already a scrollable node.\n    return ref.current;\n  } else if ('getScrollResponder' in ref.current) {\n    // If the view is a wrapper like FlatList, SectionList etc.\n    // We need to use `getScrollResponder` to get access to the scroll responder\n    return ref.current.getScrollResponder();\n  } else if ('getNode' in ref.current) {\n    // When a `ScrollView` is wraped in `Animated.createAnimatedComponent`\n    // we need to use `getNode` to get the ref to the actual scrollview.\n    // Note that `getNode` is deprecated in newer versions of react-native\n    // this is why we check if we already have a scrollable node above.\n    return ref.current.getNode();\n  } else {\n    return ref.current;\n  }\n}\n\nexport default function useScrollToTop(\n  ref: React.RefObject<ScrollableWrapper>\n) {\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  React.useEffect(() => {\n    let tabNavigations: NavigationProp<ReactNavigation.RootParamList>[] = [];\n    let currentNavigation = navigation;\n\n    // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n    // So we need to find all the parent tab navigators and add the listeners there\n    while (currentNavigation) {\n      if (currentNavigation.getState().type === 'tab') {\n        tabNavigations.push(currentNavigation);\n      }\n\n      currentNavigation = currentNavigation.getParent();\n    }\n\n    if (tabNavigations.length === 0) {\n      return;\n    }\n\n    const unsubscribers = tabNavigations.map((tab) => {\n      return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error\n        'tabPress',\n        (e: EventArg<'tabPress', true>) => {\n          // We should scroll to top only when the screen is focused\n          const isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          const isFirst =\n            tabNavigations.includes(navigation) ||\n            navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            const scrollable = getScrollableNode(ref) as ScrollableWrapper;\n\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({ y: 0, animated: true });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({ offset: 0, animated: true });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({ y: 0, animated: true });\n              }\n            }\n          });\n        }\n      );\n    });\n\n    return () => {\n      unsubscribers.forEach((unsubscribe) => unsubscribe());\n    };\n  }, [navigation, ref, route.key]);\n}\n","import * as React from 'react';\n\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\n  const [promise] = React.useState(create);\n\n  let initialState: [boolean, T | undefined] = [false, undefined];\n\n  // Check if our thenable is synchronous\n  promise.then((result) => {\n    initialState = [true, result];\n  });\n\n  const [state, setState] = React.useState(initialState);\n  const [resolved] = state;\n\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n\n  return state;\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport type {\n  CommonNavigationAction,\n  NavigationState,\n  PartialState,\n} from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex((r) => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET': {\n        const nextState = action.payload as State | PartialState<State>;\n\n        if (\n          nextState.routes.length === 0 ||\n          nextState.routes.some(\n            (route: { name: string }) => !state.routeNames.includes(route.name)\n          )\n        ) {\n          return null;\n        }\n\n        if (nextState.stale === false) {\n          if (\n            state.routeNames.length !== nextState.routeNames.length ||\n            nextState.routeNames.some(\n              (name) => !state.routeNames.includes(name)\n            )\n          ) {\n            return null;\n          }\n\n          return {\n            ...nextState,\n            routes: nextState.routes.map((route) =>\n              route.key ? route : { ...route, key: `${route.name}-${nanoid()}` }\n            ),\n          };\n        }\n\n        return nextState;\n      }\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n","import type { NavigationState, PartialState, Route } from './types';\n\ntype ResetState =\n  | PartialState<NavigationState>\n  | NavigationState\n  | (Omit<NavigationState, 'routes'> & {\n      routes: Omit<Route<string>, 'key'>[];\n    });\n\nexport type Action =\n  | {\n      type: 'GO_BACK';\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'NAVIGATE';\n      payload:\n        | {\n            key: string;\n            name?: undefined;\n            params?: object;\n            path?: string;\n            merge?: boolean;\n          }\n        | {\n            name: string;\n            key?: string;\n            params?: object;\n            path?: string;\n            merge?: boolean;\n          };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'RESET';\n      payload: ResetState | undefined;\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'SET_PARAMS';\n      payload: { params?: object };\n      source?: string;\n      target?: string;\n    };\n\nexport function goBack(): Action {\n  return { type: 'GO_BACK' };\n}\n\nexport function navigate(\n  options:\n    | { key: string; params?: object; path?: string; merge?: boolean }\n    | {\n        name: string;\n        key?: string;\n        params?: object;\n        path?: string;\n        merge?: boolean;\n      }\n): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(name: string, params?: object): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(...args: any): Action {\n  if (typeof args[0] === 'string') {\n    return { type: 'NAVIGATE', payload: { name: args[0], params: args[1] } };\n  } else {\n    const payload = args[0] || {};\n\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error(\n        'You need to specify name or key when calling navigate with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigate for usage.'\n      );\n    }\n\n    return { type: 'NAVIGATE', payload };\n  }\n}\n\nexport function reset(state: ResetState | undefined): Action {\n  return { type: 'RESET', payload: state };\n}\n\nexport function setParams(params: object): Action {\n  return { type: 'SET_PARAMS', payload: { params } };\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport TabRouter, {\n  TabActionHelpers,\n  TabActions,\n  TabActionType,\n  TabNavigationState,\n  TabRouterOptions,\n} from './TabRouter';\nimport type {\n  CommonNavigationAction,\n  ParamListBase,\n  PartialState,\n  Router,\n} from './types';\nexport type DrawerStatus = 'open' | 'closed';\n\nexport type DrawerActionType =\n  | TabActionType\n  | {\n      type: 'OPEN_DRAWER' | 'CLOSE_DRAWER' | 'TOGGLE_DRAWER';\n      source?: string;\n      target?: string;\n    };\n\nexport type DrawerRouterOptions = TabRouterOptions & {\n  defaultStatus?: DrawerStatus;\n};\n\nexport type DrawerNavigationState<ParamList extends ParamListBase> = Omit<\n  TabNavigationState<ParamList>,\n  'type' | 'history'\n> & {\n  /**\n   * Type of the router, in this case, it's drawer.\n   */\n  type: 'drawer';\n  /**\n   * Default status of the drawer.\n   */\n  default: DrawerStatus;\n  /**\n   * List of previously visited route keys and drawer open status.\n   */\n  history: (\n    | { type: 'route'; key: string }\n    | { type: 'drawer'; status: DrawerStatus }\n  )[];\n};\n\nexport type DrawerActionHelpers<ParamList extends ParamListBase> =\n  TabActionHelpers<ParamList> & {\n    /**\n     * Open the drawer sidebar.\n     */\n    openDrawer(): void;\n\n    /**\n     * Close the drawer sidebar.\n     */\n    closeDrawer(): void;\n\n    /**\n     * Open the drawer sidebar if closed, or close if opened.\n     */\n    toggleDrawer(): void;\n  };\n\nexport const DrawerActions = {\n  ...TabActions,\n  openDrawer(): DrawerActionType {\n    return { type: 'OPEN_DRAWER' };\n  },\n  closeDrawer(): DrawerActionType {\n    return { type: 'CLOSE_DRAWER' };\n  },\n  toggleDrawer(): DrawerActionType {\n    return { type: 'TOGGLE_DRAWER' };\n  },\n};\n\nexport default function DrawerRouter({\n  defaultStatus = 'closed',\n  ...rest\n}: DrawerRouterOptions): Router<\n  DrawerNavigationState<ParamListBase>,\n  DrawerActionType | CommonNavigationAction\n> {\n  const router = TabRouter(rest) as unknown as Router<\n    DrawerNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  >;\n\n  const isDrawerInHistory = (\n    state:\n      | DrawerNavigationState<ParamListBase>\n      | PartialState<DrawerNavigationState<ParamListBase>>\n  ) => Boolean(state.history?.some((it) => it.type === 'drawer'));\n\n  const addDrawerToHistory = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (isDrawerInHistory(state)) {\n      return state;\n    }\n\n    return {\n      ...state,\n      history: [\n        ...state.history,\n        {\n          type: 'drawer',\n          status: defaultStatus === 'open' ? 'closed' : 'open',\n        },\n      ],\n    };\n  };\n\n  const removeDrawerFromHistory = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (!isDrawerInHistory(state)) {\n      return state;\n    }\n\n    return {\n      ...state,\n      history: state.history.filter((it) => it.type !== 'drawer'),\n    };\n  };\n\n  const openDrawer = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (defaultStatus === 'open') {\n      return removeDrawerFromHistory(state);\n    }\n\n    return addDrawerToHistory(state);\n  };\n\n  const closeDrawer = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (defaultStatus === 'open') {\n      return addDrawerToHistory(state);\n    }\n\n    return removeDrawerFromHistory(state);\n  };\n\n  return {\n    ...router,\n\n    type: 'drawer',\n\n    getInitialState({ routeNames, routeParamList, routeGetIdList }) {\n      const state = router.getInitialState({\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      return {\n        ...state,\n        default: defaultStatus,\n        stale: false,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getRehydratedState(\n      partialState,\n      { routeNames, routeParamList, routeGetIdList }\n    ) {\n      if (partialState.stale === false) {\n        return partialState;\n      }\n\n      let state = router.getRehydratedState(partialState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      if (isDrawerInHistory(partialState)) {\n        // Re-sync the drawer entry in history to correct it if it was wrong\n        state = removeDrawerFromHistory(state);\n        state = addDrawerToHistory(state);\n      }\n\n      return {\n        ...state,\n        default: defaultStatus,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const result = router.getStateForRouteFocus(state, key);\n\n      return closeDrawer(result);\n    },\n\n    getStateForAction(state, action, options) {\n      switch (action.type) {\n        case 'OPEN_DRAWER':\n          return openDrawer(state);\n\n        case 'CLOSE_DRAWER':\n          return closeDrawer(state);\n\n        case 'TOGGLE_DRAWER':\n          if (isDrawerInHistory(state)) {\n            return removeDrawerFromHistory(state);\n          }\n\n          return addDrawerToHistory(state);\n\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          const result = router.getStateForAction(state, action, options);\n\n          if (result != null && result.index !== state.index) {\n            return closeDrawer(result as DrawerNavigationState<ParamListBase>);\n          }\n\n          return result;\n        }\n\n        case 'GO_BACK':\n          if (isDrawerInHistory(state)) {\n            return removeDrawerFromHistory(state);\n          }\n\n          return router.getStateForAction(state, action, options);\n\n        default:\n          return router.getStateForAction(state, action, options);\n      }\n    },\n\n    actionCreators: DrawerActions,\n  };\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = state.routes.filter(\n        (route) =>\n          routeNames.includes(route.name) &&\n          !routeKeyChanges.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route = id\n              ? state.routes.find(\n                  (route) =>\n                    route.name === action.payload.name &&\n                    id === getId?.({ params: route.params })\n                )\n              : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge) {\n              params =\n                action.payload.params !== undefined ||\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params,\n                    }\n                  : route.params;\n            } else {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params ||\n                (action.payload.path && action.payload.path !== route.path)\n                  ? {\n                      ...route,\n                      path: action.payload.path ?? route.path,\n                      params,\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'firstRoute',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (\n          state as PartialState<TabNavigationState<ParamListBase>>\n        ).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find(\n            (r) => r.name === name && !routeKeyChanges.includes(r.name)\n          ) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes: state.routes.map((route, i) => {\n                if (i !== index) {\n                  return route;\n                }\n\n                let params;\n\n                if (action.type === 'NAVIGATE' && action.payload.merge) {\n                  params =\n                    action.payload.params !== undefined ||\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...route.params,\n                          ...action.payload.params,\n                        }\n                      : route.params;\n                } else {\n                  params =\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params;\n                }\n\n                const path =\n                  action.type === 'NAVIGATE' && action.payload.path != null\n                    ? action.payload.path\n                    : route.path;\n\n                return params !== route.params || path !== route.path\n                  ? { ...route, path, params }\n                  : route;\n              }),\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n","import * as CommonActions from './CommonActions';\n\nexport { CommonActions };\n\nexport { default as BaseRouter } from './BaseRouter';\nexport type {\n  DrawerActionHelpers,\n  DrawerActionType,\n  DrawerNavigationState,\n  DrawerRouterOptions,\n  DrawerStatus,\n} from './DrawerRouter';\nexport { DrawerActions, default as DrawerRouter } from './DrawerRouter';\nexport type {\n  StackActionHelpers,\n  StackActionType,\n  StackNavigationState,\n  StackRouterOptions,\n} from './StackRouter';\nexport { StackActions, default as StackRouter } from './StackRouter';\nexport type {\n  TabActionHelpers,\n  TabActionType,\n  TabNavigationState,\n  TabRouterOptions,\n} from './TabRouter';\nexport { TabActions, default as TabRouter } from './TabRouter';\nexport * from './types';\n","import React, { useRef, Suspense, Fragment } from \"react\";\n\ninterface StorageRef {\n  promise?: Promise<void>;\n  resolve?: (value: void | PromiseLike<void>) => void;\n}\n\nfunction Suspender({\n  freeze,\n  children,\n}: {\n  freeze: boolean;\n  children: React.ReactNode;\n}) {\n  const promiseCache = useRef<StorageRef>({}).current;\n  if (freeze && !promiseCache.promise) {\n    promiseCache.promise = new Promise((resolve) => {\n      promiseCache.resolve = resolve;\n    });\n    throw promiseCache.promise;\n  } else if (freeze) {\n    throw promiseCache.promise;\n  } else if (promiseCache.promise) {\n    promiseCache.resolve!();\n    promiseCache.promise = undefined;\n  }\n\n  return <Fragment>{children}</Fragment>;\n}\n\ninterface Props {\n  freeze: boolean;\n  children: React.ReactNode;\n  placeholder?: React.ReactNode;\n}\n\nexport function Freeze({ freeze, children, placeholder = null }: Props) {\n  return (\n    <Suspense fallback={placeholder}>\n      <Suspender freeze={freeze}>{children}</Suspender>\n    </Suspense>\n  );\n}\n","import type { Metrics } from './SafeArea.types';\nimport NativeSafeAreaContext from './specs/NativeSafeAreaContext';\n\nexport const initialWindowMetrics = (NativeSafeAreaContext?.getConstants()\n  ?.initialWindowMetrics ?? null) as Metrics | null;\n\n/**\n * @deprecated\n */\nexport const initialWindowSafeAreaInsets = initialWindowMetrics?.insets;\n","import NativeSafeAreaProvider from './specs/NativeSafeAreaProvider';\n\nexport { NativeSafeAreaProvider };\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, ViewProps } from 'react-native';\nimport { NativeSafeAreaProvider } from './NativeSafeAreaProvider';\nimport type {\n  EdgeInsets,\n  InsetChangedEvent,\n  Metrics,\n  Rect,\n} from './SafeArea.types';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nexport const SafeAreaInsetsContext = React.createContext<EdgeInsets | null>(\n  null,\n);\nif (isDev) {\n  SafeAreaInsetsContext.displayName = 'SafeAreaInsetsContext';\n}\n\nexport const SafeAreaFrameContext = React.createContext<Rect | null>(null);\nif (isDev) {\n  SafeAreaFrameContext.displayName = 'SafeAreaFrameContext';\n}\n\nexport interface SafeAreaProviderProps extends ViewProps {\n  children?: React.ReactNode;\n  initialMetrics?: Metrics | null;\n  /**\n   * @deprecated\n   */\n  initialSafeAreaInsets?: EdgeInsets | null;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialMetrics,\n  initialSafeAreaInsets,\n  style,\n  ...others\n}: SafeAreaProviderProps) {\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState<EdgeInsets | null>(\n    initialMetrics?.insets ?? initialSafeAreaInsets ?? parentInsets ?? null,\n  );\n  const [frame, setFrame] = React.useState<Rect>(\n    initialMetrics?.frame ??\n      parentFrame ?? {\n        // Backwards compat so we render anyway if we don't have frame.\n        x: 0,\n        y: 0,\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n  );\n  const onInsetsChange = React.useCallback(\n    (event: InsetChangedEvent) => {\n      const {\n        nativeEvent: { frame: nextFrame, insets: nextInsets },\n      } = event;\n\n      if (\n        // Backwards compat with old native code that won't send frame.\n        nextFrame &&\n        (nextFrame.height !== frame.height ||\n          nextFrame.width !== frame.width ||\n          nextFrame.x !== frame.x ||\n          nextFrame.y !== frame.y)\n      ) {\n        setFrame(nextFrame);\n      }\n\n      if (\n        !insets ||\n        nextInsets.bottom !== insets.bottom ||\n        nextInsets.left !== insets.left ||\n        nextInsets.right !== insets.right ||\n        nextInsets.top !== insets.top\n      ) {\n        setInsets(nextInsets);\n      }\n    },\n    [frame, insets],\n  );\n\n  return (\n    <NativeSafeAreaProvider\n      style={[styles.fill, style]}\n      onInsetsChange={onInsetsChange}\n      {...others}\n    >\n      {insets != null ? (\n        <SafeAreaFrameContext.Provider value={frame}>\n          <SafeAreaInsetsContext.Provider value={insets}>\n            {children}\n          </SafeAreaInsetsContext.Provider>\n        </SafeAreaFrameContext.Provider>\n      ) : null}\n    </NativeSafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nfunction useParentSafeAreaInsets(): EdgeInsets | null {\n  return React.useContext(SafeAreaInsetsContext);\n}\n\nfunction useParentSafeAreaFrame(): Rect | null {\n  return React.useContext(SafeAreaFrameContext);\n}\n\nconst NO_INSETS_ERROR =\n  'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.';\n\nexport function useSafeAreaInsets(): EdgeInsets {\n  const safeArea = React.useContext(SafeAreaInsetsContext);\n  if (safeArea == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return safeArea;\n}\n\nexport function useSafeAreaFrame(): Rect {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return frame;\n}\n\nexport type WithSafeAreaInsetsProps = {\n  insets: EdgeInsets;\n};\n\nexport function withSafeAreaInsets<T>(\n  WrappedComponent: React.ComponentType<T & WithSafeAreaInsetsProps>,\n): React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<T> & React.RefAttributes<unknown>\n> {\n  return React.forwardRef((props: T, ref: React.Ref<unknown>) => (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets == null) {\n          throw new Error(NO_INSETS_ERROR);\n        }\n        return <WrappedComponent {...props} insets={insets} ref={ref} />;\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  ));\n}\n\n/**\n * @deprecated\n */\nexport function useSafeArea(): EdgeInsets {\n  return useSafeAreaInsets();\n}\n\n/**\n * @deprecated\n */\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n\n/**\n * @deprecated\n */\nexport const SafeAreaContext = SafeAreaInsetsContext;\n","import * as React from 'react';\nimport type { NativeSafeAreaViewProps } from './SafeArea.types';\nimport NativeSafeAreaView from './specs/NativeSafeAreaView';\n\ntype NativeSafeAreaViewInstance = InstanceType<typeof NativeSafeAreaView>;\n\nexport type SafeAreaViewProps = NativeSafeAreaViewProps;\n\nexport const SafeAreaView: React.ForwardRefExoticComponent<\n  SafeAreaViewProps & React.RefAttributes<NativeSafeAreaViewInstance>\n> = React.forwardRef<NativeSafeAreaViewInstance, SafeAreaViewProps>(\n  ({ edges, ...props }, ref) => {\n    return (\n      <NativeSafeAreaView\n        {...props}\n        // Codegen doesn't support default values for array types so\n        // set it here.\n        edges={edges ?? ['bottom', 'left', 'right', 'top']}\n        ref={ref}\n      />\n    );\n  },\n);\n","export * from './SafeAreaContext';\nexport * from './SafeAreaView';\nexport * from './InitialWindow';\nexport * from './SafeArea.types';\n","import type { Double } from 'react-native/Libraries/Types/CodegenTypes';\n// @ts-expect-error: missing type definition for module\nimport type { TurboModule } from 'react-native/Libraries/TurboModule/RCTExport';\n// @ts-expect-error: missing type definition for module\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getConstants: () => {\n    initialWindowMetrics?: {\n      insets: {\n        top: Double;\n        right: Double;\n        bottom: Double;\n        left: Double;\n      };\n      frame: {\n        x: Double;\n        y: Double;\n        width: Double;\n        height: Double;\n      };\n    };\n  };\n}\n\nexport default TurboModuleRegistry.get<Spec>('RNCSafeAreaContext');\n","import type {\n  DirectEventHandler,\n  Double,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, HostComponent } from 'react-native';\n\nexport type Event = Readonly<{\n  insets: Readonly<{\n    top: Double;\n    right: Double;\n    bottom: Double;\n    left: Double;\n  }>;\n  frame: Readonly<{\n    x: Double;\n    y: Double;\n    width: Double;\n    height: Double;\n  }>;\n}>;\n\nexport interface NativeProps extends ViewProps {\n  onInsetsChange?: DirectEventHandler<Event, 'paperInsetsChange'>;\n}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNCSafeAreaProvider',\n) as HostComponent<NativeProps>;\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { WithDefault } from 'react-native/Libraries/Types/CodegenTypes';\nimport type { ViewProps, HostComponent } from 'react-native';\n\nexport interface NativeProps extends ViewProps {\n  mode?: WithDefault<'padding' | 'margin', 'padding'>;\n  // Should be `'top' | 'right' | 'bottom' | 'left'` but that generates invalid code.\n  edges?: readonly string[];\n}\n\nexport default codegenNativeComponent<NativeProps>('RNCSafeAreaView', {\n  interfaceOnly: true,\n}) as HostComponent<NativeProps>;\n","import * as React from 'react';\nimport { Animated } from 'react-native';\n\ntype TransitionProgressContextBody = {\n  progress: Animated.Value;\n  closing: Animated.Value;\n  goingForward: Animated.Value;\n};\n\nexport default React.createContext<TransitionProgressContextBody | undefined>(\n  undefined\n);\n","import React from 'react';\nimport {\n  Animated,\n  Image,\n  ImageProps,\n  Platform,\n  requireNativeComponent,\n  StyleSheet,\n  UIManager,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Freeze } from 'react-freeze';\nimport { version } from 'react-native/package.json';\n\nimport TransitionProgressContext from './TransitionProgressContext';\nimport useTransitionProgress from './useTransitionProgress';\nimport {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n} from './types';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n} from './utils';\n\n// web implementation is taken from `index.tsx`\nconst isPlatformSupported =\n  Platform.OS === 'ios' ||\n  Platform.OS === 'android' ||\n  Platform.OS === 'windows';\n\nlet ENABLE_SCREENS = isPlatformSupported;\n\nfunction enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = isPlatformSupported && shouldEnableScreens;\n  if (ENABLE_SCREENS && !UIManager.getViewManagerConfig('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\nlet ENABLE_FREEZE = false;\n\nfunction enableFreeze(shouldEnableReactFreeze = true): void {\n  const minor = parseInt(version.split('.')[1]); // eg. takes 66 from '0.66.0'\n\n  // react-freeze requires react-native >=0.64, react-native from main is 0.0.0\n  if (!(minor === 0 || minor >= 64) && shouldEnableReactFreeze) {\n    console.warn(\n      'react-freeze library requires at least react-native 0.64. Please upgrade your react-native version in order to use this feature.'\n    );\n  }\n\n  ENABLE_FREEZE = shouldEnableReactFreeze;\n}\n\n// const that tells if the library should use new implementation, will be undefined for older versions\nconst shouldUseActivityState = true;\n\nfunction screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\n// We initialize these lazily so that importing the module doesn't throw error when not linked\n// This is necessary coz libraries such as React Navigation import the library where it may not be enabled\nlet NativeScreenValue: React.ComponentType<ScreenProps>;\nlet NativeScreenContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenNavigationContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenStack: React.ComponentType<ScreenStackProps>;\nlet NativeScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps>;\nlet NativeScreenStackHeaderSubview: React.ComponentType<React.PropsWithChildren<\n  ViewProps & { type?: HeaderSubviewTypes }\n>>;\nlet AnimatedNativeScreen: React.ComponentType<ScreenProps>;\nlet NativeSearchBar: React.ComponentType<SearchBarProps>;\nlet NativeFullWindowOverlay: React.ComponentType<View>;\n\nconst ScreensNativeModules = {\n  get NativeScreen() {\n    NativeScreenValue =\n      NativeScreenValue || requireNativeComponent('RNSScreen');\n    return NativeScreenValue;\n  },\n\n  get NativeScreenContainer() {\n    NativeScreenContainerValue =\n      NativeScreenContainerValue ||\n      requireNativeComponent('RNSScreenContainer');\n    return NativeScreenContainerValue;\n  },\n\n  get NativeScreenNavigationContainer() {\n    NativeScreenNavigationContainerValue =\n      NativeScreenNavigationContainerValue ||\n      (Platform.OS === 'ios'\n        ? requireNativeComponent('RNSScreenNavigationContainer')\n        : this.NativeScreenContainer);\n    return NativeScreenNavigationContainerValue;\n  },\n\n  get NativeScreenStack() {\n    NativeScreenStack =\n      NativeScreenStack || requireNativeComponent('RNSScreenStack');\n    return NativeScreenStack;\n  },\n\n  get NativeScreenStackHeaderConfig() {\n    NativeScreenStackHeaderConfig =\n      NativeScreenStackHeaderConfig ||\n      requireNativeComponent('RNSScreenStackHeaderConfig');\n    return NativeScreenStackHeaderConfig;\n  },\n\n  get NativeScreenStackHeaderSubview() {\n    NativeScreenStackHeaderSubview =\n      NativeScreenStackHeaderSubview ||\n      requireNativeComponent('RNSScreenStackHeaderSubview');\n    return NativeScreenStackHeaderSubview;\n  },\n\n  get NativeSearchBar() {\n    NativeSearchBar = NativeSearchBar || requireNativeComponent('RNSSearchBar');\n    return NativeSearchBar;\n  },\n\n  get NativeFullWindowOverlay() {\n    NativeFullWindowOverlay =\n      NativeFullWindowOverlay || requireNativeComponent('RNSFullWindowOverlay');\n    return NativeFullWindowOverlay;\n  },\n};\n\ninterface FreezeWrapperProps {\n  freeze: boolean;\n  children: React.ReactNode;\n}\n\n// This component allows one more render before freezing the screen.\n// Allows activityState to reach the native side and useIsFocused to work correctly.\nfunction DelayedFreeze({ freeze, children }: FreezeWrapperProps) {\n  // flag used for determining whether freeze should be enabled\n  const [freezeState, setFreezeState] = React.useState(false);\n\n  if (freeze !== freezeState) {\n    // setImmediate is executed at the end of the JS execution block.\n    // Used here for changing the state right after the render.\n    setImmediate(() => {\n      setFreezeState(freeze);\n    });\n  }\n\n  return <Freeze freeze={freeze ? freezeState : false}>{children}</Freeze>;\n}\n\nfunction ScreenStack(props: ScreenStackProps) {\n  const { children, ...rest } = props;\n  const size = React.Children.count(children);\n  // freezes all screens except the top one\n  const childrenWithFreeze = React.Children.map(children, (child, index) => {\n    // @ts-expect-error it's either SceneView in v6 or RouteView in v5\n    const { props, key } = child;\n    const descriptor = props?.descriptor ?? props?.descriptors?.[key];\n    const freezeEnabled = descriptor?.options?.freezeOnBlur ?? ENABLE_FREEZE;\n\n    return (\n      <DelayedFreeze freeze={freezeEnabled && size - index > 1}>\n        {child}\n      </DelayedFreeze>\n    );\n  });\n\n  return (\n    <ScreensNativeModules.NativeScreenStack {...rest}>\n      {childrenWithFreeze}\n    </ScreensNativeModules.NativeScreenStack>\n  );\n}\n\n// Incomplete type, all accessible properties available at:\n// react-native/Libraries/Components/View/ReactNativeViewViewConfig.js\ninterface ViewConfig extends View {\n  viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n}\n\nclass InnerScreen extends React.Component<ScreenProps> {\n  private ref: React.ElementRef<typeof View> | null = null;\n  private closing = new Animated.Value(0);\n  private progress = new Animated.Value(0);\n  private goingForward = new Animated.Value(0);\n\n  setNativeProps(props: ScreenProps): void {\n    this.ref?.setNativeProps(props);\n  }\n\n  setRef = (ref: React.ElementRef<typeof View> | null): void => {\n    this.ref = ref;\n    this.props.onComponentRef?.(ref);\n  };\n\n  render() {\n    const {\n      enabled = ENABLE_SCREENS,\n      freezeOnBlur = ENABLE_FREEZE,\n      ...rest\n    } = this.props;\n\n    if (enabled && isPlatformSupported) {\n      AnimatedNativeScreen =\n        AnimatedNativeScreen ||\n        Animated.createAnimatedComponent(ScreensNativeModules.NativeScreen);\n\n      let {\n        // Filter out active prop in this case because it is unused and\n        // can cause problems depending on react-native version:\n        // https://github.com/react-navigation/react-navigation/issues/4886\n        active,\n        activityState,\n        children,\n        isNativeStack,\n        gestureResponseDistance,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        console.warn(\n          'It appears that you are using old version of react-navigation library. Please update @react-navigation/bottom-tabs, @react-navigation/stack and @react-navigation/drawer to version 5.10.0 or above to take full advantage of new functionality added to react-native-screens'\n        );\n        activityState = active !== 0 ? 2 : 0; // in the new version, we need one of the screens to have value of 2 after the transition\n      }\n\n      const handleRef = (ref: ViewConfig) => {\n        if (ref?.viewConfig?.validAttributes?.style) {\n          ref.viewConfig.validAttributes.style = {\n            ...ref.viewConfig.validAttributes.style,\n            display: false,\n          };\n          this.setRef(ref);\n        }\n      };\n\n      return (\n        <DelayedFreeze freeze={freezeOnBlur && activityState === 0}>\n          <AnimatedNativeScreen\n            {...props}\n            activityState={activityState}\n            gestureResponseDistance={{\n              start: gestureResponseDistance?.start ?? -1,\n              end: gestureResponseDistance?.end ?? -1,\n              top: gestureResponseDistance?.top ?? -1,\n              bottom: gestureResponseDistance?.bottom ?? -1,\n            }}\n            // This prevents showing blank screen when navigating between multiple screens with freezing\n            // https://github.com/software-mansion/react-native-screens/pull/1208\n            ref={handleRef}\n            onTransitionProgress={\n              !isNativeStack\n                ? undefined\n                : Animated.event(\n                    [\n                      {\n                        nativeEvent: {\n                          progress: this.progress,\n                          closing: this.closing,\n                          goingForward: this.goingForward,\n                        },\n                      },\n                    ],\n                    { useNativeDriver: true }\n                  )\n            }>\n            {!isNativeStack ? ( // see comment of this prop in types.tsx for information why it is needed\n              children\n            ) : (\n              <TransitionProgressContext.Provider\n                value={{\n                  progress: this.progress,\n                  closing: this.closing,\n                  goingForward: this.goingForward,\n                }}>\n                {children}\n              </TransitionProgressContext.Provider>\n            )}\n          </AnimatedNativeScreen>\n        </DelayedFreeze>\n      );\n    } else {\n      // same reason as above\n      let {\n        active,\n        activityState,\n        style,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onComponentRef,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0;\n      }\n      return (\n        <Animated.View\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          ref={this.setRef}\n          {...props}\n        />\n      );\n    }\n  }\n}\n\nfunction ScreenContainer(props: ScreenContainerProps) {\n  const { enabled = ENABLE_SCREENS, hasTwoStates, ...rest } = props;\n\n  if (enabled && isPlatformSupported) {\n    if (hasTwoStates) {\n      return <ScreensNativeModules.NativeScreenNavigationContainer {...rest} />;\n    }\n    return <ScreensNativeModules.NativeScreenContainer {...rest} />;\n  }\n  return <View {...rest} />;\n}\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst ScreenStackHeaderBackButtonImage = (props: ImageProps): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    type=\"back\"\n    style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreensNativeModules.NativeScreenStackHeaderSubview>\n);\n\nconst ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"searchBar\"\n    style={styles.headerSubview}\n  />\n);\n\nexport type {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n};\n\n// context to be used when the user wants to use enhanced implementation\n// e.g. to use `useReanimatedTransitionProgress` (see `reanimated` folder in repo)\nconst ScreenContext = React.createContext(InnerScreen);\n\nclass Screen extends React.Component<ScreenProps> {\n  static contextType = ScreenContext;\n\n  render() {\n    const ScreenWrapper = this.context || InnerScreen;\n    return <ScreenWrapper {...this.props} />;\n  }\n}\n\nmodule.exports = {\n  // these are classes so they are not evaluated until used\n  // so no need to use getters for them\n  Screen,\n  ScreenContainer,\n  ScreenContext,\n  ScreenStack,\n  InnerScreen,\n\n  get NativeScreen() {\n    return ScreensNativeModules.NativeScreen;\n  },\n\n  get NativeScreenContainer() {\n    return ScreensNativeModules.NativeScreenContainer;\n  },\n\n  get NativeScreenNavigationContainer() {\n    return ScreensNativeModules.NativeScreenNavigationContainer;\n  },\n\n  get ScreenStackHeaderConfig() {\n    return ScreensNativeModules.NativeScreenStackHeaderConfig;\n  },\n  get ScreenStackHeaderSubview() {\n    return ScreensNativeModules.NativeScreenStackHeaderSubview;\n  },\n  get SearchBar() {\n    if (!isSearchBarAvailableForCurrentPlatform) {\n      console.warn(\n        'Importing SearchBar is only valid on iOS and Android devices.'\n      );\n      return View;\n    }\n\n    return ScreensNativeModules.NativeSearchBar;\n  },\n  get FullWindowOverlay() {\n    if (Platform.OS !== 'ios') {\n      console.warn('Importing FullWindowOverlay is only valid on iOS devices.');\n      return View;\n    }\n\n    return ScreensNativeModules.NativeFullWindowOverlay;\n  },\n  // these are functions and will not be evaluated until used\n  // so no need to use getters for them\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderSearchBarView,\n\n  enableScreens,\n  enableFreeze,\n  screensEnabled,\n  shouldUseActivityState,\n  useTransitionProgress,\n\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n};\n","import * as React from 'react';\n\nimport TransitionProgressContext from './TransitionProgressContext';\n\nexport default function useTransitionProgress() {\n  const progress = React.useContext(TransitionProgressContext);\n\n  if (progress === undefined) {\n    throw new Error(\n      \"Couldn't find values for transition progress. Are you inside a screen in Native Stack?\"\n    );\n  }\n\n  return progress;\n}\n","import { BackHandler, Platform } from 'react-native';\n\nexport const isSearchBarAvailableForCurrentPlatform = [\n  'ios',\n  'android',\n].includes(Platform.OS);\n\nexport function executeNativeBackPress() {\n  // This function invokes the native back press event\n  BackHandler.exitApp();\n  return true;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nmodule.exports = require('@react-native/assets/registry');\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar useIsomorphicLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook which returns the latest callback without changing the reference.\n */\nfunction useLatestCallback(callback) {\n    var ref = React.useRef(callback);\n    var latestCallback = React.useRef(function latestCallback() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // eslint-disable-next-line babel/no-invalid-this\n        return ref.current.apply(this, args);\n    }).current;\n    useIsomorphicLayoutEffect(function () {\n        ref.current = callback;\n    });\n    return latestCallback;\n}\nexports.default = useLatestCallback;\n","const DEV = process.env.NODE_ENV !== \"production\";\n\nconst warnings = new Set();\n\nfunction warnOnce(condition, ...rest) {\n  if (DEV && condition) {\n    const key = rest.join(\" \");\n\n    if (warnings.has(key)) {\n      return;\n    }\n\n    warnings.add(key);\n    console.warn(...rest);\n  }\n}\n\nmodule.exports = warnOnce;\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet }\n"],"names":["AssetRegistry","module","exports","registerAsset","__packager_asset","scales","name","type","hash","httpServerLocation","height","width","Script","constructor","scriptId","caller","locator","cache","shouldRefetch","cachedData","this","method","url","query","shallowEqual","headers","body","some","diff","getCacheData","toObject","webpackContext","p","u","options","excludeExtension","key","fetch","Headers","forEach","value","toLowerCase","FormData","bodyObject","console","warn","JSON","stringify","URLSearchParams","undefined","Error","absolute","timeout","DEFAULT_TIMEOUT","toString","Object","keys","length","CACHE_KEY","ScriptManager","nativeScriptManager","NativeModules","cacheInitialized","resolvers","__webpack_require__","repack","shared","scriptManager","loadScriptCallback","push","parentPush","data","emit","bind","__destroy","Array","prototype","setStorage","storage","addResolver","resolver","priority","concat","sort","a","removeResolver","index","findIndex","splice","removeAllResolvers","parse","getItem","setItem","handleError","error","message","args","originalError","getWebpackContext","initCache","resolve","script","from","cacheKey","saveCache","resolveScript","Promise","reject","onLoaded","on","loadScript","code","removeListener","catch","prefetchScript","scriptIds","ids","invalidateScripts","EventEmitter","containerName","scope","__webpack_share_scopes__","__isInitialized","__webpack_init_sharing__","self","container","init","factory","get","config","containers","replace","chunks","includes","Federated","b","Symbol","for","c","d","e","f","g","h","k","l","m","n","q","r","t","v","w","x","y","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","getPartialState","state","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","React","forwardRef","ref","initialState","onStateChange","onUnhandledAction","independent","children","useContext","NavigationStateContext","isDefault","useSyncState","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","useChildListeners","listeners","addListener","useKeyedChildListeners","keyedListeners","addKeyedListener","dispatch","action","focus","NOT_INITIALIZED_ERROR","navigation","canGoBack","result","handled","resetRoot","target","root","CommonActions","reset","getRootState","getCurrentRoute","findFocusedRoute","emitter","useEventEmitter","useOptionsGetters","addOptionsGetter","getCurrentOptions","useMemo","reduce","acc","create","isFocused","getParent","stateRef","isReady","useImperativeHandle","onDispatchAction","noop","stack","stackRef","lastEmittedOptionsRef","onOptionsChange","builderContext","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","hydratedState","defaultOnUnhandledAction","element","Provider","ScheduleUpdateContext","createContext","register","currentKey","unregister","SingleNavigatorContext","_","MISSING_CONTEXT_ERROR","useState","nanoid","parentId","Map","preventedRoutesMap","setPreventedRoutesMap","NavigationHelpersContext","NavigationRouteContext","preventRemoveContextValue","PreventRemoveContext","setParentPrevented","setPreventRemove","useLatestCallback","id","routeKey","preventRemove","every","prevPrevented","nextPrevented","set","delete","isPrevented","values","preventedRoutes","transformPreventedRoutes","screen","routeState","clearOptions","getCurrentState","currentRoute","find","setCurrentState","child","ScreenComponent","getComponent","component","render","memo","props","prevProps","nextProps","prevPropKeys","nextPropKeys","duplicates","getRouteNames","location","currentLocation","routeName","o","checkSerializableWithoutCircularReference","Set","seen","serializable","call","isArray","reason","String","has","add","i","childResult","methods","event","callback","filter","cb","entries","Navigator","arguments","Group","Screen","hasOwnProperty","normalizedConfig","createNormalizedConfigItem","slice","initialRouteName","payload","screens","params","path","assign","initial","createNormalizedConfigs","CHILD_STATE","validatePathConfig","configs","allParams","pattern","focusedParams","focusedRoute","getActiveRoute","currentOptions","nestedRouteNames","hasNext","currentParams","fromEntries","split","startsWith","getParamName","nextRoute","nestedConfig","join","endsWith","encodeURIComponent","param","queryString","joinPaths","paths","Boolean","createConfigItem","parentPattern","exact","initialRoutes","parentScreens","remaining","segment","decodeURIComponent","createNestedStateObject","localeCompare","aParts","bParts","Math","max","aWildCard","bWildCard","it","match","matchAgainstConfigs","regex","RegExp","source","remainingPath","matchedParams","routeConfig","initials","pop","escape","findInitialRoute","sameParents","createStateObject","initialRoute","isEmpty","flatConfig","shift","nestedState","nestedStateIndex","parseQueryParams","findParseConfigForRoute","parseConfig","aKeys","bKeys","PrivateValueStore","listener","removed","indexOf","renderRef","NavigationContent","descriptors","CurrentRenderContext","screenOptions","defaultScreenOptions","onAction","onRouteFocus","router","setOptions","NavigationBuilderContext","navigations","useNavigationCache","useRouteCache","customOptions","curr","mergedOptions","listen","listenRef","callbacks","canPreventDefault","items","lastIndexOf","defineProperty","enumerable","defaultPrevented","defineProperties","preventDefault","effect","useNavigation","cleanup","destroy","unsubscribeFocus","unsubscribeBlur","NavigationContext","lastFocusedKeyRef","currentFocusedKey","lastFocusedKey","focusedListeners","setIsFocused","valueToReturn","useDebugValue","beforeRemove","NavigationContainerRefContext","createRouter","navigatorKey","useRegisterNavigator","screenListeners","rest","routeConfigs","getRouteConfigsFromChildren","routeKeyList","routeParamList","initialParams","routeGetIdList","getId","isStateValid","isStateInitialized","currentState","stateCleanedUp","cleanUpState","initialRouteParamList","initialParamsFromParams","getRehydratedState","getInitialState","initializedState","isFirstStateInitialization","previousRouteKeyListRef","previousRouteKeyList","nextState","isArrayEqual","isRecordEqual","getStateForRouteNamesChange","routeKeyChanges","previousNestedParamsRef","previousParams","navigate","updatedState","getStateForAction","shouldUpdate","useScheduleUpdate","setTimeout","initializedStateRef","useFocusEvents","childListeners","useOnAction","actionListeners","beforeRemoveListeners","routerConfigOptions","useOnRouteFocus","useNavigationHelpers","useFocusedListenersChildrenAdapter","useOnGetState","getStateListeners","useDescriptors","useCurrentRender","useComponent","isValidKey","groupKey","groupOptions","Children","toArray","isValidElement","navigationKey","actions","actionCreators","previous","thunk","withStack","process","helpers","createNavigationContainerRef","navigatorId","UnhandledActionContext","parentNavigationHelpers","op","navigationHelpers","goBack","selector","setResult","selectorRef","onActionParent","onRouteFocusParent","addListenerParent","routerConfigOptionsRef","visitedNavigators","shouldPreventRemove","shouldFocus","shouldActionChangeFocus","useOnPreventRemove","childState","VISITED_ROUTE_KEYS","currentRoutes","nextRoutes","nextRouteKeys","removedRoutes","reverse","visitedRouteKeys","beforeRemoveAction","sourceRouteKey","getStateForRouteFocus","optionsRef","optionsGettersFromChildRef","parentAddOptionsGetter","optionsChangeListener","hasChildren","getOptionsFromListener","optionsFromListener","getter","useRoute","usePreventRemoveContext","beforeRemoveListener","proxy","UNINTIALIZED_STATE","isSchedulingRef","isMountedRef","trackingState","setTrackingState","validKeys","invalidKeys","formatToList","style","colors","useTheme","View","flex","backgroundColor","background","insets","useSafeAreaInsets","frame","useSafeAreaFrame","isParentHeaderShown","HeaderShownContext","layout","modal","title","customTitle","headerTitle","headerTitleAlign","Platform","select","ios","default","headerLeft","headerLeftLabelVisible","headerTransparent","headerTintColor","headerBackground","headerRight","titleAllowFontScaling","headerTitleAllowFontScaling","titleStyle","headerTitleStyle","leftContainerStyle","headerLeftContainerStyle","rightContainerStyle","headerRightContainerStyle","titleContainerStyle","headerTitleContainerStyle","backgroundContainerStyle","headerBackgroundContainerStyle","customHeaderStyle","headerStyle","headerShadowVisible","headerPressColor","headerPressOpacity","headerStatusBarHeight","top","defaultHeight","getDefaultHeaderHeight","StyleSheet","flatten","minHeight","maxHeight","borderBottomColor","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderBottomWidth","borderColor","borderEndColor","borderEndWidth","borderLeftColor","borderLeftWidth","borderRadius","borderRightColor","borderRightWidth","borderStartColor","borderStartWidth","borderStyle","borderTopColor","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","borderTopWidth","borderWidth","boxShadow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","opacity","transform","safeStyles","styleProp","backgroundStyle","leftButton","tintColor","pressColor","pressOpacity","labelVisible","rightButton","Animated","pointerEvents","absoluteFill","zIndex","styles","content","left","expand","marginStart","maxWidth","right","allowFontScaling","marginEnd","flexDirection","alignItems","marginHorizontal","justifyContent","flexGrow","flexBasis","disabled","backImage","label","labelStyle","onLabelLayout","onPress","screenLayout","customTintColor","titleLayout","truncatedLabel","accessibilityLabel","testID","initialLabelWidth","setInitialLabelWidth","primary","text","handleLabelLayout","nativeEvent","accessible","accessibilityRole","requestAnimationFrame","android_ripple","borderless","hitSlop","bottom","Image","icon","iconWithLabel","require","fadeDuration","leftLabelText","labelElement","labelWrapper","minWidth","Text","onLayout","color","numberOfLines","OS","maskElement","iconMaskContainer","iconMask","iconMaskFillerRect","renderLabel","hairlineWidth","marginVertical","fontSize","letterSpacing","marginLeft","marginRight","resizeMode","scaleX","I18nManager","getConstants","isRTL","margin","alignSelf","getNamedContext","card","border","android","fontWeight","fontFamily","modalPresentation","statusBarHeight","headerHeight","isLandscape","isPad","isTV","fallback","HeaderHeightContext","isMaskedViewAvailable","RNCMaskedView","UIManager","getViewManagerConfig","size","onPressIn","onPressOut","dark","Value","animateTo","toValue","duration","ANDROID_SUPPORTS_RIPPLE","timing","easing","Easing","inOut","quad","useNativeDriver","start","AnimatedPressable","createAnimatedComponent","Pressable","Version","visible","hidden","display","collapsable","removeClippedSubviews","attached","detached","overflow","Dimensions","initialMetrics","initialWindowMetrics","SafeAreaProviderCompat","SafeAreaInsetsContext","Consumer","SafeAreaProvider","dimensions","parentHeaderHeight","focused","header","headerShown","setHeaderHeight","accessibilityElementsHidden","importantForAccessibility","position","initialValue","global","contexts","displayName","Assets","createNavigatorFactory","useNavigationBuilder","StackRouter","StackActions","popToTop","nextDismissedKey","setNextDismissedKey","dismissedRouteName","preventedRouteKey","preventedDescriptor","isHeaderBackButtonMenuEnabledOnPreventedScreen","headerBackButtonMenuEnabled","preventedRouteName","fontFamilies","fontFamilyProcessor","ReactNativeStyleAttributes","headerBackImageSource","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerBackVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerBlurEffect","headerSearchBarOptions","headerTopInsetEnabled","headerBackTitleStyleFlattened","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","processFonts","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","titleText","getHeaderTitle","titleColor","titleFontSize","titleFontWeight","headerTitleStyleSupported","headerLeftElement","headerRightElement","headerTitleElement","supportsHeaderSearchBar","isSearchBarAvailableForCurrentPlatform","SearchBar","hasHeaderSearchBar","backButtonInCustomView","translucent","ScreenStackHeaderConfig","backTitle","backTitleFontSize","blurEffect","direction","disableBackButtonMenu","hideBackButton","hideShadow","largeTitle","largeTitleBackgroundColor","largeTitleColor","largeTitleFontSize","largeTitleFontWeight","largeTitleHideShadow","topInsetEnabled","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","row","HeaderTitle","ScreenStackHeaderBackButtonImage","ScreenStackHeaderRightView","ScreenStackHeaderSearchBarView","NativeStackViewInner","isAndroid","MaybeNestedStack","presentation","contentStyle","isHeaderInModal","headerShownPreviousRef","warnOnce","stackPresentation","ScreenStack","enabled","SceneView","descriptor","previousDescriptor","nextDescriptor","onWillDisappear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","animationDuration","animationTypeForReplace","gestureEnabled","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","freezeOnBlur","animation","customAnimationOnGesture","fullScreenGestureEnabled","gestureDirection","nextGestureDirection","gestureDirectionOverride","isModal","isIPhone","parentHeaderBack","HeaderBackContext","topInset","defaultHeaderHeight","customHeaderHeight","setCustomHeaderHeight","headerBack","isRemovePrevented","customAnimationOnSwipe","fullScreenSwipeEnabled","homeIndicatorHidden","replaceAnimation","stackAnimation","screenOrientation","swipeDirection","transitionDuration","isNativeStack","nativeBackButtonDismissalEnabled","preventNativeDismiss","scene","back","useDismissedRouteError","useInvalidPreventRemoveError","previousKey","nextKey","closing","dismissCount","to","useLinkProps","createElement","web","onClick","LinkingContext","REACT_NAVIGATION_DEVTOOLS","WeakMap","theme","DefaultTheme","linking","documentTitle","onReady","isLinkingEnabled","refContainer","useBackButton","useDocumentTitle","useLinking","prefixes","getStateFromPath","getPathFromState","getActionFromState","useThenable","isResolved","linkingContext","onReadyRef","prefix","protocol","host","escapeStringRegexp","prefixRegex","normalizedURL","test","notification","ThemeContext","subscription","BackHandler","addEventListener","remove","getRootStateForNavigate","parent","parentState","linkTo","useLinkTo","getPathFromStateHelper","href","getStateFromParams","shouldHandle","metaKey","altKey","ctrlKey","shiftKey","button","currentTarget","getInitialURL","race","Linking","subscribe","removeEventListener","getStateFromPathDefault","getActionFromStateDefault","enabledRef","prefixesRef","filterRef","configRef","getInitialURLRef","getStateFromPathRef","getActionFromStateRef","getStateFromURL","extractPathFromURL","then","thenable","onfulfilled","rootState","tabNavigations","currentNavigation","unsubscribers","tab","isFirst","scrollable","getScrollResponder","getNode","getScrollableNode","scrollToTop","scrollTo","animated","scrollToOffset","offset","scrollResponderScrollTo","unsubscribe","promise","resolved","cancelled","defaultStatus","TabRouter","isDrawerInHistory","history","addDrawerToHistory","status","removeDrawerFromHistory","closeDrawer","openDrawer","DrawerActions","TabActions","toggleDrawer","BaseRouter","min","count","merge","backBehavior","getRouteHistory","changeIndex","TYPE_ROUTE","jumpTo","initialRouteIndex","unshift","freeze","placeholder","Suspender","promiseCache","NativeSafeAreaContext","initialWindowSafeAreaInsets","initialSafeAreaInsets","others","parentInsets","parentFrame","SafeAreaFrameContext","setInsets","setFrame","onInsetsChange","nextFrame","nextInsets","NativeSafeAreaProvider","fill","NO_INSETS_ERROR","WrappedComponent","safeArea","SafeAreaConsumer","SafeAreaContext","SafeAreaView","edges","codegenNativeComponent","interfaceOnly","isPlatformSupported","ENABLE_SCREENS","ENABLE_FREEZE","NativeScreenValue","NativeScreenContainerValue","NativeScreenNavigationContainerValue","NativeScreenStack","NativeScreenStackHeaderConfig","NativeScreenStackHeaderSubview","AnimatedNativeScreen","NativeSearchBar","NativeFullWindowOverlay","ScreensNativeModules","NativeScreen","requireNativeComponent","NativeScreenContainer","NativeScreenNavigationContainer","DelayedFreeze","freezeState","setFreezeState","setImmediate","Freeze","InnerScreen","progress","goingForward","setRef","onComponentRef","setNativeProps","active","activityState","gestureResponseDistance","end","viewConfig","validAttributes","onTransitionProgress","Component","headerSubview","ScreenContext","ScreenWrapper","contextType","ScreenContainer","hasTwoStates","childrenWithFreeze","freezeEnabled","ScreenStackHeaderSubview","FullWindowOverlay","enableScreens","shouldEnableScreens","enableFreeze","shouldEnableReactFreeze","minor","parseInt","version","screensEnabled","shouldUseActivityState","useTransitionProgress","executeNativeBackPress","TransitionProgressContext","exitApp","token","singleMatcher","multiMatcher","decodeComponents","components","err","decode","input","tokens","encodedURI","TypeError","replaceMap","exec","customDecodeURIComponent","string","ReflectOwnKeys","R","Reflect","ReflectApply","apply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","isNaN","once","errorListener","eventTargetAgnosticAddListener","handler","flags","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","warned","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","wrapListener","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","len","prependListener","prependOnceListener","list","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","obj","predicate","isArr","val","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","validateArrayFormatSeparator","encode","strict","keysSorter","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","trim","parseBooleans","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","item","arrayValue","parserForArrayFormat","object","shouldFilter","skipNull","skipEmptyString","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url_","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","getHash","pick","exclude","exclusionFilter","objA","objB","compare","compareContext","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","separator","separatorIndex","str","charCodeAt","toUpperCase","__createBinding","k2","__setModuleDefault","__importStar","mod","__esModule","useIsomorphicLayoutEffect","document","useLayoutEffect","latestCallback","_i","condition","random","customAlphabet","alphabet","defaultSize"],"sourceRoot":""}